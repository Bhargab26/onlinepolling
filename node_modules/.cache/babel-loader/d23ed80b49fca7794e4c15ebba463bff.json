{"ast":null,"code":"import { parseQueryString } from \"./url\";\nexport function isWalletConnectSession(object) {\n  return typeof object.bridge !== \"undefined\";\n}\nexport function parseWalletConnectUri(str) {\n  var pathStart = str.indexOf(\":\");\n  var pathEnd = str.indexOf(\"?\") !== -1 ? str.indexOf(\"?\") : undefined;\n  var protocol = str.substring(0, pathStart);\n  var path = str.substring(pathStart + 1, pathEnd);\n\n  function parseRequiredParams(path) {\n    var separator = \"@\";\n    var values = path.split(separator);\n    var requiredParams = {\n      handshakeTopic: values[0],\n      version: parseInt(values[1], 10)\n    };\n    return requiredParams;\n  }\n\n  var requiredParams = parseRequiredParams(path);\n  var queryString = typeof pathEnd !== \"undefined\" ? str.substr(pathEnd) : \"\";\n\n  function parseQueryParams(queryString) {\n    var result = parseQueryString(queryString);\n    var parameters = {\n      key: result.key || \"\",\n      bridge: result.bridge || \"\"\n    };\n    return parameters;\n  }\n\n  var queryParams = parseQueryParams(queryString);\n  var result = Object.assign(Object.assign({\n    protocol: protocol\n  }, requiredParams), queryParams);\n  return result;\n}","map":{"version":3,"sources":["../../src/session.ts"],"names":[],"mappings":"AAMA,SAAS,gBAAT,QAAiC,OAAjC;AAEA,OAAM,SAAU,sBAAV,CAAiC,MAAjC,EAA4C;EAChD,OAAO,OAAO,MAAM,CAAC,MAAd,KAAyB,WAAhC;AACD;AAED,OAAM,SAAU,qBAAV,CAAgC,GAAhC,EAA2C;EAC/C,IAAM,SAAS,GAAW,GAAG,CAAC,OAAJ,CAAY,GAAZ,CAA1B;EAEA,IAAM,OAAO,GAAuB,GAAG,CAAC,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAAtB,GAA0B,GAAG,CAAC,OAAJ,CAAY,GAAZ,CAA1B,GAA6C,SAAjF;EAEA,IAAM,QAAQ,GAAW,GAAG,CAAC,SAAJ,CAAc,CAAd,EAAiB,SAAjB,CAAzB;EAEA,IAAM,IAAI,GAAW,GAAG,CAAC,SAAJ,CAAc,SAAS,GAAG,CAA1B,EAA6B,OAA7B,CAArB;;EAEA,SAAS,mBAAT,CAA6B,IAA7B,EAAyC;IACvC,IAAM,SAAS,GAAG,GAAlB;IAEA,IAAM,MAAM,GAAG,IAAI,CAAC,KAAL,CAAW,SAAX,CAAf;IAEA,IAAM,cAAc,GAAG;MACrB,cAAc,EAAE,MAAM,CAAC,CAAD,CADD;MAErB,OAAO,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ;IAFI,CAAvB;IAKA,OAAO,cAAP;EACD;;EAED,IAAM,cAAc,GAA0B,mBAAmB,CAAC,IAAD,CAAjE;EAEA,IAAM,WAAW,GAAW,OAAO,OAAP,KAAmB,WAAnB,GAAiC,GAAG,CAAC,MAAJ,CAAW,OAAX,CAAjC,GAAuD,EAAnF;;EAEA,SAAS,gBAAT,CAA0B,WAA1B,EAA6C;IAC3C,IAAM,MAAM,GAAG,gBAAgB,CAAC,WAAD,CAA/B;IAEA,IAAM,UAAU,GAAuB;MACrC,GAAG,EAAE,MAAM,CAAC,GAAP,IAAc,EADkB;MAErC,MAAM,EAAE,MAAM,CAAC,MAAP,IAAiB;IAFY,CAAvC;IAKA,OAAO,UAAP;EACD;;EAED,IAAM,WAAW,GAAuB,gBAAgB,CAAC,WAAD,CAAxD;EAEA,IAAM,MAAM,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA;IACV,QAAQ,EAAR;EADU,CAAA,EAEP,cAFO,CAAA,EAGP,WAHO,CAAZ;EAMA,OAAO,MAAP;AACD","sourceRoot":"","sourcesContent":["import { parseQueryString } from \"./url\";\nexport function isWalletConnectSession(object) {\n    return typeof object.bridge !== \"undefined\";\n}\nexport function parseWalletConnectUri(str) {\n    const pathStart = str.indexOf(\":\");\n    const pathEnd = str.indexOf(\"?\") !== -1 ? str.indexOf(\"?\") : undefined;\n    const protocol = str.substring(0, pathStart);\n    const path = str.substring(pathStart + 1, pathEnd);\n    function parseRequiredParams(path) {\n        const separator = \"@\";\n        const values = path.split(separator);\n        const requiredParams = {\n            handshakeTopic: values[0],\n            version: parseInt(values[1], 10),\n        };\n        return requiredParams;\n    }\n    const requiredParams = parseRequiredParams(path);\n    const queryString = typeof pathEnd !== \"undefined\" ? str.substr(pathEnd) : \"\";\n    function parseQueryParams(queryString) {\n        const result = parseQueryString(queryString);\n        const parameters = {\n            key: result.key || \"\",\n            bridge: result.bridge || \"\",\n        };\n        return parameters;\n    }\n    const queryParams = parseQueryParams(queryString);\n    const result = Object.assign(Object.assign({ protocol }, requiredParams), queryParams);\n    return result;\n}\n//# sourceMappingURL=session.js.map"]},"metadata":{},"sourceType":"module"}