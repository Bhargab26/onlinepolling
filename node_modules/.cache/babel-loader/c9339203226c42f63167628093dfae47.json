{"ast":null,"code":"var _regeneratorRuntime = require(\"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _assertThisInitialized = require(\"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\n\nvar _get = require(\"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/get.js\").default;\n\nvar _getPrototypeOf = require(\"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\n\nvar _inherits = require(\"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar EthQuery = require('eth-query');\n\nvar pify = require('pify');\n\nvar SafeEventEmitter = require('safe-event-emitter');\n\nvar sec = 1000;\n\nvar calculateSum = function calculateSum(accumulator, currentValue) {\n  return accumulator + currentValue;\n};\n\nvar blockTrackerEvents = ['sync', 'latest'];\n\nvar BaseBlockTracker = /*#__PURE__*/function (_SafeEventEmitter) {\n  \"use strict\";\n\n  _inherits(BaseBlockTracker, _SafeEventEmitter);\n\n  var _super = _createSuper(BaseBlockTracker);\n\n  //\n  // public\n  //\n  function BaseBlockTracker() {\n    var _this;\n\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, BaseBlockTracker);\n\n    _this = _super.call(this); // config\n\n    _this._blockResetDuration = opts.blockResetDuration || 20 * sec; // state\n\n    _this._blockResetTimeout;\n    _this._currentBlock = null;\n    _this._isRunning = false; // bind functions for internal use\n\n    _this._onNewListener = _this._onNewListener.bind(_assertThisInitialized(_this));\n    _this._onRemoveListener = _this._onRemoveListener.bind(_assertThisInitialized(_this));\n    _this._resetCurrentBlock = _this._resetCurrentBlock.bind(_assertThisInitialized(_this)); // listen for handler changes\n\n    _this._setupInternalEvents();\n\n    return _this;\n  }\n\n  _createClass(BaseBlockTracker, [{\n    key: \"isRunning\",\n    value: function isRunning() {\n      return this._isRunning;\n    }\n  }, {\n    key: \"getCurrentBlock\",\n    value: function getCurrentBlock() {\n      return this._currentBlock;\n    }\n  }, {\n    key: \"getLatestBlock\",\n    value: function () {\n      var _getLatestBlock = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this2 = this;\n\n        var latestBlock;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this._currentBlock) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this._currentBlock);\n\n              case 2:\n                _context.next = 4;\n                return new Promise(function (resolve) {\n                  return _this2.once('latest', resolve);\n                });\n\n              case 4:\n                latestBlock = _context.sent;\n                return _context.abrupt(\"return\", latestBlock);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getLatestBlock() {\n        return _getLatestBlock.apply(this, arguments);\n      }\n\n      return getLatestBlock;\n    }() // dont allow module consumer to remove our internal event listeners\n\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners(eventName) {\n      // perform default behavior, preserve fn arity\n      if (eventName) {\n        _get(_getPrototypeOf(BaseBlockTracker.prototype), \"removeAllListeners\", this).call(this, eventName);\n      } else {\n        _get(_getPrototypeOf(BaseBlockTracker.prototype), \"removeAllListeners\", this).call(this);\n      } // re-add internal events\n\n\n      this._setupInternalEvents(); // trigger stop check just in case\n\n\n      this._onRemoveListener();\n    } //\n    // to be implemented in subclass\n    //\n\n  }, {\n    key: \"_start\",\n    value: function _start() {// default behavior is noop\n    }\n  }, {\n    key: \"_end\",\n    value: function _end() {// default behavior is noop\n    } //\n    // private\n    //\n\n  }, {\n    key: \"_setupInternalEvents\",\n    value: function _setupInternalEvents() {\n      // first remove listeners for idempotence\n      this.removeListener('newListener', this._onNewListener);\n      this.removeListener('removeListener', this._onRemoveListener); // then add them\n\n      this.on('newListener', this._onNewListener);\n      this.on('removeListener', this._onRemoveListener);\n    }\n  }, {\n    key: \"_onNewListener\",\n    value: function _onNewListener(eventName, handler) {\n      // `newListener` is called *before* the listener is added\n      if (!blockTrackerEvents.includes(eventName)) return;\n\n      this._maybeStart();\n    }\n  }, {\n    key: \"_onRemoveListener\",\n    value: function _onRemoveListener(eventName, handler) {\n      // `removeListener` is called *after* the listener is removed\n      if (this._getBlockTrackerEventCount() > 0) return;\n\n      this._maybeEnd();\n    }\n  }, {\n    key: \"_maybeStart\",\n    value: function _maybeStart() {\n      if (this._isRunning) return;\n      this._isRunning = true; // cancel setting latest block to stale\n\n      this._cancelBlockResetTimeout();\n\n      this._start();\n    }\n  }, {\n    key: \"_maybeEnd\",\n    value: function _maybeEnd() {\n      if (!this._isRunning) return;\n      this._isRunning = false;\n\n      this._setupBlockResetTimeout();\n\n      this._end();\n    }\n  }, {\n    key: \"_getBlockTrackerEventCount\",\n    value: function _getBlockTrackerEventCount() {\n      var _this3 = this;\n\n      return blockTrackerEvents.map(function (eventName) {\n        return _this3.listenerCount(eventName);\n      }).reduce(calculateSum);\n    }\n  }, {\n    key: \"_newPotentialLatest\",\n    value: function _newPotentialLatest(newBlock) {\n      var currentBlock = this._currentBlock; // only update if blok number is higher\n\n      if (currentBlock && hexToInt(newBlock) <= hexToInt(currentBlock)) return;\n\n      this._setCurrentBlock(newBlock);\n    }\n  }, {\n    key: \"_setCurrentBlock\",\n    value: function _setCurrentBlock(newBlock) {\n      var oldBlock = this._currentBlock;\n      this._currentBlock = newBlock;\n      this.emit('latest', newBlock);\n      this.emit('sync', {\n        oldBlock: oldBlock,\n        newBlock: newBlock\n      });\n    }\n  }, {\n    key: \"_setupBlockResetTimeout\",\n    value: function _setupBlockResetTimeout() {\n      // clear any existing timeout\n      this._cancelBlockResetTimeout(); // clear latest block when stale\n\n\n      this._blockResetTimeout = setTimeout(this._resetCurrentBlock, this._blockResetDuration); // nodejs - dont hold process open\n\n      if (this._blockResetTimeout.unref) {\n        this._blockResetTimeout.unref();\n      }\n    }\n  }, {\n    key: \"_cancelBlockResetTimeout\",\n    value: function _cancelBlockResetTimeout() {\n      clearTimeout(this._blockResetTimeout);\n    }\n  }, {\n    key: \"_resetCurrentBlock\",\n    value: function _resetCurrentBlock() {\n      this._currentBlock = null;\n    }\n  }]);\n\n  return BaseBlockTracker;\n}(SafeEventEmitter);\n\nmodule.exports = BaseBlockTracker;\n\nfunction hexToInt(hexInt) {\n  return Number.parseInt(hexInt, 16);\n}","map":{"version":3,"names":["EthQuery","require","pify","SafeEventEmitter","sec","calculateSum","accumulator","currentValue","blockTrackerEvents","BaseBlockTracker","opts","_blockResetDuration","blockResetDuration","_blockResetTimeout","_currentBlock","_isRunning","_onNewListener","bind","_onRemoveListener","_resetCurrentBlock","_setupInternalEvents","Promise","resolve","once","latestBlock","eventName","removeListener","on","handler","includes","_maybeStart","_getBlockTrackerEventCount","_maybeEnd","_cancelBlockResetTimeout","_start","_setupBlockResetTimeout","_end","map","listenerCount","reduce","newBlock","currentBlock","hexToInt","_setCurrentBlock","oldBlock","emit","setTimeout","unref","clearTimeout","module","exports","hexInt","Number","parseInt"],"sources":["C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/eth-block-tracker/src/base.js"],"sourcesContent":["const EthQuery = require('eth-query')\nconst pify = require('pify')\nconst SafeEventEmitter = require('safe-event-emitter')\n\nconst sec = 1000\n\nconst calculateSum = (accumulator, currentValue) => accumulator + currentValue\nconst blockTrackerEvents = ['sync', 'latest']\n\nclass BaseBlockTracker extends SafeEventEmitter {\n\n  //\n  // public\n  //\n\n  constructor (opts = {}) {\n    super()\n    // config\n    this._blockResetDuration = opts.blockResetDuration || 20 * sec\n    // state\n    this._blockResetTimeout\n    this._currentBlock = null\n    this._isRunning = false\n    // bind functions for internal use\n    this._onNewListener = this._onNewListener.bind(this)\n    this._onRemoveListener = this._onRemoveListener.bind(this)\n    this._resetCurrentBlock = this._resetCurrentBlock.bind(this)\n    // listen for handler changes\n    this._setupInternalEvents()\n  }\n\n  isRunning () {\n    return this._isRunning\n  }\n\n  getCurrentBlock () {\n    return this._currentBlock\n  }\n\n  async getLatestBlock () {\n    // return if available\n    if (this._currentBlock) return this._currentBlock\n    // wait for a new latest block\n    const latestBlock = await new Promise(resolve => this.once('latest', resolve))\n    // return newly set current block\n    return latestBlock\n  }\n\n  // dont allow module consumer to remove our internal event listeners\n  removeAllListeners (eventName) {\n    // perform default behavior, preserve fn arity\n    if (eventName) {\n      super.removeAllListeners(eventName)\n    } else {\n      super.removeAllListeners()\n    }\n    // re-add internal events\n    this._setupInternalEvents()\n    // trigger stop check just in case\n    this._onRemoveListener()\n  }\n\n  //\n  // to be implemented in subclass\n  //\n\n  _start () {\n    // default behavior is noop\n  }\n\n  _end () {\n    // default behavior is noop\n  }\n\n  //\n  // private\n  //\n\n  _setupInternalEvents () {\n    // first remove listeners for idempotence\n    this.removeListener('newListener', this._onNewListener)\n    this.removeListener('removeListener', this._onRemoveListener)\n    // then add them\n    this.on('newListener', this._onNewListener)\n    this.on('removeListener', this._onRemoveListener)\n  }\n\n  _onNewListener (eventName, handler) {\n    // `newListener` is called *before* the listener is added\n    if (!blockTrackerEvents.includes(eventName)) return\n    this._maybeStart()\n  }\n\n  _onRemoveListener (eventName, handler) {\n    // `removeListener` is called *after* the listener is removed\n    if (this._getBlockTrackerEventCount() > 0) return\n    this._maybeEnd()\n  }\n\n  _maybeStart () {\n    if (this._isRunning) return\n    this._isRunning = true\n    // cancel setting latest block to stale\n    this._cancelBlockResetTimeout()\n    this._start()\n  }\n\n  _maybeEnd () {\n    if (!this._isRunning) return\n    this._isRunning = false\n    this._setupBlockResetTimeout()\n    this._end()\n  }\n\n  _getBlockTrackerEventCount () {\n    return blockTrackerEvents\n      .map(eventName => this.listenerCount(eventName))\n      .reduce(calculateSum)\n  }\n\n  _newPotentialLatest (newBlock) {\n    const currentBlock = this._currentBlock\n    // only update if blok number is higher\n    if (currentBlock && (hexToInt(newBlock) <= hexToInt(currentBlock))) return\n    this._setCurrentBlock(newBlock)\n  }\n\n  _setCurrentBlock (newBlock) {\n    const oldBlock = this._currentBlock\n    this._currentBlock = newBlock\n    this.emit('latest', newBlock)\n    this.emit('sync', { oldBlock, newBlock })\n  }\n\n  _setupBlockResetTimeout () {\n    // clear any existing timeout\n    this._cancelBlockResetTimeout()\n    // clear latest block when stale\n    this._blockResetTimeout = setTimeout(this._resetCurrentBlock, this._blockResetDuration)\n    // nodejs - dont hold process open\n    if (this._blockResetTimeout.unref) {\n      this._blockResetTimeout.unref()\n    }\n  }\n\n  _cancelBlockResetTimeout () {\n    clearTimeout(this._blockResetTimeout)\n  }\n\n  _resetCurrentBlock () {\n    this._currentBlock = null\n  }\n\n}\n\nmodule.exports = BaseBlockTracker\n\nfunction hexToInt(hexInt) {\n  return Number.parseInt(hexInt, 16)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}