{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _regeneratorRuntime from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty2 from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _adapters, _adapters2;\n\nimport { LOGIN_PROVIDER } from '@toruslabs/openlogin';\nimport { CHAIN_NAMESPACES, SOLANA_ADAPTERS, EVM_ADAPTERS, getChainConfig, WALLET_ADAPTERS, ADAPTER_CATEGORY, ADAPTER_STATUS, ADAPTER_EVENTS } from '@web3auth/base';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { Web3AuthCore } from '@web3auth/core';\nimport LoginModal, { LOGIN_MODAL_EVENTS } from '@web3auth/ui';\nimport log from 'loglevel';\nvar defaultSolanaDappModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.SOLANA,\n  adapters: (_adapters = {}, _defineProperty2(_adapters, SOLANA_ADAPTERS.TORUS_SOLANA, {\n    label: \"Torus Solana Wallet\",\n    showOnModal: true,\n    showOnMobile: true,\n    showOnDesktop: true\n  }), _defineProperty2(_adapters, SOLANA_ADAPTERS.OPENLOGIN, {\n    label: \"OpenLogin\",\n    showOnModal: true,\n    showOnMobile: true,\n    showOnDesktop: true\n  }), _defineProperty2(_adapters, SOLANA_ADAPTERS.PHANTOM, {\n    label: \"Phantom\",\n    showOnModal: true,\n    showOnMobile: true,\n    showOnDesktop: true\n  }), _adapters)\n};\nvar defaultEvmDappModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.EIP155,\n  adapters: (_adapters2 = {}, _defineProperty2(_adapters2, EVM_ADAPTERS.TORUS_EVM, {\n    label: \"Torus Wallet\",\n    showOnModal: true,\n    showOnMobile: true,\n    showOnDesktop: true\n  }), _defineProperty2(_adapters2, EVM_ADAPTERS.METAMASK, {\n    label: \"MetaMask\",\n    showOnModal: true,\n    showOnMobile: true,\n    showOnDesktop: true\n  }), _defineProperty2(_adapters2, EVM_ADAPTERS.OPENLOGIN, {\n    label: \"OpenLogin\",\n    showOnModal: true,\n    showOnMobile: true,\n    showOnDesktop: true\n  }), _defineProperty2(_adapters2, EVM_ADAPTERS.WALLET_CONNECT_V1, {\n    label: \"Wallet Connect\",\n    showOnModal: true,\n    showOnMobile: true,\n    showOnDesktop: true\n  }), _adapters2)\n};\nvar defaultSolanaWalletModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.SOLANA,\n  adapters: _defineProperty2({}, SOLANA_ADAPTERS.OPENLOGIN, {\n    label: \"OpenLogin\",\n    showOnModal: true,\n    showOnMobile: true,\n    showOnDesktop: true\n  })\n};\nvar defaultEvmWalletModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.EIP155,\n  adapters: _defineProperty2({}, EVM_ADAPTERS.OPENLOGIN, {\n    label: \"OpenLogin\",\n    showOnModal: true,\n    showOnMobile: true,\n    showOnDesktop: true\n  })\n};\nvar OPENLOGIN_PROVIDERS = [LOGIN_PROVIDER.GOOGLE, LOGIN_PROVIDER.FACEBOOK, LOGIN_PROVIDER.TWITTER, LOGIN_PROVIDER.REDDIT, LOGIN_PROVIDER.DISCORD, LOGIN_PROVIDER.TWITCH, LOGIN_PROVIDER.APPLE, LOGIN_PROVIDER.LINE, LOGIN_PROVIDER.GITHUB, LOGIN_PROVIDER.KAKAO, LOGIN_PROVIDER.LINKEDIN, LOGIN_PROVIDER.WEIBO, LOGIN_PROVIDER.WECHAT, LOGIN_PROVIDER.EMAIL_PASSWORDLESS];\n\nfunction ownKeys$2(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar getDefaultAdapterModule = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(params) {\n    var name, customChainConfig, clientId, finalChainConfig, _yield$import, TorusWalletAdapter, adapter, _yield$import2, SolanaWalletAdapter, _adapter, _yield$import3, MetamaskAdapter, _adapter2, _yield$import4, PhantomAdapter, _adapter3, _yield$import5, WalletConnectV1Adapter, _adapter4, _yield$import6, OpenloginAdapter, getOpenloginDefaultOptions, defaultOptions, _adapter5;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            name = params.name, customChainConfig = params.customChainConfig, clientId = params.clientId;\n\n            if (Object.values(CHAIN_NAMESPACES).includes(customChainConfig.chainNamespace)) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error(\"Invalid chainNamespace: \".concat(customChainConfig.chainNamespace));\n\n          case 3:\n            finalChainConfig = _objectSpread$2(_objectSpread$2({}, getChainConfig(customChainConfig.chainNamespace, customChainConfig === null || customChainConfig === void 0 ? void 0 : customChainConfig.chainId)), customChainConfig || {});\n\n            if (!(name === WALLET_ADAPTERS.TORUS_EVM)) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.next = 7;\n            return import('@web3auth/torus-evm-adapter');\n\n          case 7:\n            _yield$import = _context.sent;\n            TorusWalletAdapter = _yield$import.TorusWalletAdapter;\n            adapter = new TorusWalletAdapter({\n              chainConfig: finalChainConfig\n            });\n            return _context.abrupt(\"return\", adapter);\n\n          case 13:\n            if (!(name === WALLET_ADAPTERS.TORUS_SOLANA)) {\n              _context.next = 22;\n              break;\n            }\n\n            _context.next = 16;\n            return import('@web3auth/torus-solana-adapter');\n\n          case 16:\n            _yield$import2 = _context.sent;\n            SolanaWalletAdapter = _yield$import2.SolanaWalletAdapter;\n            _adapter = new SolanaWalletAdapter({\n              chainConfig: finalChainConfig\n            });\n            return _context.abrupt(\"return\", _adapter);\n\n          case 22:\n            if (!(name === WALLET_ADAPTERS.METAMASK)) {\n              _context.next = 31;\n              break;\n            }\n\n            _context.next = 25;\n            return import('@web3auth/metamask-adapter');\n\n          case 25:\n            _yield$import3 = _context.sent;\n            MetamaskAdapter = _yield$import3.MetamaskAdapter;\n            _adapter2 = new MetamaskAdapter({\n              chainConfig: finalChainConfig\n            });\n            return _context.abrupt(\"return\", _adapter2);\n\n          case 31:\n            if (!(name === WALLET_ADAPTERS.PHANTOM)) {\n              _context.next = 40;\n              break;\n            }\n\n            _context.next = 34;\n            return import('@web3auth/phantom-adapter');\n\n          case 34:\n            _yield$import4 = _context.sent;\n            PhantomAdapter = _yield$import4.PhantomAdapter;\n            _adapter3 = new PhantomAdapter({\n              chainConfig: finalChainConfig\n            });\n            return _context.abrupt(\"return\", _adapter3);\n\n          case 40:\n            if (!(name === WALLET_ADAPTERS.WALLET_CONNECT_V1)) {\n              _context.next = 49;\n              break;\n            }\n\n            _context.next = 43;\n            return import('@web3auth/wallet-connect-v1-adapter');\n\n          case 43:\n            _yield$import5 = _context.sent;\n            WalletConnectV1Adapter = _yield$import5.WalletConnectV1Adapter;\n            _adapter4 = new WalletConnectV1Adapter({\n              chainConfig: finalChainConfig\n            });\n            return _context.abrupt(\"return\", _adapter4);\n\n          case 49:\n            if (!(name === WALLET_ADAPTERS.OPENLOGIN)) {\n              _context.next = 58;\n              break;\n            }\n\n            _context.next = 52;\n            return import('@web3auth/openlogin-adapter');\n\n          case 52:\n            _yield$import6 = _context.sent;\n            OpenloginAdapter = _yield$import6.OpenloginAdapter;\n            getOpenloginDefaultOptions = _yield$import6.getOpenloginDefaultOptions;\n            defaultOptions = getOpenloginDefaultOptions(customChainConfig.chainNamespace, customChainConfig === null || customChainConfig === void 0 ? void 0 : customChainConfig.chainId);\n            _adapter5 = new OpenloginAdapter(_objectSpread$2(_objectSpread$2({}, defaultOptions), {}, {\n              chainConfig: _objectSpread$2(_objectSpread$2({}, defaultOptions.chainConfig || {}), finalChainConfig),\n              adapterSettings: _objectSpread$2(_objectSpread$2({}, defaultOptions.adapterSettings), {}, {\n                clientId: clientId\n              })\n            }));\n            return _context.abrupt(\"return\", _adapter5);\n\n          case 58:\n            throw new Error(\"Invalid wallet adapter name\");\n\n          case 59:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getDefaultAdapterModule(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar getAdapterSocialLogins = function getAdapterSocialLogins(adapterName, adapter) {\n  var loginMethodsConfig = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var finalLoginMethodsConfig = {};\n\n  if (adapterName === WALLET_ADAPTERS.OPENLOGIN) {\n    OPENLOGIN_PROVIDERS.forEach(function (loginMethod) {\n      var currentLoginMethodConfig = loginMethodsConfig[loginMethod] || {\n        name: loginMethod,\n        showOnMobile: true,\n        showOnModal: true,\n        showOnDesktop: true\n      };\n      finalLoginMethodsConfig[loginMethod] = _objectSpread$1({}, currentLoginMethodConfig);\n      log.debug(\"OpenLogin login method ui config\", finalLoginMethodsConfig);\n    });\n  } else {\n    throw new Error(\"\".concat(adapterName, \" is not a valid adapter\"));\n  }\n\n  return finalLoginMethodsConfig;\n};\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nlog.enableAll();\nlog.setLevel(\"debug\");\n\nvar Web3Auth = /*#__PURE__*/function (_Web3AuthCore) {\n  _inherits(Web3Auth, _Web3AuthCore);\n\n  var _super = _createSuper(Web3Auth);\n\n  function Web3Auth(options) {\n    var _this;\n\n    _classCallCheck(this, Web3Auth);\n\n    var _this$options$uiConfi, _this$options$uiConfi2;\n\n    _this = _super.call(this, options);\n\n    _defineProperty(_assertThisInitialized(_this), \"loginModal\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"options\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"modalConfig\", defaultEvmDappModalConfig);\n\n    _this.options = _objectSpread({}, options);\n    var providedChainConfig = _this.options.chainConfig;\n\n    if (providedChainConfig.chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n      if (options.authMode === \"WALLET\") {\n        // default config for solana wallet modal\n        _this.modalConfig = defaultSolanaWalletModalConfig;\n      } else {\n        // default config for solana dapp modal\n        _this.modalConfig = defaultSolanaDappModalConfig;\n      }\n    } else if (providedChainConfig.chainNamespace === CHAIN_NAMESPACES.EIP155) {\n      if (options.authMode === \"WALLET\") {\n        // default config for evm wallet modal\n        _this.modalConfig = defaultEvmWalletModalConfig;\n      } else {\n        // default config for evm dapp modal\n        _this.modalConfig = defaultEvmDappModalConfig;\n      }\n    } else {\n      throw new Error(\"Invalid chainNamespace provided: \".concat(providedChainConfig.chainNamespace));\n    }\n\n    _this.loginModal = new LoginModal({\n      theme: (_this$options$uiConfi = _this.options.uiConfig) === null || _this$options$uiConfi === void 0 ? void 0 : _this$options$uiConfi.theme,\n      appLogo: ((_this$options$uiConfi2 = _this.options.uiConfig) === null || _this$options$uiConfi2 === void 0 ? void 0 : _this$options$uiConfi2.appLogo) || \"\",\n      version: \"\",\n      adapterListener: _assertThisInitialized(_this)\n    });\n\n    _this.subscribeToLoginModalEvents();\n\n    return _this;\n  }\n\n  _createClass(Web3Auth, [{\n    key: \"initModal\",\n    value: function () {\n      var _initModal = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(params) {\n        var _this2 = this;\n\n        var providedChainConfig, allAdapters, adapterConfigurationPromises, adapterNames, hasInAppWallets, initPromises, hasExternalWallets;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _get(_getPrototypeOf(Web3Auth.prototype), \"checkInitRequirements\", this).call(this);\n\n                _context4.next = 3;\n                return this.loginModal.initModal();\n\n              case 3:\n                providedChainConfig = this.options.chainConfig; // merge default adapters with the custom configured adapters.\n\n                allAdapters = _toConsumableArray(new Set([].concat(_toConsumableArray(Object.keys(this.modalConfig.adapters || {})), _toConsumableArray(Object.keys(this.walletAdapters)))));\n                adapterConfigurationPromises = allAdapters.map( /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(adapterName) {\n                    var _this$modalConfig$ada, _params$modalConfig, _this$modalConfig$ada2, _this$modalConfig$ada3, adapterConfig, adapter, ad, _this$modalConfig$ada4, _this$coreOptions$cha, chainConfig;\n\n                    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            // start with the default config of adapter.\n                            adapterConfig = ((_this$modalConfig$ada = _this2.modalConfig.adapters) === null || _this$modalConfig$ada === void 0 ? void 0 : _this$modalConfig$ada[adapterName]) || {\n                              label: adapterName,\n                              showOnModal: true,\n                              showOnMobile: true,\n                              showOnDesktop: true\n                            }; // override the default config of adapter if some config is being provided by the user.\n\n                            if (params !== null && params !== void 0 && (_params$modalConfig = params.modalConfig) !== null && _params$modalConfig !== void 0 && _params$modalConfig[adapterName]) {\n                              adapterConfig = _objectSpread(_objectSpread({}, adapterConfig), params.modalConfig[adapterName]);\n                            }\n\n                            _this2.modalConfig.adapters[adapterName] = adapterConfig; // check if adapter is configured/added by user and exist in walletAdapters map.\n\n                            adapter = _this2.walletAdapters[adapterName];\n                            log.debug(\"adapter config\", adapterName, (_this$modalConfig$ada2 = _this2.modalConfig.adapters) === null || _this$modalConfig$ada2 === void 0 ? void 0 : _this$modalConfig$ada2[adapterName].showOnModal); // if adapter is not custom configured then check if it is available in default adapters.\n                            // and if adapter is not hidden by user\n\n                            if (!(!adapter && (_this$modalConfig$ada3 = _this2.modalConfig.adapters) !== null && _this$modalConfig$ada3 !== void 0 && _this$modalConfig$ada3[adapterName].showOnModal)) {\n                              _context2.next = 13;\n                              break;\n                            }\n\n                            _context2.next = 8;\n                            return getDefaultAdapterModule({\n                              name: adapterName,\n                              customChainConfig: _this2.options.chainConfig,\n                              clientId: _this2.options.clientId\n                            });\n\n                          case 8:\n                            ad = _context2.sent;\n                            _this2.walletAdapters[adapterName] = ad;\n                            return _context2.abrupt(\"return\", adapterName);\n\n                          case 13:\n                            if (!((adapter === null || adapter === void 0 ? void 0 : adapter.type) === ADAPTER_CATEGORY.IN_APP || (adapter === null || adapter === void 0 ? void 0 : adapter.type) === ADAPTER_CATEGORY.EXTERNAL || adapterName === _this2.cachedAdapter)) {\n                              _context2.next = 19;\n                              break;\n                            }\n\n                            if ((_this$modalConfig$ada4 = _this2.modalConfig.adapters) !== null && _this$modalConfig$ada4 !== void 0 && _this$modalConfig$ada4[adapterName].showOnModal) {\n                              _context2.next = 16;\n                              break;\n                            }\n\n                            return _context2.abrupt(\"return\");\n\n                          case 16:\n                            // add client id to openlogin adapter, same web3auth client id can be used in openlogin.\n                            // this id is being overridden if user is also passing client id in openlogin's adapter constructor.\n                            if (adapterName === WALLET_ADAPTERS.OPENLOGIN) {\n                              _this2.walletAdapters[adapterName].setAdapterSettings({\n                                clientId: _this2.options.clientId\n                              });\n                            } // if adapter doesn't have any chainConfig then we will set the chainConfig based of passed chainNamespace\n                            // and chainNamespace.\n\n\n                            if (!adapter.chainConfigProxy) {\n                              chainConfig = _objectSpread(_objectSpread({}, getChainConfig(providedChainConfig.chainNamespace, (_this$coreOptions$cha = _this2.coreOptions.chainConfig) === null || _this$coreOptions$cha === void 0 ? void 0 : _this$coreOptions$cha.chainId)), _this2.coreOptions.chainConfig);\n\n                              _this2.walletAdapters[adapterName].setChainConfig(chainConfig);\n                            }\n\n                            return _context2.abrupt(\"return\", adapterName);\n\n                          case 19:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x3) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n                _context4.next = 8;\n                return Promise.all(adapterConfigurationPromises);\n\n              case 8:\n                adapterNames = _context4.sent;\n                hasInAppWallets = Object.values(this.walletAdapters).some(function (adapter) {\n                  if (adapter.type !== ADAPTER_CATEGORY.IN_APP) return false;\n                  if (_this2.modalConfig.adapters[adapter.name].showOnModal !== true) return false;\n                  if (!_this2.modalConfig.adapters[adapter.name].loginMethods) return true;\n                  if (Object.values(_this2.modalConfig.adapters[adapter.name].loginMethods).some(function (method) {\n                    return method.showOnModal;\n                  })) return true;\n                  return false;\n                });\n                log.debug(hasInAppWallets, this.walletAdapters, \"hasInAppWallets\"); // Now, initialize the adapters.\n\n                initPromises = adapterNames.map( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(adapterName) {\n                    var adapter;\n                    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            if (adapterName) {\n                              _context3.next = 2;\n                              break;\n                            }\n\n                            return _context3.abrupt(\"return\");\n\n                          case 2:\n                            _context3.prev = 2;\n                            adapter = _this2.walletAdapters[adapterName]; // only initialize a external adapter here if it is a cached adapter.\n\n                            if (!(_this2.cachedAdapter !== adapterName && adapter.type === ADAPTER_CATEGORY.EXTERNAL)) {\n                              _context3.next = 6;\n                              break;\n                            }\n\n                            return _context3.abrupt(\"return\");\n\n                          case 6:\n                            // in-app wallets or cached wallet (being connected or already connected) are initialized first.\n                            // if adapter is configured thn only initialize in app or cached adapter.\n                            // external wallets are initialized on INIT_EXTERNAL_WALLET event.\n                            _this2.subscribeToAdapterEvents(adapter);\n\n                            if (!(adapter.status === ADAPTER_STATUS.NOT_READY)) {\n                              _context3.next = 10;\n                              break;\n                            }\n\n                            _context3.next = 10;\n                            return adapter.init({\n                              autoConnect: _this2.cachedAdapter === adapterName\n                            });\n\n                          case 10:\n                            // note: not adding cachedWallet to modal if it is external wallet.\n                            // adding it later if no in-app wallets are available.\n                            if (adapter.type === ADAPTER_CATEGORY.IN_APP) {\n                              _this2.initializeInAppWallet(adapterName);\n                            }\n\n                            _context3.next = 16;\n                            break;\n\n                          case 13:\n                            _context3.prev = 13;\n                            _context3.t0 = _context3[\"catch\"](2);\n                            log.error(_context3.t0, \"error while initializing adapter\");\n\n                          case 16:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3, null, [[2, 13]]);\n                  }));\n\n                  return function (_x4) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n                this.status = ADAPTER_STATUS.READY;\n                _context4.next = 15;\n                return Promise.all(initPromises);\n\n              case 15:\n                hasExternalWallets = allAdapters.some(function (adapterName) {\n                  var _this$walletAdapters$, _this$modalConfig$ada5;\n\n                  return ((_this$walletAdapters$ = _this2.walletAdapters[adapterName]) === null || _this$walletAdapters$ === void 0 ? void 0 : _this$walletAdapters$.type) === ADAPTER_CATEGORY.EXTERNAL && ((_this$modalConfig$ada5 = _this2.modalConfig.adapters) === null || _this$modalConfig$ada5 === void 0 ? void 0 : _this$modalConfig$ada5[adapterName].showOnModal);\n                });\n\n                if (hasExternalWallets) {\n                  this.loginModal.initExternalWalletContainer();\n                } // variable to check if we have any in app wallets\n                // currently all default in app and external wallets can be hidden or shown based on config.\n\n\n                if (!(!hasInAppWallets && hasExternalWallets)) {\n                  _context4.next = 20;\n                  break;\n                }\n\n                _context4.next = 20;\n                return this.initExternalWalletAdapters(false, {\n                  showExternalWalletsOnly: true\n                });\n\n              case 20:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function initModal(_x2) {\n        return _initModal.apply(this, arguments);\n      }\n\n      return initModal;\n    }()\n  }, {\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var _this3 = this;\n\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!this.provider) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", this.provider);\n\n              case 2:\n                this.loginModal.open();\n                return _context5.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  _this3.once(ADAPTER_EVENTS.CONNECTED, function () {\n                    return resolve(_this3.provider);\n                  });\n\n                  _this3.once(ADAPTER_EVENTS.ERRORED, function (err) {\n                    return reject(err);\n                  });\n                }));\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n\n      return connect;\n    }()\n  }, {\n    key: \"initExternalWalletAdapters\",\n    value: function () {\n      var _initExternalWalletAdapters = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(externalWalletsInitialized, options) {\n        var _this4 = this;\n\n        var adaptersConfig, adaptersData, adapterPromises, adapterInitResults, finalAdaptersConfig;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (!externalWalletsInitialized) {\n                  _context7.next = 2;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\");\n\n              case 2:\n                adaptersConfig = {};\n                adaptersData = {};\n                adapterPromises = Object.keys(this.walletAdapters).map( /*#__PURE__*/function () {\n                  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(adapterName) {\n                    var adapter;\n                    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n                      while (1) {\n                        switch (_context6.prev = _context6.next) {\n                          case 0:\n                            _context6.prev = 0;\n                            adapter = _this4.walletAdapters[adapterName];\n\n                            if (!((adapter === null || adapter === void 0 ? void 0 : adapter.type) === ADAPTER_CATEGORY.EXTERNAL)) {\n                              _context6.next = 13;\n                              break;\n                            }\n\n                            log.debug(\"init external wallet\", _this4.cachedAdapter, adapterName);\n\n                            _this4.subscribeToAdapterEvents(adapter); // we are not initializing cached adapter here as it is already being initialized in initModal before.\n\n\n                            if (!(_this4.cachedAdapter === adapterName)) {\n                              _context6.next = 7;\n                              break;\n                            }\n\n                            return _context6.abrupt(\"return\");\n\n                          case 7:\n                            if (!(adapter.status === ADAPTER_STATUS.NOT_READY)) {\n                              _context6.next = 10;\n                              break;\n                            }\n\n                            _context6.next = 10;\n                            return adapter.init({\n                              autoConnect: _this4.cachedAdapter === adapterName\n                            });\n\n                          case 10:\n                            adaptersConfig[adapterName] = _this4.modalConfig.adapters[adapterName];\n                            adaptersData[adapterName] = adapter.adapterData || {};\n                            return _context6.abrupt(\"return\", adapterName);\n\n                          case 13:\n                            _context6.next = 18;\n                            break;\n\n                          case 15:\n                            _context6.prev = 15;\n                            _context6.t0 = _context6[\"catch\"](0);\n                            log.error(_context6.t0, \"error while initializing adapter\");\n\n                          case 18:\n                          case \"end\":\n                            return _context6.stop();\n                        }\n                      }\n                    }, _callee6, null, [[0, 15]]);\n                  }));\n\n                  return function (_x7) {\n                    return _ref4.apply(this, arguments);\n                  };\n                }());\n                _context7.next = 7;\n                return Promise.all(adapterPromises);\n\n              case 7:\n                adapterInitResults = _context7.sent;\n                finalAdaptersConfig = {};\n                adapterInitResults.forEach(function (result) {\n                  if (result) {\n                    finalAdaptersConfig[result] = adaptersConfig[result];\n                  }\n                });\n                this.loginModal.addWalletLogins(finalAdaptersConfig, {\n                  showExternalWalletsOnly: !!(options !== null && options !== void 0 && options.showExternalWalletsOnly)\n                });\n\n              case 11:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function initExternalWalletAdapters(_x5, _x6) {\n        return _initExternalWalletAdapters.apply(this, arguments);\n      }\n\n      return initExternalWalletAdapters;\n    }()\n  }, {\n    key: \"initializeInAppWallet\",\n    value: function initializeInAppWallet(adapterName) {\n      log.info(\"adapterInitResults\", adapterName);\n\n      if (this.walletAdapters[adapterName].type === ADAPTER_CATEGORY.IN_APP) {\n        var _this$modalConfig$ada6, _this$options$uiConfi3;\n\n        this.loginModal.addSocialLogins(adapterName, getAdapterSocialLogins(adapterName, this.walletAdapters[adapterName], (_this$modalConfig$ada6 = this.modalConfig.adapters[adapterName]) === null || _this$modalConfig$ada6 === void 0 ? void 0 : _this$modalConfig$ada6.loginMethods), ((_this$options$uiConfi3 = this.options.uiConfig) === null || _this$options$uiConfi3 === void 0 ? void 0 : _this$options$uiConfi3.loginMethodsOrder) || OPENLOGIN_PROVIDERS);\n      }\n    }\n  }, {\n    key: \"subscribeToLoginModalEvents\",\n    value: function subscribeToLoginModalEvents() {\n      var _this5 = this;\n\n      this.loginModal.on(LOGIN_MODAL_EVENTS.LOGIN, /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(params) {\n          return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.prev = 0;\n                  _context8.next = 3;\n                  return _this5.connectTo(params.adapter, params.loginParams);\n\n                case 3:\n                  _context8.next = 8;\n                  break;\n\n                case 5:\n                  _context8.prev = 5;\n                  _context8.t0 = _context8[\"catch\"](0);\n                  log.error(\"Error while connecting to adapter: \".concat(params.adapter), _context8.t0);\n\n                case 8:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8, null, [[0, 5]]);\n        }));\n\n        return function (_x8) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n      this.loginModal.on(LOGIN_MODAL_EVENTS.INIT_EXTERNAL_WALLETS, /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(params) {\n          return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  _context9.next = 2;\n                  return _this5.initExternalWalletAdapters(params.externalWalletsInitialized);\n\n                case 2:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9);\n        }));\n\n        return function (_x9) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n      this.loginModal.on(LOGIN_MODAL_EVENTS.DISCONNECT, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.prev = 0;\n                _context10.next = 3;\n                return _this5.logout();\n\n              case 3:\n                _context10.next = 8;\n                break;\n\n              case 5:\n                _context10.prev = 5;\n                _context10.t0 = _context10[\"catch\"](0);\n                log.error(\"Error while disconnecting\", _context10.t0);\n\n              case 8:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, null, [[0, 5]]);\n      })));\n      this.loginModal.on(LOGIN_MODAL_EVENTS.MODAL_VISIBILITY, /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(visibility) {\n          var _this$walletAdapters$2, walletConnectStatus;\n\n          return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n            while (1) {\n              switch (_context11.prev = _context11.next) {\n                case 0:\n                  log.debug(\"is login modal visible\", visibility);\n\n                  _this5.emit(LOGIN_MODAL_EVENTS.MODAL_VISIBILITY, visibility);\n\n                  walletConnectStatus = (_this$walletAdapters$2 = _this5.walletAdapters[WALLET_ADAPTERS.WALLET_CONNECT_V1]) === null || _this$walletAdapters$2 === void 0 ? void 0 : _this$walletAdapters$2.status;\n\n                  if (visibility && walletConnectStatus === ADAPTER_STATUS.READY) {\n                    // refreshing session for wallet connect whenever modal is opened.\n                    try {\n                      _this5.walletAdapters[WALLET_ADAPTERS.WALLET_CONNECT_V1].connect();\n                    } catch (error) {\n                      log.error(\"Error while disconnecting to wallet connect in core\", error);\n                    }\n                  }\n\n                case 4:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }\n          }, _callee11);\n        }));\n\n        return function (_x10) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n    }\n  }]);\n\n  return Web3Auth;\n}(Web3AuthCore);\n\nexport { OPENLOGIN_PROVIDERS, Web3Auth, defaultEvmDappModalConfig, defaultEvmWalletModalConfig, defaultSolanaDappModalConfig, defaultSolanaWalletModalConfig };","map":{"version":3,"sources":["../src/config.ts","../src/default.ts","../src/utils.ts","../src/modalManager.ts"],"names":["defaultSolanaDappModalConfig","chainNamespace","CHAIN_NAMESPACES","adapters","SOLANA_ADAPTERS","label","showOnModal","showOnMobile","showOnDesktop","defaultEvmDappModalConfig","EVM_ADAPTERS","defaultSolanaWalletModalConfig","defaultEvmWalletModalConfig","OPENLOGIN_PROVIDERS","LOGIN_PROVIDER","getDefaultAdapterModule","clientId","Object","customChainConfig","finalChainConfig","getChainConfig","name","WALLET_ADAPTERS","TorusWalletAdapter","adapter","chainConfig","SolanaWalletAdapter","MetamaskAdapter","PhantomAdapter","WalletConnectV1Adapter","getOpenloginDefaultOptions","defaultOptions","adapterSettings","getAdapterSocialLogins","loginMethodsConfig","finalLoginMethodsConfig","adapterName","loginMethod","currentLoginMethodConfig","log","Web3Auth","Web3AuthCore","constructor","options","providedChainConfig","theme","appLogo","version","adapterListener","initModal","allAdapters","adapterConfigurationPromises","adapterConfig","params","ad","ADAPTER_CATEGORY","adapterNames","Promise","hasInAppWallets","method","initPromises","ADAPTER_STATUS","autoConnect","hasExternalWallets","showExternalWalletsOnly","connect","ADAPTER_EVENTS","resolve","err","reject","initExternalWalletAdapters","adaptersConfig","adaptersData","adapterPromises","adapterInitResults","finalAdaptersConfig","result","initializeInAppWallet","subscribeToLoginModalEvents","LOGIN_MODAL_EVENTS","walletConnectStatus","visibility"],"mappings":"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","sourcesContent":["import { LOGIN_PROVIDER } from '@toruslabs/openlogin';\nimport { CHAIN_NAMESPACES, SOLANA_ADAPTERS, EVM_ADAPTERS, getChainConfig, WALLET_ADAPTERS, ADAPTER_CATEGORY, ADAPTER_STATUS, ADAPTER_EVENTS } from '@web3auth/base';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { Web3AuthCore } from '@web3auth/core';\nimport LoginModal, { LOGIN_MODAL_EVENTS } from '@web3auth/ui';\nimport log from 'loglevel';\n\nconst defaultSolanaDappModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.SOLANA,\n  adapters: {\n    [SOLANA_ADAPTERS.TORUS_SOLANA]: {\n      label: \"Torus Solana Wallet\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true\n    },\n    [SOLANA_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true\n    },\n    [SOLANA_ADAPTERS.PHANTOM]: {\n      label: \"Phantom\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true\n    }\n  }\n};\nconst defaultEvmDappModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.EIP155,\n  adapters: {\n    [EVM_ADAPTERS.TORUS_EVM]: {\n      label: \"Torus Wallet\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true\n    },\n    [EVM_ADAPTERS.METAMASK]: {\n      label: \"MetaMask\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true\n    },\n    [EVM_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true\n    },\n    [EVM_ADAPTERS.WALLET_CONNECT_V1]: {\n      label: \"Wallet Connect\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true\n    }\n  }\n};\nconst defaultSolanaWalletModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.SOLANA,\n  adapters: {\n    [SOLANA_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true\n    }\n  }\n};\nconst defaultEvmWalletModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.EIP155,\n  adapters: {\n    [EVM_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true\n    }\n  }\n};\nconst OPENLOGIN_PROVIDERS = [LOGIN_PROVIDER.GOOGLE, LOGIN_PROVIDER.FACEBOOK, LOGIN_PROVIDER.TWITTER, LOGIN_PROVIDER.REDDIT, LOGIN_PROVIDER.DISCORD, LOGIN_PROVIDER.TWITCH, LOGIN_PROVIDER.APPLE, LOGIN_PROVIDER.LINE, LOGIN_PROVIDER.GITHUB, LOGIN_PROVIDER.KAKAO, LOGIN_PROVIDER.LINKEDIN, LOGIN_PROVIDER.WEIBO, LOGIN_PROVIDER.WECHAT, LOGIN_PROVIDER.EMAIL_PASSWORDLESS];\n\nfunction ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nconst getDefaultAdapterModule = async params => {\n  const {\n    name,\n    customChainConfig,\n    clientId\n  } = params;\n  if (!Object.values(CHAIN_NAMESPACES).includes(customChainConfig.chainNamespace)) throw new Error(\"Invalid chainNamespace: \".concat(customChainConfig.chainNamespace));\n\n  const finalChainConfig = _objectSpread$2(_objectSpread$2({}, getChainConfig(customChainConfig.chainNamespace, customChainConfig === null || customChainConfig === void 0 ? void 0 : customChainConfig.chainId)), customChainConfig || {});\n\n  if (name === WALLET_ADAPTERS.TORUS_EVM) {\n    const {\n      TorusWalletAdapter\n    } = await import('@web3auth/torus-evm-adapter');\n    const adapter = new TorusWalletAdapter({\n      chainConfig: finalChainConfig\n    });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.TORUS_SOLANA) {\n    const {\n      SolanaWalletAdapter\n    } = await import('@web3auth/torus-solana-adapter');\n    const adapter = new SolanaWalletAdapter({\n      chainConfig: finalChainConfig\n    });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.METAMASK) {\n    const {\n      MetamaskAdapter\n    } = await import('@web3auth/metamask-adapter');\n    const adapter = new MetamaskAdapter({\n      chainConfig: finalChainConfig\n    });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.PHANTOM) {\n    const {\n      PhantomAdapter\n    } = await import('@web3auth/phantom-adapter');\n    const adapter = new PhantomAdapter({\n      chainConfig: finalChainConfig\n    });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.WALLET_CONNECT_V1) {\n    const {\n      WalletConnectV1Adapter\n    } = await import('@web3auth/wallet-connect-v1-adapter');\n    const adapter = new WalletConnectV1Adapter({\n      chainConfig: finalChainConfig\n    });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.OPENLOGIN) {\n    const {\n      OpenloginAdapter,\n      getOpenloginDefaultOptions\n    } = await import('@web3auth/openlogin-adapter');\n    const defaultOptions = getOpenloginDefaultOptions(customChainConfig.chainNamespace, customChainConfig === null || customChainConfig === void 0 ? void 0 : customChainConfig.chainId);\n    const adapter = new OpenloginAdapter(_objectSpread$2(_objectSpread$2({}, defaultOptions), {}, {\n      chainConfig: _objectSpread$2(_objectSpread$2({}, defaultOptions.chainConfig || {}), finalChainConfig),\n      adapterSettings: _objectSpread$2(_objectSpread$2({}, defaultOptions.adapterSettings), {}, {\n        clientId\n      })\n    }));\n    return adapter;\n  }\n\n  throw new Error(\"Invalid wallet adapter name\");\n};\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nconst getAdapterSocialLogins = function (adapterName, adapter) {\n  let loginMethodsConfig = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const finalLoginMethodsConfig = {};\n\n  if (adapterName === WALLET_ADAPTERS.OPENLOGIN) {\n    OPENLOGIN_PROVIDERS.forEach(loginMethod => {\n      const currentLoginMethodConfig = loginMethodsConfig[loginMethod] || {\n        name: loginMethod,\n        showOnMobile: true,\n        showOnModal: true,\n        showOnDesktop: true\n      };\n      finalLoginMethodsConfig[loginMethod] = _objectSpread$1({}, currentLoginMethodConfig);\n      log.debug(\"OpenLogin login method ui config\", finalLoginMethodsConfig);\n    });\n  } else {\n    throw new Error(\"\".concat(adapterName, \" is not a valid adapter\"));\n  }\n\n  return finalLoginMethodsConfig;\n};\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nlog.enableAll();\nlog.setLevel(\"debug\");\nclass Web3Auth extends Web3AuthCore {\n  constructor(options) {\n    var _this$options$uiConfi, _this$options$uiConfi2;\n\n    super(options);\n\n    _defineProperty(this, \"loginModal\", void 0);\n\n    _defineProperty(this, \"options\", void 0);\n\n    _defineProperty(this, \"modalConfig\", defaultEvmDappModalConfig);\n\n    this.options = _objectSpread({}, options);\n    const providedChainConfig = this.options.chainConfig;\n\n    if (providedChainConfig.chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n      if (options.authMode === \"WALLET\") {\n        // default config for solana wallet modal\n        this.modalConfig = defaultSolanaWalletModalConfig;\n      } else {\n        // default config for solana dapp modal\n        this.modalConfig = defaultSolanaDappModalConfig;\n      }\n    } else if (providedChainConfig.chainNamespace === CHAIN_NAMESPACES.EIP155) {\n      if (options.authMode === \"WALLET\") {\n        // default config for evm wallet modal\n        this.modalConfig = defaultEvmWalletModalConfig;\n      } else {\n        // default config for evm dapp modal\n        this.modalConfig = defaultEvmDappModalConfig;\n      }\n    } else {\n      throw new Error(\"Invalid chainNamespace provided: \".concat(providedChainConfig.chainNamespace));\n    }\n\n    this.loginModal = new LoginModal({\n      theme: (_this$options$uiConfi = this.options.uiConfig) === null || _this$options$uiConfi === void 0 ? void 0 : _this$options$uiConfi.theme,\n      appLogo: ((_this$options$uiConfi2 = this.options.uiConfig) === null || _this$options$uiConfi2 === void 0 ? void 0 : _this$options$uiConfi2.appLogo) || \"\",\n      version: \"\",\n      adapterListener: this\n    });\n    this.subscribeToLoginModalEvents();\n  }\n\n  async initModal(params) {\n    super.checkInitRequirements();\n    await this.loginModal.initModal();\n    const providedChainConfig = this.options.chainConfig; // merge default adapters with the custom configured adapters.\n\n    const allAdapters = [...new Set([...Object.keys(this.modalConfig.adapters || {}), ...Object.keys(this.walletAdapters)])];\n    const adapterConfigurationPromises = allAdapters.map(async adapterName => {\n      var _this$modalConfig$ada, _params$modalConfig, _this$modalConfig$ada2, _this$modalConfig$ada3;\n\n      // start with the default config of adapter.\n      let adapterConfig = ((_this$modalConfig$ada = this.modalConfig.adapters) === null || _this$modalConfig$ada === void 0 ? void 0 : _this$modalConfig$ada[adapterName]) || {\n        label: adapterName,\n        showOnModal: true,\n        showOnMobile: true,\n        showOnDesktop: true\n      }; // override the default config of adapter if some config is being provided by the user.\n\n      if (params !== null && params !== void 0 && (_params$modalConfig = params.modalConfig) !== null && _params$modalConfig !== void 0 && _params$modalConfig[adapterName]) {\n        adapterConfig = _objectSpread(_objectSpread({}, adapterConfig), params.modalConfig[adapterName]);\n      }\n\n      this.modalConfig.adapters[adapterName] = adapterConfig; // check if adapter is configured/added by user and exist in walletAdapters map.\n\n      const adapter = this.walletAdapters[adapterName];\n      log.debug(\"adapter config\", adapterName, (_this$modalConfig$ada2 = this.modalConfig.adapters) === null || _this$modalConfig$ada2 === void 0 ? void 0 : _this$modalConfig$ada2[adapterName].showOnModal); // if adapter is not custom configured then check if it is available in default adapters.\n      // and if adapter is not hidden by user\n\n      if (!adapter && (_this$modalConfig$ada3 = this.modalConfig.adapters) !== null && _this$modalConfig$ada3 !== void 0 && _this$modalConfig$ada3[adapterName].showOnModal) {\n        // if adapter is not configured and some default configuration is available, use it.\n        const ad = await getDefaultAdapterModule({\n          name: adapterName,\n          customChainConfig: this.options.chainConfig,\n          clientId: this.options.clientId\n        });\n        this.walletAdapters[adapterName] = ad;\n        return adapterName;\n      } else if ((adapter === null || adapter === void 0 ? void 0 : adapter.type) === ADAPTER_CATEGORY.IN_APP || (adapter === null || adapter === void 0 ? void 0 : adapter.type) === ADAPTER_CATEGORY.EXTERNAL || adapterName === this.cachedAdapter) {\n        var _this$modalConfig$ada4;\n\n        if (!((_this$modalConfig$ada4 = this.modalConfig.adapters) !== null && _this$modalConfig$ada4 !== void 0 && _this$modalConfig$ada4[adapterName].showOnModal)) return; // add client id to openlogin adapter, same web3auth client id can be used in openlogin.\n        // this id is being overridden if user is also passing client id in openlogin's adapter constructor.\n\n        if (adapterName === WALLET_ADAPTERS.OPENLOGIN) {\n          this.walletAdapters[adapterName].setAdapterSettings({\n            clientId: this.options.clientId\n          });\n        } // if adapter doesn't have any chainConfig then we will set the chainConfig based of passed chainNamespace\n        // and chainNamespace.\n\n\n        if (!adapter.chainConfigProxy) {\n          var _this$coreOptions$cha;\n\n          const chainConfig = _objectSpread(_objectSpread({}, getChainConfig(providedChainConfig.chainNamespace, (_this$coreOptions$cha = this.coreOptions.chainConfig) === null || _this$coreOptions$cha === void 0 ? void 0 : _this$coreOptions$cha.chainId)), this.coreOptions.chainConfig);\n\n          this.walletAdapters[adapterName].setChainConfig(chainConfig);\n        }\n\n        return adapterName;\n      }\n    });\n    const adapterNames = await Promise.all(adapterConfigurationPromises);\n    const hasInAppWallets = Object.values(this.walletAdapters).some(adapter => {\n      if (adapter.type !== ADAPTER_CATEGORY.IN_APP) return false;\n      if (this.modalConfig.adapters[adapter.name].showOnModal !== true) return false;\n      if (!this.modalConfig.adapters[adapter.name].loginMethods) return true;\n      if (Object.values(this.modalConfig.adapters[adapter.name].loginMethods).some(method => method.showOnModal)) return true;\n      return false;\n    });\n    log.debug(hasInAppWallets, this.walletAdapters, \"hasInAppWallets\"); // Now, initialize the adapters.\n\n    const initPromises = adapterNames.map(async adapterName => {\n      if (!adapterName) return;\n\n      try {\n        const adapter = this.walletAdapters[adapterName]; // only initialize a external adapter here if it is a cached adapter.\n\n        if (this.cachedAdapter !== adapterName && adapter.type === ADAPTER_CATEGORY.EXTERNAL) {\n          return;\n        } // in-app wallets or cached wallet (being connected or already connected) are initialized first.\n        // if adapter is configured thn only initialize in app or cached adapter.\n        // external wallets are initialized on INIT_EXTERNAL_WALLET event.\n\n\n        this.subscribeToAdapterEvents(adapter);\n        if (adapter.status === ADAPTER_STATUS.NOT_READY) await adapter.init({\n          autoConnect: this.cachedAdapter === adapterName\n        }); // note: not adding cachedWallet to modal if it is external wallet.\n        // adding it later if no in-app wallets are available.\n\n        if (adapter.type === ADAPTER_CATEGORY.IN_APP) {\n          this.initializeInAppWallet(adapterName);\n        }\n      } catch (error) {\n        log.error(error, \"error while initializing adapter\");\n      }\n    });\n    this.status = ADAPTER_STATUS.READY;\n    await Promise.all(initPromises);\n    const hasExternalWallets = allAdapters.some(adapterName => {\n      var _this$walletAdapters$, _this$modalConfig$ada5;\n\n      return ((_this$walletAdapters$ = this.walletAdapters[adapterName]) === null || _this$walletAdapters$ === void 0 ? void 0 : _this$walletAdapters$.type) === ADAPTER_CATEGORY.EXTERNAL && ((_this$modalConfig$ada5 = this.modalConfig.adapters) === null || _this$modalConfig$ada5 === void 0 ? void 0 : _this$modalConfig$ada5[adapterName].showOnModal);\n    });\n\n    if (hasExternalWallets) {\n      this.loginModal.initExternalWalletContainer();\n    } // variable to check if we have any in app wallets\n    // currently all default in app and external wallets can be hidden or shown based on config.\n\n\n    if (!hasInAppWallets && hasExternalWallets) {\n      // if no in app wallet is available then initialize external wallets in modal\n      await this.initExternalWalletAdapters(false, {\n        showExternalWalletsOnly: true\n      });\n    }\n  }\n\n  async connect() {\n    // if (!this.loginModal.initialized) throw new Error(\"Login modal is not initialized\");\n    // if already connected return provider\n    if (this.provider) return this.provider;\n    this.loginModal.open();\n    return new Promise((resolve, reject) => {\n      this.once(ADAPTER_EVENTS.CONNECTED, () => {\n        return resolve(this.provider);\n      });\n      this.once(ADAPTER_EVENTS.ERRORED, err => {\n        return reject(err);\n      });\n    });\n  }\n\n  async initExternalWalletAdapters(externalWalletsInitialized, options) {\n    if (externalWalletsInitialized) return;\n    const adaptersConfig = {};\n    const adaptersData = {};\n    const adapterPromises = Object.keys(this.walletAdapters).map(async adapterName => {\n      try {\n        const adapter = this.walletAdapters[adapterName];\n\n        if ((adapter === null || adapter === void 0 ? void 0 : adapter.type) === ADAPTER_CATEGORY.EXTERNAL) {\n          log.debug(\"init external wallet\", this.cachedAdapter, adapterName);\n          this.subscribeToAdapterEvents(adapter); // we are not initializing cached adapter here as it is already being initialized in initModal before.\n\n          if (this.cachedAdapter === adapterName) {\n            return;\n          }\n\n          if (adapter.status === ADAPTER_STATUS.NOT_READY) await adapter.init({\n            autoConnect: this.cachedAdapter === adapterName\n          });\n          adaptersConfig[adapterName] = this.modalConfig.adapters[adapterName];\n          adaptersData[adapterName] = adapter.adapterData || {};\n          return adapterName;\n        }\n      } catch (error) {\n        log.error(error, \"error while initializing adapter\");\n      }\n    });\n    const adapterInitResults = await Promise.all(adapterPromises);\n    const finalAdaptersConfig = {};\n    adapterInitResults.forEach(result => {\n      if (result) {\n        finalAdaptersConfig[result] = adaptersConfig[result];\n      }\n    });\n    this.loginModal.addWalletLogins(finalAdaptersConfig, {\n      showExternalWalletsOnly: !!(options !== null && options !== void 0 && options.showExternalWalletsOnly)\n    });\n  }\n\n  initializeInAppWallet(adapterName) {\n    log.info(\"adapterInitResults\", adapterName);\n\n    if (this.walletAdapters[adapterName].type === ADAPTER_CATEGORY.IN_APP) {\n      var _this$modalConfig$ada6, _this$options$uiConfi3;\n\n      this.loginModal.addSocialLogins(adapterName, getAdapterSocialLogins(adapterName, this.walletAdapters[adapterName], (_this$modalConfig$ada6 = this.modalConfig.adapters[adapterName]) === null || _this$modalConfig$ada6 === void 0 ? void 0 : _this$modalConfig$ada6.loginMethods), ((_this$options$uiConfi3 = this.options.uiConfig) === null || _this$options$uiConfi3 === void 0 ? void 0 : _this$options$uiConfi3.loginMethodsOrder) || OPENLOGIN_PROVIDERS);\n    }\n  }\n\n  subscribeToLoginModalEvents() {\n    this.loginModal.on(LOGIN_MODAL_EVENTS.LOGIN, async params => {\n      try {\n        await this.connectTo(params.adapter, params.loginParams);\n      } catch (error) {\n        log.error(\"Error while connecting to adapter: \".concat(params.adapter), error);\n      }\n    });\n    this.loginModal.on(LOGIN_MODAL_EVENTS.INIT_EXTERNAL_WALLETS, async params => {\n      await this.initExternalWalletAdapters(params.externalWalletsInitialized);\n    });\n    this.loginModal.on(LOGIN_MODAL_EVENTS.DISCONNECT, async () => {\n      try {\n        await this.logout();\n      } catch (error) {\n        log.error(\"Error while disconnecting\", error);\n      }\n    });\n    this.loginModal.on(LOGIN_MODAL_EVENTS.MODAL_VISIBILITY, async visibility => {\n      var _this$walletAdapters$2;\n\n      log.debug(\"is login modal visible\", visibility);\n      this.emit(LOGIN_MODAL_EVENTS.MODAL_VISIBILITY, visibility);\n      const walletConnectStatus = (_this$walletAdapters$2 = this.walletAdapters[WALLET_ADAPTERS.WALLET_CONNECT_V1]) === null || _this$walletAdapters$2 === void 0 ? void 0 : _this$walletAdapters$2.status;\n\n      if (visibility && walletConnectStatus === ADAPTER_STATUS.READY) {\n        // refreshing session for wallet connect whenever modal is opened.\n        try {\n          this.walletAdapters[WALLET_ADAPTERS.WALLET_CONNECT_V1].connect();\n        } catch (error) {\n          log.error(\"Error while disconnecting to wallet connect in core\", error);\n        }\n      }\n    });\n  }\n\n}\n\nexport { OPENLOGIN_PROVIDERS, Web3Auth, defaultEvmDappModalConfig, defaultEvmWalletModalConfig, defaultSolanaDappModalConfig, defaultSolanaWalletModalConfig };\n//# sourceMappingURL=web3auth.esm.js.map\n"]},"metadata":{},"sourceType":"module"}