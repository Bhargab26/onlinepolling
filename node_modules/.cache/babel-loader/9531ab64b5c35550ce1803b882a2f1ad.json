{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ComposedStore = void 0;\n\nvar ObservableStore_1 = require(\"./ObservableStore\");\n\nvar ComposedStore = /*#__PURE__*/function (_ObservableStore_1$Ob) {\n  _inherits(ComposedStore, _ObservableStore_1$Ob);\n\n  var _super = _createSuper(ComposedStore);\n\n  function ComposedStore(children) {\n    var _this;\n\n    _classCallCheck(this, ComposedStore);\n\n    // Typecast: Preserve existing behavior\n    _this = _super.call(this, {}); // subscribe to children\n\n    _this._children = children || {};\n    Object.keys(_this._children).forEach(function (childKey) {\n      var child = _this._children[childKey];\n\n      _this._addChild(childKey, child);\n    });\n    return _this;\n  }\n\n  _createClass(ComposedStore, [{\n    key: \"_addChild\",\n    value: function _addChild(childKey, child) {\n      var _this2 = this;\n\n      var updateFromChild = function updateFromChild(childValue) {\n        var state = _this2.getState();\n\n        state[childKey] = childValue;\n\n        _this2.putState(state);\n      };\n\n      child.subscribe(updateFromChild);\n      updateFromChild(child.getState());\n    }\n  }]);\n\n  return ComposedStore;\n}(ObservableStore_1.ObservableStore);\n\nexports.ComposedStore = ComposedStore;","map":{"version":3,"sources":["../src/ComposedStore.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,IAAA,iBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;IAEa,a;;;;;EAKX,uBAAY,QAAZ,EAAkE;IAAA;;IAAA;;IAChE;IACA,0BAAM,EAAN,EAFgE,CAIhE;;IACA,MAAK,SAAL,GAAiB,QAAQ,IAAI,EAA7B;IACA,MAAM,CAAC,IAAP,CAAY,MAAK,SAAjB,EAA4B,OAA5B,CAAoC,UAAC,QAAD,EAAa;MAC/C,IAAM,KAAK,GAAG,MAAK,SAAL,CAAe,QAAf,CAAd;;MACA,MAAK,SAAL,CAAe,QAAf,EAAyB,KAAzB;IACD,CAHD;IANgE;EAUjE;;;;WAED,mBAAU,QAAV,EAA6B,KAA7B,EAA+D;MAAA;;MAC7D,IAAM,eAAe,GAAG,SAAlB,eAAkB,CAAC,UAAD,EAA2B;QACjD,IAAM,KAAK,GAAG,MAAI,CAAC,QAAL,EAAd;;QACA,KAAK,CAAC,QAAD,CAAL,GAAkB,UAAlB;;QACA,MAAI,CAAC,QAAL,CAAc,KAAd;MACD,CAJD;;MAMA,KAAK,CAAC,SAAN,CAAgB,eAAhB;MACA,eAAe,CAAC,KAAK,CAAC,QAAN,EAAD,CAAf;IACD;;;;EAxBO,iBAAA,CAAA,e;;AAFV,OAAA,CAAA,aAAA,GAAA,aAAA","sourcesContent":["import { ObservableStore } from './ObservableStore';\n\nexport class ComposedStore<\n  T extends Record<string, Record<string, unknown>>,\n> extends ObservableStore<T> {\n  private _children: Record<keyof T, ObservableStore<T[keyof T]>>;\n\n  constructor(children: Record<keyof T, ObservableStore<T[keyof T]>>) {\n    // Typecast: Preserve existing behavior\n    super({} as unknown as T);\n\n    // subscribe to children\n    this._children = children || {};\n    Object.keys(this._children).forEach((childKey) => {\n      const child = this._children[childKey];\n      this._addChild(childKey, child);\n    });\n  }\n\n  _addChild(childKey: keyof T, child: ObservableStore<T[keyof T]>) {\n    const updateFromChild = (childValue: T[keyof T]) => {\n      const state = this.getState();\n      state[childKey] = childValue;\n      this.putState(state);\n    };\n\n    child.subscribe(updateFromChild);\n    updateFromChild(child.getState());\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}