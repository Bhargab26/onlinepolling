{"ast":null,"code":"import _classCallCheck from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { isJsonRpcRequest, isJsonRpcResponseSuccess, isJsonRpcResponseError, isInternalEvent, isReservedEvent } from \"@walletconnect/utils\";\n\nvar EventManager = /*#__PURE__*/function () {\n  function EventManager() {\n    _classCallCheck(this, EventManager);\n\n    this._eventEmitters = [];\n  }\n\n  _createClass(EventManager, [{\n    key: \"subscribe\",\n    value: function subscribe(eventEmitter) {\n      this._eventEmitters.push(eventEmitter);\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(event) {\n      this._eventEmitters = this._eventEmitters.filter(function (x) {\n        return x.event !== event;\n      });\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(payload) {\n      var eventEmitters = [];\n      var event;\n\n      if (isJsonRpcRequest(payload)) {\n        event = payload.method;\n      } else if (isJsonRpcResponseSuccess(payload) || isJsonRpcResponseError(payload)) {\n        event = \"response:\".concat(payload.id);\n      } else if (isInternalEvent(payload)) {\n        event = payload.event;\n      } else {\n        event = \"\";\n      }\n\n      if (event) {\n        eventEmitters = this._eventEmitters.filter(function (eventEmitter) {\n          return eventEmitter.event === event;\n        });\n      }\n\n      if ((!eventEmitters || !eventEmitters.length) && !isReservedEvent(event) && !isInternalEvent(event)) {\n        eventEmitters = this._eventEmitters.filter(function (eventEmitter) {\n          return eventEmitter.event === \"call_request\";\n        });\n      }\n\n      eventEmitters.forEach(function (eventEmitter) {\n        if (isJsonRpcResponseError(payload)) {\n          var error = new Error(payload.error.message);\n          eventEmitter.callback(error, null);\n        } else {\n          eventEmitter.callback(null, payload);\n        }\n      });\n    }\n  }]);\n\n  return EventManager;\n}();\n\nexport default EventManager;","map":{"version":3,"sources":["../../src/events.ts"],"names":[],"mappings":";;AAAA,SACE,gBADF,EAEE,wBAFF,EAGE,sBAHF,EAIE,eAJF,EAKE,eALF,QAMO,sBANP;;IAiBM,Y;EAGJ,wBAAA;IAAA;;IACE,KAAK,cAAL,GAAsB,EAAtB;EACD;;;;WAEM,mBAAU,YAAV,EAAqC;MAC1C,KAAK,cAAL,CAAoB,IAApB,CAAyB,YAAzB;IACD;;;WAEM,qBAAY,KAAZ,EAAyB;MAC9B,KAAK,cAAL,GAAsB,KAAK,cAAL,CAAoB,MAApB,CAA2B,UAAA,CAAC;QAAA,OAAI,CAAC,CAAC,KAAF,KAAY,KAAhB;MAAA,CAA5B,CAAtB;IACD;;;WAEM,iBACL,OADK,EACsF;MAE3F,IAAI,aAAa,GAAoB,EAArC;MACA,IAAI,KAAJ;;MAEA,IAAI,gBAAgB,CAAC,OAAD,CAApB,EAA+B;QAC7B,KAAK,GAAG,OAAO,CAAC,MAAhB;MACD,CAFD,MAEO,IAAI,wBAAwB,CAAC,OAAD,CAAxB,IAAqC,sBAAsB,CAAC,OAAD,CAA/D,EAA0E;QAC/E,KAAK,sBAAe,OAAO,CAAC,EAAvB,CAAL;MACD,CAFM,MAEA,IAAI,eAAe,CAAC,OAAD,CAAnB,EAA8B;QACnC,KAAK,GAAG,OAAO,CAAC,KAAhB;MACD,CAFM,MAEA;QACL,KAAK,GAAG,EAAR;MACD;;MAED,IAAI,KAAJ,EAAW;QACT,aAAa,GAAG,KAAK,cAAL,CAAoB,MAApB,CACd,UAAC,YAAD;UAAA,OAAiC,YAAY,CAAC,KAAb,KAAuB,KAAxD;QAAA,CADc,CAAhB;MAGD;;MAED,IACE,CAAC,CAAC,aAAD,IAAkB,CAAC,aAAa,CAAC,MAAlC,KACA,CAAC,eAAe,CAAC,KAAD,CADhB,IAEA,CAAC,eAAe,CAAC,KAAD,CAHlB,EAIE;QACA,aAAa,GAAG,KAAK,cAAL,CAAoB,MAApB,CACd,UAAC,YAAD;UAAA,OAAiC,YAAY,CAAC,KAAb,KAAuB,cAAxD;QAAA,CADc,CAAhB;MAGD;;MAED,aAAa,CAAC,OAAd,CAAsB,UAAC,YAAD,EAAgC;QACpD,IAAI,sBAAsB,CAAC,OAAD,CAA1B,EAAqC;UACnC,IAAM,KAAK,GAAG,IAAI,KAAJ,CAAU,OAAO,CAAC,KAAR,CAAc,OAAxB,CAAd;UACA,YAAY,CAAC,QAAb,CAAsB,KAAtB,EAA6B,IAA7B;QACD,CAHD,MAGO;UACL,YAAY,CAAC,QAAb,CAAsB,IAAtB,EAA4B,OAA5B;QACD;MACF,CAPD;IAQD;;;;;;AAGH,eAAe,YAAf","sourceRoot":"","sourcesContent":["import { isJsonRpcRequest, isJsonRpcResponseSuccess, isJsonRpcResponseError, isInternalEvent, isReservedEvent, } from \"@walletconnect/utils\";\nclass EventManager {\n    constructor() {\n        this._eventEmitters = [];\n    }\n    subscribe(eventEmitter) {\n        this._eventEmitters.push(eventEmitter);\n    }\n    unsubscribe(event) {\n        this._eventEmitters = this._eventEmitters.filter(x => x.event !== event);\n    }\n    trigger(payload) {\n        let eventEmitters = [];\n        let event;\n        if (isJsonRpcRequest(payload)) {\n            event = payload.method;\n        }\n        else if (isJsonRpcResponseSuccess(payload) || isJsonRpcResponseError(payload)) {\n            event = `response:${payload.id}`;\n        }\n        else if (isInternalEvent(payload)) {\n            event = payload.event;\n        }\n        else {\n            event = \"\";\n        }\n        if (event) {\n            eventEmitters = this._eventEmitters.filter((eventEmitter) => eventEmitter.event === event);\n        }\n        if ((!eventEmitters || !eventEmitters.length) &&\n            !isReservedEvent(event) &&\n            !isInternalEvent(event)) {\n            eventEmitters = this._eventEmitters.filter((eventEmitter) => eventEmitter.event === \"call_request\");\n        }\n        eventEmitters.forEach((eventEmitter) => {\n            if (isJsonRpcResponseError(payload)) {\n                const error = new Error(payload.error.message);\n                eventEmitter.callback(error, null);\n            }\n            else {\n                eventEmitter.callback(null, payload);\n            }\n        });\n    }\n}\nexport default EventManager;\n//# sourceMappingURL=events.js.map"]},"metadata":{},"sourceType":"module"}