{"ast":null,"code":"\"use strict\";\n\nimport _get from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _regeneratorRuntime from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\";\nvar errorGas = [\"call\", \"estimateGas\"];\n\nfunction checkError(method, error, params) {\n  // Undo the \"convenience\" some nodes are attempting to prevent backwards\n  // incompatibility; maybe for v6 consider forwarding reverts as errors\n  if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n    var e = error.error;\n\n    if (e && e.message.match(\"reverted\") && isHexString(e.data)) {\n      return e.data;\n    }\n\n    logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n      error: error,\n      data: \"0x\"\n    });\n  }\n\n  var message = error.message;\n\n  if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof error.error.message === \"string\") {\n    message = error.error.message;\n  } else if (typeof error.body === \"string\") {\n    message = error.body;\n  } else if (typeof error.responseText === \"string\") {\n    message = error.responseText;\n  }\n\n  message = (message || \"\").toLowerCase();\n  var transaction = params.transaction || params.signedTransaction; // \"insufficient funds for gas * price + value + cost(data)\"\n\n  if (message.match(/insufficient funds|base fee exceeds gas limit/)) {\n    logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n      error: error,\n      method: method,\n      transaction: transaction\n    });\n  } // \"nonce too low\"\n\n\n  if (message.match(/nonce too low/)) {\n    logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n      error: error,\n      method: method,\n      transaction: transaction\n    });\n  } // \"replacement transaction underpriced\"\n\n\n  if (message.match(/replacement transaction underpriced/)) {\n    logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n      error: error,\n      method: method,\n      transaction: transaction\n    });\n  } // \"replacement transaction underpriced\"\n\n\n  if (message.match(/only replay-protected/)) {\n    logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n      error: error,\n      method: method,\n      transaction: transaction\n    });\n  }\n\n  if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {\n    logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n      error: error,\n      method: method,\n      transaction: transaction\n    });\n  }\n\n  throw error;\n}\n\nfunction timer(timeout) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, timeout);\n  });\n}\n\nfunction getResult(payload) {\n  if (payload.error) {\n    // @TODO: not any\n    var error = new Error(payload.error.message);\n    error.code = payload.error.code;\n    error.data = payload.error.data;\n    throw error;\n  }\n\n  return payload.result;\n}\n\nfunction getLowerCase(value) {\n  if (value) {\n    return value.toLowerCase();\n  }\n\n  return value;\n}\n\nvar _constructorGuard = {};\nexport var JsonRpcSigner = /*#__PURE__*/function (_Signer) {\n  _inherits(JsonRpcSigner, _Signer);\n\n  var _super = _createSuper(JsonRpcSigner);\n\n  function JsonRpcSigner(constructorGuard, provider, addressOrIndex) {\n    var _this;\n\n    _classCallCheck(this, JsonRpcSigner);\n\n    logger.checkNew(this instanceof JsonRpcSigner ? this.constructor : void 0, JsonRpcSigner);\n    _this = _super.call(this);\n\n    if (constructorGuard !== _constructorGuard) {\n      throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n    }\n\n    defineReadOnly(_assertThisInitialized(_this), \"provider\", provider);\n\n    if (addressOrIndex == null) {\n      addressOrIndex = 0;\n    }\n\n    if (typeof addressOrIndex === \"string\") {\n      defineReadOnly(_assertThisInitialized(_this), \"_address\", _this.provider.formatter.address(addressOrIndex));\n      defineReadOnly(_assertThisInitialized(_this), \"_index\", null);\n    } else if (typeof addressOrIndex === \"number\") {\n      defineReadOnly(_assertThisInitialized(_this), \"_index\", addressOrIndex);\n      defineReadOnly(_assertThisInitialized(_this), \"_address\", null);\n    } else {\n      logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n    }\n\n    return _this;\n  }\n\n  _createClass(JsonRpcSigner, [{\n    key: \"connect\",\n    value: function connect(provider) {\n      return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"connect\"\n      });\n    }\n  }, {\n    key: \"connectUnchecked\",\n    value: function connectUnchecked() {\n      return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n  }, {\n    key: \"getAddress\",\n    value: function getAddress() {\n      var _this2 = this;\n\n      if (this._address) {\n        return Promise.resolve(this._address);\n      }\n\n      return this.provider.send(\"eth_accounts\", []).then(function (accounts) {\n        if (accounts.length <= _this2._index) {\n          logger.throwError(\"unknown account #\" + _this2._index, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"getAddress\"\n          });\n        }\n\n        return _this2.provider.formatter.address(accounts[_this2._index]);\n      });\n    }\n  }, {\n    key: \"sendUncheckedTransaction\",\n    value: function sendUncheckedTransaction(transaction) {\n      var _this3 = this;\n\n      transaction = shallowCopy(transaction);\n      var fromAddress = this.getAddress().then(function (address) {\n        if (address) {\n          address = address.toLowerCase();\n        }\n\n        return address;\n      }); // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n      // wishes to use this, it is easy to specify explicitly, otherwise\n      // we look it up for them.\n\n      if (transaction.gasLimit == null) {\n        var estimate = shallowCopy(transaction);\n        estimate.from = fromAddress;\n        transaction.gasLimit = this.provider.estimateGas(estimate);\n      }\n\n      if (transaction.to != null) {\n        transaction.to = Promise.resolve(transaction.to).then(function (to) {\n          return __awaiter(_this3, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n            var address;\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    if (!(to == null)) {\n                      _context.next = 2;\n                      break;\n                    }\n\n                    return _context.abrupt(\"return\", null);\n\n                  case 2:\n                    _context.next = 4;\n                    return this.provider.resolveName(to);\n\n                  case 4:\n                    address = _context.sent;\n\n                    if (address == null) {\n                      logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                    }\n\n                    return _context.abrupt(\"return\", address);\n\n                  case 7:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n        });\n      }\n\n      return resolveProperties({\n        tx: resolveProperties(transaction),\n        sender: fromAddress\n      }).then(function (_ref) {\n        var tx = _ref.tx,\n            sender = _ref.sender;\n\n        if (tx.from != null) {\n          if (tx.from.toLowerCase() !== sender) {\n            logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n          }\n        } else {\n          tx.from = sender;\n        }\n\n        var hexTx = _this3.provider.constructor.hexlifyTransaction(tx, {\n          from: true\n        });\n\n        return _this3.provider.send(\"eth_sendTransaction\", [hexTx]).then(function (hash) {\n          return hash;\n        }, function (error) {\n          return checkError(\"sendTransaction\", error, hexTx);\n        });\n      });\n    }\n  }, {\n    key: \"signTransaction\",\n    value: function signTransaction(transaction) {\n      return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"signTransaction\"\n      });\n    }\n  }, {\n    key: \"sendTransaction\",\n    value: function sendTransaction(transaction) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _this4 = this;\n\n        var blockNumber, hash;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n\n              case 2:\n                blockNumber = _context3.sent;\n                _context3.next = 5;\n                return this.sendUncheckedTransaction(transaction);\n\n              case 5:\n                hash = _context3.sent;\n                _context3.prev = 6;\n                _context3.next = 9;\n                return poll(function () {\n                  return __awaiter(_this4, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n                    var tx;\n                    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            _context2.next = 2;\n                            return this.provider.getTransaction(hash);\n\n                          case 2:\n                            tx = _context2.sent;\n\n                            if (!(tx === null)) {\n                              _context2.next = 5;\n                              break;\n                            }\n\n                            return _context2.abrupt(\"return\", undefined);\n\n                          case 5:\n                            return _context2.abrupt(\"return\", this.provider._wrapTransaction(tx, hash, blockNumber));\n\n                          case 6:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2, this);\n                  }));\n                }, {\n                  oncePoll: this.provider\n                });\n\n              case 9:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 12:\n                _context3.prev = 12;\n                _context3.t0 = _context3[\"catch\"](6);\n                _context3.t0.transactionHash = hash;\n                throw _context3.t0;\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[6, 12]]);\n      }));\n    }\n  }, {\n    key: \"signMessage\",\n    value: function signMessage(message) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var data, address;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                data = typeof message === \"string\" ? toUtf8Bytes(message) : message;\n                _context4.next = 3;\n                return this.getAddress();\n\n              case 3:\n                address = _context4.sent;\n                _context4.next = 6;\n                return this.provider.send(\"personal_sign\", [hexlify(data), address.toLowerCase()]);\n\n              case 6:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    }\n  }, {\n    key: \"_legacySignMessage\",\n    value: function _legacySignMessage(message) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var data, address;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                data = typeof message === \"string\" ? toUtf8Bytes(message) : message;\n                _context5.next = 3;\n                return this.getAddress();\n\n              case 3:\n                address = _context5.sent;\n                _context5.next = 6;\n                return this.provider.send(\"eth_sign\", [address.toLowerCase(), hexlify(data)]);\n\n              case 6:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n    }\n  }, {\n    key: \"_signTypedData\",\n    value: function _signTypedData(domain, types, value) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var _this5 = this;\n\n        var populated, address;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return _TypedDataEncoder.resolveNames(domain, types, value, function (name) {\n                  return _this5.provider.resolveName(name);\n                });\n\n              case 2:\n                populated = _context6.sent;\n                _context6.next = 5;\n                return this.getAddress();\n\n              case 5:\n                address = _context6.sent;\n                _context6.next = 8;\n                return this.provider.send(\"eth_signTypedData_v4\", [address.toLowerCase(), JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))]);\n\n              case 8:\n                return _context6.abrupt(\"return\", _context6.sent);\n\n              case 9:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n    }\n  }, {\n    key: \"unlock\",\n    value: function unlock(password) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var provider, address;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                provider = this.provider;\n                _context7.next = 3;\n                return this.getAddress();\n\n              case 3:\n                address = _context7.sent;\n                return _context7.abrupt(\"return\", provider.send(\"personal_unlockAccount\", [address.toLowerCase(), password, null]));\n\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n    }\n  }]);\n\n  return JsonRpcSigner;\n}(Signer);\n\nvar UncheckedJsonRpcSigner = /*#__PURE__*/function (_JsonRpcSigner) {\n  _inherits(UncheckedJsonRpcSigner, _JsonRpcSigner);\n\n  var _super2 = _createSuper(UncheckedJsonRpcSigner);\n\n  function UncheckedJsonRpcSigner() {\n    _classCallCheck(this, UncheckedJsonRpcSigner);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(UncheckedJsonRpcSigner, [{\n    key: \"sendTransaction\",\n    value: function sendTransaction(transaction) {\n      var _this6 = this;\n\n      return this.sendUncheckedTransaction(transaction).then(function (hash) {\n        return {\n          hash: hash,\n          nonce: null,\n          gasLimit: null,\n          gasPrice: null,\n          data: null,\n          value: null,\n          chainId: null,\n          confirmations: 0,\n          from: null,\n          wait: function wait(confirmations) {\n            return _this6.provider.waitForTransaction(hash, confirmations);\n          }\n        };\n      });\n    }\n  }]);\n\n  return UncheckedJsonRpcSigner;\n}(JsonRpcSigner);\n\nvar allowedTransactionKeys = {\n  chainId: true,\n  data: true,\n  gasLimit: true,\n  gasPrice: true,\n  nonce: true,\n  to: true,\n  value: true,\n  type: true,\n  accessList: true,\n  maxFeePerGas: true,\n  maxPriorityFeePerGas: true\n};\nexport var JsonRpcProvider = /*#__PURE__*/function (_BaseProvider) {\n  _inherits(JsonRpcProvider, _BaseProvider);\n\n  var _super3 = _createSuper(JsonRpcProvider);\n\n  function JsonRpcProvider(url, network) {\n    var _this7;\n\n    _classCallCheck(this, JsonRpcProvider);\n\n    logger.checkNew(this instanceof JsonRpcProvider ? this.constructor : void 0, JsonRpcProvider);\n    var networkOrReady = network; // The network is unknown, query the JSON-RPC for it\n\n    if (networkOrReady == null) {\n      networkOrReady = new Promise(function (resolve, reject) {\n        setTimeout(function () {\n          _this7.detectNetwork().then(function (network) {\n            resolve(network);\n          }, function (error) {\n            reject(error);\n          });\n        }, 0);\n      });\n    }\n\n    _this7 = _super3.call(this, networkOrReady); // Default URL\n\n    if (!url) {\n      url = getStatic(_this7.constructor, \"defaultUrl\")();\n    }\n\n    if (typeof url === \"string\") {\n      defineReadOnly(_assertThisInitialized(_this7), \"connection\", Object.freeze({\n        url: url\n      }));\n    } else {\n      defineReadOnly(_assertThisInitialized(_this7), \"connection\", Object.freeze(shallowCopy(url)));\n    }\n\n    _this7._nextId = 42;\n    return _this7;\n  }\n\n  _createClass(JsonRpcProvider, [{\n    key: \"_cache\",\n    get: function get() {\n      if (this._eventLoopCache == null) {\n        this._eventLoopCache = {};\n      }\n\n      return this._eventLoopCache;\n    }\n  }, {\n    key: \"detectNetwork\",\n    value: function detectNetwork() {\n      var _this8 = this;\n\n      if (!this._cache[\"detectNetwork\"]) {\n        this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork(); // Clear this cache at the beginning of the next event loop\n\n        setTimeout(function () {\n          _this8._cache[\"detectNetwork\"] = null;\n        }, 0);\n      }\n\n      return this._cache[\"detectNetwork\"];\n    }\n  }, {\n    key: \"_uncachedDetectNetwork\",\n    value: function _uncachedDetectNetwork() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var chainId, getNetwork;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return timer(0);\n\n              case 2:\n                chainId = null;\n                _context8.prev = 3;\n                _context8.next = 6;\n                return this.send(\"eth_chainId\", []);\n\n              case 6:\n                chainId = _context8.sent;\n                _context8.next = 19;\n                break;\n\n              case 9:\n                _context8.prev = 9;\n                _context8.t0 = _context8[\"catch\"](3);\n                _context8.prev = 11;\n                _context8.next = 14;\n                return this.send(\"net_version\", []);\n\n              case 14:\n                chainId = _context8.sent;\n                _context8.next = 19;\n                break;\n\n              case 17:\n                _context8.prev = 17;\n                _context8.t1 = _context8[\"catch\"](11);\n\n              case 19:\n                if (!(chainId != null)) {\n                  _context8.next = 28;\n                  break;\n                }\n\n                getNetwork = getStatic(this.constructor, \"getNetwork\");\n                _context8.prev = 21;\n                return _context8.abrupt(\"return\", getNetwork(BigNumber.from(chainId).toNumber()));\n\n              case 25:\n                _context8.prev = 25;\n                _context8.t2 = _context8[\"catch\"](21);\n                return _context8.abrupt(\"return\", logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                  chainId: chainId,\n                  event: \"invalidNetwork\",\n                  serverError: _context8.t2\n                }));\n\n              case 28:\n                return _context8.abrupt(\"return\", logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                  event: \"noNetwork\"\n                }));\n\n              case 29:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[3, 9], [11, 17], [21, 25]]);\n      }));\n    }\n  }, {\n    key: \"getSigner\",\n    value: function getSigner(addressOrIndex) {\n      return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n  }, {\n    key: \"getUncheckedSigner\",\n    value: function getUncheckedSigner(addressOrIndex) {\n      return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n  }, {\n    key: \"listAccounts\",\n    value: function listAccounts() {\n      var _this9 = this;\n\n      return this.send(\"eth_accounts\", []).then(function (accounts) {\n        return accounts.map(function (a) {\n          return _this9.formatter.address(a);\n        });\n      });\n    }\n  }, {\n    key: \"send\",\n    value: function send(method, params) {\n      var _this10 = this;\n\n      var request = {\n        method: method,\n        params: params,\n        id: this._nextId++,\n        jsonrpc: \"2.0\"\n      };\n      this.emit(\"debug\", {\n        action: \"request\",\n        request: deepCopy(request),\n        provider: this\n      }); // We can expand this in the future to any call, but for now these\n      // are the biggest wins and do not require any serializing parameters.\n\n      var cache = [\"eth_chainId\", \"eth_blockNumber\"].indexOf(method) >= 0;\n\n      if (cache && this._cache[method]) {\n        return this._cache[method];\n      }\n\n      var result = fetchJson(this.connection, JSON.stringify(request), getResult).then(function (result) {\n        _this10.emit(\"debug\", {\n          action: \"response\",\n          request: request,\n          response: result,\n          provider: _this10\n        });\n\n        return result;\n      }, function (error) {\n        _this10.emit(\"debug\", {\n          action: \"response\",\n          error: error,\n          request: request,\n          provider: _this10\n        });\n\n        throw error;\n      }); // Cache the fetch, but clear it on the next event loop\n\n      if (cache) {\n        this._cache[method] = result;\n        setTimeout(function () {\n          _this10._cache[method] = null;\n        }, 0);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"prepareRequest\",\n    value: function prepareRequest(method, params) {\n      switch (method) {\n        case \"getBlockNumber\":\n          return [\"eth_blockNumber\", []];\n\n        case \"getGasPrice\":\n          return [\"eth_gasPrice\", []];\n\n        case \"getBalance\":\n          return [\"eth_getBalance\", [getLowerCase(params.address), params.blockTag]];\n\n        case \"getTransactionCount\":\n          return [\"eth_getTransactionCount\", [getLowerCase(params.address), params.blockTag]];\n\n        case \"getCode\":\n          return [\"eth_getCode\", [getLowerCase(params.address), params.blockTag]];\n\n        case \"getStorageAt\":\n          return [\"eth_getStorageAt\", [getLowerCase(params.address), params.position, params.blockTag]];\n\n        case \"sendTransaction\":\n          return [\"eth_sendRawTransaction\", [params.signedTransaction]];\n\n        case \"getBlock\":\n          if (params.blockTag) {\n            return [\"eth_getBlockByNumber\", [params.blockTag, !!params.includeTransactions]];\n          } else if (params.blockHash) {\n            return [\"eth_getBlockByHash\", [params.blockHash, !!params.includeTransactions]];\n          }\n\n          return null;\n\n        case \"getTransaction\":\n          return [\"eth_getTransactionByHash\", [params.transactionHash]];\n\n        case \"getTransactionReceipt\":\n          return [\"eth_getTransactionReceipt\", [params.transactionHash]];\n\n        case \"call\":\n          {\n            var hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n            return [\"eth_call\", [hexlifyTransaction(params.transaction, {\n              from: true\n            }), params.blockTag]];\n          }\n\n        case \"estimateGas\":\n          {\n            var _hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n\n            return [\"eth_estimateGas\", [_hexlifyTransaction(params.transaction, {\n              from: true\n            })]];\n          }\n\n        case \"getLogs\":\n          if (params.filter && params.filter.address != null) {\n            params.filter.address = getLowerCase(params.filter.address);\n          }\n\n          return [\"eth_getLogs\", [params.filter]];\n\n        default:\n          break;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"perform\",\n    value: function perform(method, params) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var tx, feeData, args;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                if (!(method === \"call\" || method === \"estimateGas\")) {\n                  _context9.next = 8;\n                  break;\n                }\n\n                tx = params.transaction;\n\n                if (!(tx && tx.type != null && BigNumber.from(tx.type).isZero())) {\n                  _context9.next = 8;\n                  break;\n                }\n\n                if (!(tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null)) {\n                  _context9.next = 8;\n                  break;\n                }\n\n                _context9.next = 6;\n                return this.getFeeData();\n\n              case 6:\n                feeData = _context9.sent;\n\n                if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                  // Network doesn't know about EIP-1559 (and hence type)\n                  params = shallowCopy(params);\n                  params.transaction = shallowCopy(tx);\n                  delete params.transaction.type;\n                }\n\n              case 8:\n                args = this.prepareRequest(method, params);\n\n                if (args == null) {\n                  logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, {\n                    operation: method\n                  });\n                }\n\n                _context9.prev = 10;\n                _context9.next = 13;\n                return this.send(args[0], args[1]);\n\n              case 13:\n                return _context9.abrupt(\"return\", _context9.sent);\n\n              case 16:\n                _context9.prev = 16;\n                _context9.t0 = _context9[\"catch\"](10);\n                return _context9.abrupt(\"return\", checkError(method, _context9.t0, params));\n\n              case 19:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this, [[10, 16]]);\n      }));\n    }\n  }, {\n    key: \"_startEvent\",\n    value: function _startEvent(event) {\n      if (event.tag === \"pending\") {\n        this._startPending();\n      }\n\n      _get(_getPrototypeOf(JsonRpcProvider.prototype), \"_startEvent\", this).call(this, event);\n    }\n  }, {\n    key: \"_startPending\",\n    value: function _startPending() {\n      if (this._pendingFilter != null) {\n        return;\n      }\n\n      var self = this;\n      var pendingFilter = this.send(\"eth_newPendingTransactionFilter\", []);\n      this._pendingFilter = pendingFilter;\n      pendingFilter.then(function (filterId) {\n        function poll() {\n          self.send(\"eth_getFilterChanges\", [filterId]).then(function (hashes) {\n            if (self._pendingFilter != pendingFilter) {\n              return null;\n            }\n\n            var seq = Promise.resolve();\n            hashes.forEach(function (hash) {\n              // @TODO: This should be garbage collected at some point... How? When?\n              self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n              seq = seq.then(function () {\n                return self.getTransaction(hash).then(function (tx) {\n                  self.emit(\"pending\", tx);\n                  return null;\n                });\n              });\n            });\n            return seq.then(function () {\n              return timer(1000);\n            });\n          }).then(function () {\n            if (self._pendingFilter != pendingFilter) {\n              self.send(\"eth_uninstallFilter\", [filterId]);\n              return;\n            }\n\n            setTimeout(function () {\n              poll();\n            }, 0);\n            return null;\n          }).catch(function (error) {});\n        }\n\n        poll();\n        return filterId;\n      }).catch(function (error) {});\n    }\n  }, {\n    key: \"_stopEvent\",\n    value: function _stopEvent(event) {\n      if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n        this._pendingFilter = null;\n      }\n\n      _get(_getPrototypeOf(JsonRpcProvider.prototype), \"_stopEvent\", this).call(this, event);\n    } // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n\n  }], [{\n    key: \"defaultUrl\",\n    value: function defaultUrl() {\n      return \"http:/\\/localhost:8545\";\n    }\n  }, {\n    key: \"hexlifyTransaction\",\n    value: function hexlifyTransaction(transaction, allowExtra) {\n      // Check only allowed properties are given\n      var allowed = shallowCopy(allowedTransactionKeys);\n\n      if (allowExtra) {\n        for (var key in allowExtra) {\n          if (allowExtra[key]) {\n            allowed[key] = true;\n          }\n        }\n      }\n\n      checkProperties(transaction, allowed);\n      var result = {}; // JSON-RPC now requires numeric values to be \"quantity\" values\n\n      [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function (key) {\n        if (transaction[key] == null) {\n          return;\n        }\n\n        var value = hexValue(transaction[key]);\n\n        if (key === \"gasLimit\") {\n          key = \"gas\";\n        }\n\n        result[key] = value;\n      });\n      [\"from\", \"to\", \"data\"].forEach(function (key) {\n        if (transaction[key] == null) {\n          return;\n        }\n\n        result[key] = hexlify(transaction[key]);\n      });\n\n      if (transaction.accessList) {\n        result[\"accessList\"] = accessListify(transaction.accessList);\n      }\n\n      return result;\n    }\n  }]);\n\n  return JsonRpcProvider;\n}(BaseProvider);","map":{"version":3,"sources":["../src.ts/json-rpc-provider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\";\nconst errorGas = [\"call\", \"estimateGas\"];\nfunction checkError(method, error, params) {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n        if (e && e.message.match(\"reverted\") && isHexString(e.data)) {\n            return e.data;\n        }\n        logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n            error, data: \"0x\"\n        });\n    }\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof (error.error.message) === \"string\") {\n        message = error.error.message;\n    }\n    else if (typeof (error.body) === \"string\") {\n        message = error.body;\n    }\n    else if (typeof (error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n    const transaction = params.transaction || params.signedTransaction;\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n    // \"nonce too low\"\n    if (message.match(/nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced/)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n    throw error;\n}\nfunction timer(timeout) {\n    return new Promise(function (resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\nfunction getResult(payload) {\n    if (payload.error) {\n        // @TODO: not any\n        const error = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n    return payload.result;\n}\nfunction getLowerCase(value) {\n    if (value) {\n        return value.toLowerCase();\n    }\n    return value;\n}\nconst _constructorGuard = {};\nexport class JsonRpcSigner extends Signer {\n    constructor(constructorGuard, provider, addressOrIndex) {\n        logger.checkNew(new.target, JsonRpcSigner);\n        super();\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n        defineReadOnly(this, \"provider\", provider);\n        if (addressOrIndex == null) {\n            addressOrIndex = 0;\n        }\n        if (typeof (addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n        }\n        else if (typeof (addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n        }\n        else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n    connect(provider) {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n    connectUnchecked() {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n    getAddress() {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index]);\n        });\n    }\n    sendUncheckedTransaction(transaction) {\n        transaction = shallowCopy(transaction);\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) {\n                address = address.toLowerCase();\n            }\n            return address;\n        });\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then((to) => __awaiter(this, void 0, void 0, function* () {\n                if (to == null) {\n                    return null;\n                }\n                const address = yield this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            }));\n        }\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            }\n            else {\n                tx.from = sender;\n            }\n            const hexTx = this.provider.constructor.hexlifyTransaction(tx, { from: true });\n            return this.provider.send(\"eth_sendTransaction\", [hexTx]).then((hash) => {\n                return hash;\n            }, (error) => {\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n    signTransaction(transaction) {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // This cannot be mined any earlier than any recent block\n            const blockNumber = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n            // Send the transaction\n            const hash = yield this.sendUncheckedTransaction(transaction);\n            try {\n                // Unfortunately, JSON-RPC only provides and opaque transaction hash\n                // for a response, and we need the actual transaction, so we poll\n                // for it; it should show up very quickly\n                return yield poll(() => __awaiter(this, void 0, void 0, function* () {\n                    const tx = yield this.provider.getTransaction(hash);\n                    if (tx === null) {\n                        return undefined;\n                    }\n                    return this.provider._wrapTransaction(tx, hash, blockNumber);\n                }), { oncePoll: this.provider });\n            }\n            catch (error) {\n                error.transactionHash = hash;\n                throw error;\n            }\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = ((typeof (message) === \"string\") ? toUtf8Bytes(message) : message);\n            const address = yield this.getAddress();\n            return yield this.provider.send(\"personal_sign\", [hexlify(data), address.toLowerCase()]);\n        });\n    }\n    _legacySignMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = ((typeof (message) === \"string\") ? toUtf8Bytes(message) : message);\n            const address = yield this.getAddress();\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return yield this.provider.send(\"eth_sign\", [address.toLowerCase(), hexlify(data)]);\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Populate any ENS names (in-place)\n            const populated = yield _TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                return this.provider.resolveName(name);\n            });\n            const address = yield this.getAddress();\n            return yield this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        });\n    }\n    unlock(password) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = this.provider;\n            const address = yield this.getAddress();\n            return provider.send(\"personal_unlockAccount\", [address.toLowerCase(), password, null]);\n        });\n    }\n}\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction) {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return {\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\nconst allowedTransactionKeys = {\n    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n};\nexport class JsonRpcProvider extends BaseProvider {\n    constructor(url, network) {\n        logger.checkNew(new.target, JsonRpcProvider);\n        let networkOrReady = network;\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n        super(networkOrReady);\n        // Default URL\n        if (!url) {\n            url = getStatic(this.constructor, \"defaultUrl\")();\n        }\n        if (typeof (url) === \"string\") {\n            defineReadOnly(this, \"connection\", Object.freeze({\n                url: url\n            }));\n        }\n        else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n        this._nextId = 42;\n    }\n    get _cache() {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = {};\n        }\n        return this._eventLoopCache;\n    }\n    static defaultUrl() {\n        return \"http:/\\/localhost:8545\";\n    }\n    detectNetwork() {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n    _uncachedDetectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield timer(0);\n            let chainId = null;\n            try {\n                chainId = yield this.send(\"eth_chainId\", []);\n            }\n            catch (error) {\n                try {\n                    chainId = yield this.send(\"net_version\", []);\n                }\n                catch (error) { }\n            }\n            if (chainId != null) {\n                const getNetwork = getStatic(this.constructor, \"getNetwork\");\n                try {\n                    return getNetwork(BigNumber.from(chainId).toNumber());\n                }\n                catch (error) {\n                    return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                        chainId: chainId,\n                        event: \"invalidNetwork\",\n                        serverError: error\n                    });\n                }\n            }\n            return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                event: \"noNetwork\"\n            });\n        });\n    }\n    getSigner(addressOrIndex) {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n    getUncheckedSigner(addressOrIndex) {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n    listAccounts() {\n        return this.send(\"eth_accounts\", []).then((accounts) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n    send(method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([\"eth_chainId\", \"eth_blockNumber\"].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n            return result;\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n            throw error;\n        });\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n        return result;\n    }\n    prepareRequest(method, params) {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [\"eth_blockNumber\", []];\n            case \"getGasPrice\":\n                return [\"eth_gasPrice\", []];\n            case \"getBalance\":\n                return [\"eth_getBalance\", [getLowerCase(params.address), params.blockTag]];\n            case \"getTransactionCount\":\n                return [\"eth_getTransactionCount\", [getLowerCase(params.address), params.blockTag]];\n            case \"getCode\":\n                return [\"eth_getCode\", [getLowerCase(params.address), params.blockTag]];\n            case \"getStorageAt\":\n                return [\"eth_getStorageAt\", [getLowerCase(params.address), params.position, params.blockTag]];\n            case \"sendTransaction\":\n                return [\"eth_sendRawTransaction\", [params.signedTransaction]];\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [\"eth_getBlockByNumber\", [params.blockTag, !!params.includeTransactions]];\n                }\n                else if (params.blockHash) {\n                    return [\"eth_getBlockByHash\", [params.blockHash, !!params.includeTransactions]];\n                }\n                return null;\n            case \"getTransaction\":\n                return [\"eth_getTransactionByHash\", [params.transactionHash]];\n            case \"getTransactionReceipt\":\n                return [\"eth_getTransactionReceipt\", [params.transactionHash]];\n            case \"call\": {\n                const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_call\", [hexlifyTransaction(params.transaction, { from: true }), params.blockTag]];\n            }\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_estimateGas\", [hexlifyTransaction(params.transaction, { from: true })]];\n            }\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [\"eth_getLogs\", [params.filter]];\n            default:\n                break;\n        }\n        return null;\n    }\n    perform(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Legacy networks do not like the type field being passed along (which\n            // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n            if (method === \"call\" || method === \"estimateGas\") {\n                const tx = params.transaction;\n                if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                    // If there are no EIP-1559 properties, it might be non-EIP-a559\n                    if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                        const feeData = yield this.getFeeData();\n                        if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                            // Network doesn't know about EIP-1559 (and hence type)\n                            params = shallowCopy(params);\n                            params.transaction = shallowCopy(tx);\n                            delete params.transaction.type;\n                        }\n                    }\n                }\n            }\n            const args = this.prepareRequest(method, params);\n            if (args == null) {\n                logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n            }\n            try {\n                return yield this.send(args[0], args[1]);\n            }\n            catch (error) {\n                return checkError(method, error, params);\n            }\n        });\n    }\n    _startEvent(event) {\n        if (event.tag === \"pending\") {\n            this._startPending();\n        }\n        super._startEvent(event);\n    }\n    _startPending() {\n        if (this._pendingFilter != null) {\n            return;\n        }\n        const self = this;\n        const pendingFilter = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n        pendingFilter.then(function (filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [filterId]).then(function (hashes) {\n                    if (self._pendingFilter != pendingFilter) {\n                        return null;\n                    }\n                    let seq = Promise.resolve();\n                    hashes.forEach(function (hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function () {\n                            return self.getTransaction(hash).then(function (tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n                    return seq.then(function () {\n                        return timer(1000);\n                    });\n                }).then(function () {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [filterId]);\n                        return;\n                    }\n                    setTimeout(function () { poll(); }, 0);\n                    return null;\n                }).catch((error) => { });\n            }\n            poll();\n            return filterId;\n        }).catch((error) => { });\n    }\n    _stopEvent(event) {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction, allowExtra) {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) {\n                    allowed[key] = true;\n                }\n            }\n        }\n        checkProperties(transaction, allowed);\n        const result = {};\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            const value = hexValue(transaction[key]);\n            if (key === \"gasLimit\") {\n                key = \"gas\";\n            }\n            result[key] = value;\n        });\n        [\"from\", \"to\", \"data\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            result[key] = hexlify(transaction[key]);\n        });\n        if (transaction.accessList) {\n            result[\"accessList\"] = accessListify(transaction.accessList);\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=json-rpc-provider.js.map"]},"metadata":{},"sourceType":"module"}