{"ast":null,"code":"\"use strict\";\n\nimport _regeneratorRuntime from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson } from \"@ethersproject/web\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\"; // The transaction has already been sanitized by the calls in Provider\n\nfunction getTransactionPostData(transaction) {\n  var result = {};\n\n  for (var key in transaction) {\n    if (transaction[key] == null) {\n      continue;\n    }\n\n    var value = transaction[key];\n\n    if (key === \"type\" && value === 0) {\n      continue;\n    } // Quantity-types require no leading zero, unless 0\n\n\n    if ({\n      type: true,\n      gasLimit: true,\n      gasPrice: true,\n      maxFeePerGs: true,\n      maxPriorityFeePerGas: true,\n      nonce: true,\n      value: true\n    }[key]) {\n      value = hexValue(hexlify(value));\n    } else if (key === \"accessList\") {\n      value = \"[\" + accessListify(value).map(function (set) {\n        return \"{address:\\\"\".concat(set.address, \"\\\",storageKeys:[\\\"\").concat(set.storageKeys.join('\",\"'), \"\\\"]}\");\n      }).join(\",\") + \"]\";\n    } else {\n      value = hexlify(value);\n    }\n\n    result[key] = value;\n  }\n\n  return result;\n}\n\nfunction getResult(result) {\n  // getLogs, getHistory have weird success responses\n  if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n    return result.result;\n  }\n\n  if (result.status != 1 || result.message != \"OK\") {\n    var error = new Error(\"invalid response\");\n    error.result = JSON.stringify(result);\n\n    if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n      error.throttleRetry = true;\n    }\n\n    throw error;\n  }\n\n  return result.result;\n}\n\nfunction getJsonResult(result) {\n  // This response indicates we are being throttled\n  if (result && result.status == 0 && result.message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n    var error = new Error(\"throttled response\");\n    error.result = JSON.stringify(result);\n    error.throttleRetry = true;\n    throw error;\n  }\n\n  if (result.jsonrpc != \"2.0\") {\n    // @TODO: not any\n    var _error = new Error(\"invalid response\");\n\n    _error.result = JSON.stringify(result);\n    throw _error;\n  }\n\n  if (result.error) {\n    // @TODO: not any\n    var _error2 = new Error(result.error.message || \"unknown error\");\n\n    if (result.error.code) {\n      _error2.code = result.error.code;\n    }\n\n    if (result.error.data) {\n      _error2.data = result.error.data;\n    }\n\n    throw _error2;\n  }\n\n  return result.result;\n} // The blockTag was normalized as a string by the Provider pre-perform operations\n\n\nfunction checkLogTag(blockTag) {\n  if (blockTag === \"pending\") {\n    throw new Error(\"pending not supported\");\n  }\n\n  if (blockTag === \"latest\") {\n    return blockTag;\n  }\n\n  return parseInt(blockTag.substring(2), 16);\n}\n\nvar defaultApiKey = \"9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB\";\n\nfunction checkError(method, error, transaction) {\n  // Undo the \"convenience\" some nodes are attempting to prevent backwards\n  // incompatibility; maybe for v6 consider forwarding reverts as errors\n  if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n    var e = error.error; // Etherscan keeps changing their string\n\n    if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n      // Etherscan prefixes the data like \"Reverted 0x1234\"\n      var data = e.data;\n\n      if (data) {\n        data = \"0x\" + data.replace(/^.*0x/i, \"\");\n      }\n\n      if (isHexString(data)) {\n        return data;\n      }\n\n      logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n        error: error,\n        data: \"0x\"\n      });\n    }\n  } // Get the message from any nested error structure\n\n\n  var message = error.message;\n\n  if (error.code === Logger.errors.SERVER_ERROR) {\n    if (error.error && typeof error.error.message === \"string\") {\n      message = error.error.message;\n    } else if (typeof error.body === \"string\") {\n      message = error.body;\n    } else if (typeof error.responseText === \"string\") {\n      message = error.responseText;\n    }\n  }\n\n  message = (message || \"\").toLowerCase(); // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n\n  if (message.match(/insufficient funds/)) {\n    logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n      error: error,\n      method: method,\n      transaction: transaction\n    });\n  } // \"Transaction with the same hash was already imported.\"\n\n\n  if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n    logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n      error: error,\n      method: method,\n      transaction: transaction\n    });\n  } // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n\n\n  if (message.match(/another transaction with same nonce/)) {\n    logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n      error: error,\n      method: method,\n      transaction: transaction\n    });\n  }\n\n  if (message.match(/execution failed due to an exception|execution reverted/)) {\n    logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n      error: error,\n      method: method,\n      transaction: transaction\n    });\n  }\n\n  throw error;\n}\n\nexport var EtherscanProvider = /*#__PURE__*/function (_BaseProvider) {\n  _inherits(EtherscanProvider, _BaseProvider);\n\n  var _super2 = _createSuper(EtherscanProvider);\n\n  function EtherscanProvider(network, apiKey) {\n    var _this;\n\n    _classCallCheck(this, EtherscanProvider);\n\n    logger.checkNew(this instanceof EtherscanProvider ? this.constructor : void 0, EtherscanProvider);\n    _this = _super2.call(this, network);\n    defineReadOnly(_assertThisInitialized(_this), \"baseUrl\", _this.getBaseUrl());\n    defineReadOnly(_assertThisInitialized(_this), \"apiKey\", apiKey || defaultApiKey);\n    return _this;\n  }\n\n  _createClass(EtherscanProvider, [{\n    key: \"getBaseUrl\",\n    value: function getBaseUrl() {\n      switch (this.network ? this.network.name : \"invalid\") {\n        case \"homestead\":\n          return \"https:/\\/api.etherscan.io\";\n\n        case \"ropsten\":\n          return \"https:/\\/api-ropsten.etherscan.io\";\n\n        case \"rinkeby\":\n          return \"https:/\\/api-rinkeby.etherscan.io\";\n\n        case \"kovan\":\n          return \"https:/\\/api-kovan.etherscan.io\";\n\n        case \"goerli\":\n          return \"https:/\\/api-goerli.etherscan.io\";\n\n        default:\n      }\n\n      return logger.throwArgumentError(\"unsupported network\", \"network\", name);\n    }\n  }, {\n    key: \"getUrl\",\n    value: function getUrl(module, params) {\n      var query = Object.keys(params).reduce(function (accum, key) {\n        var value = params[key];\n\n        if (value != null) {\n          accum += \"&\".concat(key, \"=\").concat(value);\n        }\n\n        return accum;\n      }, \"\");\n      var apiKey = this.apiKey ? \"&apikey=\".concat(this.apiKey) : \"\";\n      return \"\".concat(this.baseUrl, \"/api?module=\").concat(module).concat(query).concat(apiKey);\n    }\n  }, {\n    key: \"getPostUrl\",\n    value: function getPostUrl() {\n      return \"\".concat(this.baseUrl, \"/api\");\n    }\n  }, {\n    key: \"getPostData\",\n    value: function getPostData(module, params) {\n      params.module = module;\n      params.apikey = this.apiKey;\n      return params;\n    }\n  }, {\n    key: \"fetch\",\n    value: function fetch(module, params, post) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this2 = this;\n\n        var url, payload, procFunc, connection, payloadStr, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = post ? this.getPostUrl() : this.getUrl(module, params);\n                payload = post ? this.getPostData(module, params) : null;\n                procFunc = module === \"proxy\" ? getJsonResult : getResult;\n                this.emit(\"debug\", {\n                  action: \"request\",\n                  request: url,\n                  provider: this\n                });\n                connection = {\n                  url: url,\n                  throttleSlotInterval: 1000,\n                  throttleCallback: function throttleCallback(attempt, url) {\n                    if (_this2.isCommunityResource()) {\n                      showThrottleMessage();\n                    }\n\n                    return Promise.resolve(true);\n                  }\n                };\n                payloadStr = null;\n\n                if (payload) {\n                  connection.headers = {\n                    \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\"\n                  };\n                  payloadStr = Object.keys(payload).map(function (key) {\n                    return \"\".concat(key, \"=\").concat(payload[key]);\n                  }).join(\"&\");\n                }\n\n                _context.next = 9;\n                return fetchJson(connection, payloadStr, procFunc || getJsonResult);\n\n              case 9:\n                result = _context.sent;\n                this.emit(\"debug\", {\n                  action: \"response\",\n                  request: url,\n                  response: deepCopy(result),\n                  provider: this\n                });\n                return _context.abrupt(\"return\", result);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"detectNetwork\",\n    value: function detectNetwork() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", this.network);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"perform\",\n    value: function perform(method, params) {\n      var _this3 = this;\n\n      var _super = Object.create(null, {\n        perform: {\n          get: function get() {\n            return _get(_getPrototypeOf(EtherscanProvider.prototype), \"perform\", _this3);\n          }\n        }\n      });\n\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var postData, _postData, args, topic0, logs, blocks, i, log, block;\n\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.t0 = method;\n                _context3.next = _context3.t0 === \"getBlockNumber\" ? 3 : _context3.t0 === \"getGasPrice\" ? 4 : _context3.t0 === \"getBalance\" ? 5 : _context3.t0 === \"getTransactionCount\" ? 6 : _context3.t0 === \"getCode\" ? 7 : _context3.t0 === \"getStorageAt\" ? 8 : _context3.t0 === \"sendTransaction\" ? 9 : _context3.t0 === \"getBlock\" ? 10 : _context3.t0 === \"getTransaction\" ? 13 : _context3.t0 === \"getTransactionReceipt\" ? 14 : _context3.t0 === \"call\" ? 15 : _context3.t0 === \"estimateGas\" ? 29 : _context3.t0 === \"getLogs\" ? 41 : _context3.t0 === \"getEtherPrice\" ? 65 : 72;\n                break;\n\n              case 3:\n                return _context3.abrupt(\"return\", this.fetch(\"proxy\", {\n                  action: \"eth_blockNumber\"\n                }));\n\n              case 4:\n                return _context3.abrupt(\"return\", this.fetch(\"proxy\", {\n                  action: \"eth_gasPrice\"\n                }));\n\n              case 5:\n                return _context3.abrupt(\"return\", this.fetch(\"account\", {\n                  action: \"balance\",\n                  address: params.address,\n                  tag: params.blockTag\n                }));\n\n              case 6:\n                return _context3.abrupt(\"return\", this.fetch(\"proxy\", {\n                  action: \"eth_getTransactionCount\",\n                  address: params.address,\n                  tag: params.blockTag\n                }));\n\n              case 7:\n                return _context3.abrupt(\"return\", this.fetch(\"proxy\", {\n                  action: \"eth_getCode\",\n                  address: params.address,\n                  tag: params.blockTag\n                }));\n\n              case 8:\n                return _context3.abrupt(\"return\", this.fetch(\"proxy\", {\n                  action: \"eth_getStorageAt\",\n                  address: params.address,\n                  position: params.position,\n                  tag: params.blockTag\n                }));\n\n              case 9:\n                return _context3.abrupt(\"return\", this.fetch(\"proxy\", {\n                  action: \"eth_sendRawTransaction\",\n                  hex: params.signedTransaction\n                }, true).catch(function (error) {\n                  return checkError(\"sendTransaction\", error, params.signedTransaction);\n                }));\n\n              case 10:\n                if (!params.blockTag) {\n                  _context3.next = 12;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", this.fetch(\"proxy\", {\n                  action: \"eth_getBlockByNumber\",\n                  tag: params.blockTag,\n                  boolean: params.includeTransactions ? \"true\" : \"false\"\n                }));\n\n              case 12:\n                throw new Error(\"getBlock by blockHash not implemented\");\n\n              case 13:\n                return _context3.abrupt(\"return\", this.fetch(\"proxy\", {\n                  action: \"eth_getTransactionByHash\",\n                  txhash: params.transactionHash\n                }));\n\n              case 14:\n                return _context3.abrupt(\"return\", this.fetch(\"proxy\", {\n                  action: \"eth_getTransactionReceipt\",\n                  txhash: params.transactionHash\n                }));\n\n              case 15:\n                if (!(params.blockTag !== \"latest\")) {\n                  _context3.next = 17;\n                  break;\n                }\n\n                throw new Error(\"EtherscanProvider does not support blockTag for call\");\n\n              case 17:\n                postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_call\";\n                _context3.prev = 20;\n                _context3.next = 23;\n                return this.fetch(\"proxy\", postData, true);\n\n              case 23:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 26:\n                _context3.prev = 26;\n                _context3.t1 = _context3[\"catch\"](20);\n                return _context3.abrupt(\"return\", checkError(\"call\", _context3.t1, params.transaction));\n\n              case 29:\n                _postData = getTransactionPostData(params.transaction);\n                _postData.module = \"proxy\";\n                _postData.action = \"eth_estimateGas\";\n                _context3.prev = 32;\n                _context3.next = 35;\n                return this.fetch(\"proxy\", _postData, true);\n\n              case 35:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 38:\n                _context3.prev = 38;\n                _context3.t2 = _context3[\"catch\"](32);\n                return _context3.abrupt(\"return\", checkError(\"estimateGas\", _context3.t2, params.transaction));\n\n              case 41:\n                args = {\n                  action: \"getLogs\"\n                };\n\n                if (params.filter.fromBlock) {\n                  args.fromBlock = checkLogTag(params.filter.fromBlock);\n                }\n\n                if (params.filter.toBlock) {\n                  args.toBlock = checkLogTag(params.filter.toBlock);\n                }\n\n                if (params.filter.address) {\n                  args.address = params.filter.address;\n                } // @TODO: We can handle slightly more complicated logs using the logs API\n\n\n                if (params.filter.topics && params.filter.topics.length > 0) {\n                  if (params.filter.topics.length > 1) {\n                    logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, {\n                      topics: params.filter.topics\n                    });\n                  }\n\n                  if (params.filter.topics.length === 1) {\n                    topic0 = params.filter.topics[0];\n\n                    if (typeof topic0 !== \"string\" || topic0.length !== 66) {\n                      logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        topic0: topic0\n                      });\n                    }\n\n                    args.topic0 = topic0;\n                  }\n                }\n\n                _context3.next = 48;\n                return this.fetch(\"logs\", args);\n\n              case 48:\n                logs = _context3.sent;\n                // Cache txHash => blockHash\n                blocks = {}; // Add any missing blockHash to the logs\n\n                i = 0;\n\n              case 51:\n                if (!(i < logs.length)) {\n                  _context3.next = 64;\n                  break;\n                }\n\n                log = logs[i];\n\n                if (!(log.blockHash != null)) {\n                  _context3.next = 55;\n                  break;\n                }\n\n                return _context3.abrupt(\"continue\", 61);\n\n              case 55:\n                if (!(blocks[log.blockNumber] == null)) {\n                  _context3.next = 60;\n                  break;\n                }\n\n                _context3.next = 58;\n                return this.getBlock(log.blockNumber);\n\n              case 58:\n                block = _context3.sent;\n\n                if (block) {\n                  blocks[log.blockNumber] = block.hash;\n                }\n\n              case 60:\n                log.blockHash = blocks[log.blockNumber];\n\n              case 61:\n                i++;\n                _context3.next = 51;\n                break;\n\n              case 64:\n                return _context3.abrupt(\"return\", logs);\n\n              case 65:\n                if (!(this.network.name !== \"homestead\")) {\n                  _context3.next = 67;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", 0.0);\n\n              case 67:\n                _context3.t3 = parseFloat;\n                _context3.next = 70;\n                return this.fetch(\"stats\", {\n                  action: \"ethprice\"\n                });\n\n              case 70:\n                _context3.t4 = _context3.sent.ethusd;\n                return _context3.abrupt(\"return\", (0, _context3.t3)(_context3.t4));\n\n              case 72:\n                return _context3.abrupt(\"break\", 73);\n\n              case 73:\n                return _context3.abrupt(\"return\", _super.perform.call(this, method, params));\n\n              case 74:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[20, 26], [32, 38]]);\n      }));\n    } // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n\n  }, {\n    key: \"getHistory\",\n    value: function getHistory(addressOrName, startBlock, endBlock) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _this4 = this;\n\n        var params, result;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.resolveName(addressOrName);\n\n              case 2:\n                _context4.t0 = _context4.sent;\n                _context4.t1 = startBlock == null ? 0 : startBlock;\n                _context4.t2 = endBlock == null ? 99999999 : endBlock;\n                params = {\n                  action: \"txlist\",\n                  address: _context4.t0,\n                  startblock: _context4.t1,\n                  endblock: _context4.t2,\n                  sort: \"asc\"\n                };\n                _context4.next = 8;\n                return this.fetch(\"account\", params);\n\n              case 8:\n                result = _context4.sent;\n                return _context4.abrupt(\"return\", result.map(function (tx) {\n                  [\"contractAddress\", \"to\"].forEach(function (key) {\n                    if (tx[key] == \"\") {\n                      delete tx[key];\n                    }\n                  });\n\n                  if (tx.creates == null && tx.contractAddress != null) {\n                    tx.creates = tx.contractAddress;\n                  }\n\n                  var item = _this4.formatter.transactionResponse(tx);\n\n                  if (tx.timeStamp) {\n                    item.timestamp = parseInt(tx.timeStamp);\n                  }\n\n                  return item;\n                }));\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    }\n  }, {\n    key: \"isCommunityResource\",\n    value: function isCommunityResource() {\n      return this.apiKey === defaultApiKey;\n    }\n  }]);\n\n  return EtherscanProvider;\n}(BaseProvider);","map":{"version":3,"sources":["../src.ts/etherscan-provider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson } from \"@ethersproject/web\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\";\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction) {\n    const result = {};\n    for (let key in transaction) {\n        if (transaction[key] == null) {\n            continue;\n        }\n        let value = transaction[key];\n        if (key === \"type\" && value === 0) {\n            continue;\n        }\n        // Quantity-types require no leading zero, unless 0\n        if ({ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true }[key]) {\n            value = hexValue(hexlify(value));\n        }\n        else if (key === \"accessList\") {\n            value = \"[\" + accessListify(value).map((set) => {\n                return `{address:\"${set.address}\",storageKeys:[\"${set.storageKeys.join('\",\"')}\"]}`;\n            }).join(\",\") + \"]\";\n        }\n        else {\n            value = hexlify(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\nfunction getResult(result) {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n    if (result.status != 1 || result.message != \"OK\") {\n        const error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n    return result.result;\n}\nfunction getJsonResult(result) {\n    // This response indicates we are being throttled\n    if (result && result.status == 0 && result.message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n    if (result.error) {\n        // @TODO: not any\n        const error = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) {\n            error.code = result.error.code;\n        }\n        if (result.error.data) {\n            error.data = result.error.data;\n        }\n        throw error;\n    }\n    return result.result;\n}\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag) {\n    if (blockTag === \"pending\") {\n        throw new Error(\"pending not supported\");\n    }\n    if (blockTag === \"latest\") {\n        return blockTag;\n    }\n    return parseInt(blockTag.substring(2), 16);\n}\nconst defaultApiKey = \"9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB\";\nfunction checkError(method, error, transaction) {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n        // Etherscan keeps changing their string\n        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            // Etherscan prefixes the data like \"Reverted 0x1234\"\n            let data = e.data;\n            if (data) {\n                data = \"0x\" + data.replace(/^.*0x/i, \"\");\n            }\n            if (isHexString(data)) {\n                return data;\n            }\n            logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n                error, data: \"0x\"\n            });\n        }\n    }\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof (error.error.message) === \"string\") {\n            message = error.error.message;\n        }\n        else if (typeof (error.body) === \"string\") {\n            message = error.body;\n        }\n        else if (typeof (error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n    if (message.match(/execution failed due to an exception|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n    throw error;\n}\nexport class EtherscanProvider extends BaseProvider {\n    constructor(network, apiKey) {\n        logger.checkNew(new.target, EtherscanProvider);\n        super(network);\n        defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n        defineReadOnly(this, \"apiKey\", apiKey || defaultApiKey);\n    }\n    getBaseUrl() {\n        switch (this.network ? this.network.name : \"invalid\") {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"ropsten\":\n                return \"https:/\\/api-ropsten.etherscan.io\";\n            case \"rinkeby\":\n                return \"https:/\\/api-rinkeby.etherscan.io\";\n            case \"kovan\":\n                return \"https:/\\/api-kovan.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            default:\n        }\n        return logger.throwArgumentError(\"unsupported network\", \"network\", name);\n    }\n    getUrl(module, params) {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${key}=${value}`;\n            }\n            return accum;\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${this.apiKey}` : \"\");\n        return `${this.baseUrl}/api?module=${module}${query}${apiKey}`;\n    }\n    getPostUrl() {\n        return `${this.baseUrl}/api`;\n    }\n    getPostData(module, params) {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n    fetch(module, params, post) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = (post ? this.getPostUrl() : this.getUrl(module, params));\n            const payload = (post ? this.getPostData(module, params) : null);\n            const procFunc = (module === \"proxy\") ? getJsonResult : getResult;\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: url,\n                provider: this\n            });\n            const connection = {\n                url: url,\n                throttleSlotInterval: 1000,\n                throttleCallback: (attempt, url) => {\n                    if (this.isCommunityResource()) {\n                        showThrottleMessage();\n                    }\n                    return Promise.resolve(true);\n                }\n            };\n            let payloadStr = null;\n            if (payload) {\n                connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n                payloadStr = Object.keys(payload).map((key) => {\n                    return `${key}=${payload[key]}`;\n                }).join(\"&\");\n            }\n            const result = yield fetchJson(connection, payloadStr, procFunc || getJsonResult);\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: url,\n                response: deepCopy(result),\n                provider: this\n            });\n            return result;\n        });\n    }\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.network;\n        });\n    }\n    perform(method, params) {\n        const _super = Object.create(null, {\n            perform: { get: () => super.perform }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            switch (method) {\n                case \"getBlockNumber\":\n                    return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n                case \"getGasPrice\":\n                    return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n                case \"getBalance\":\n                    // Returns base-10 result\n                    return this.fetch(\"account\", {\n                        action: \"balance\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getTransactionCount\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionCount\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getCode\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getCode\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getStorageAt\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getStorageAt\",\n                        address: params.address,\n                        position: params.position,\n                        tag: params.blockTag\n                    });\n                case \"sendTransaction\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_sendRawTransaction\",\n                        hex: params.signedTransaction\n                    }, true).catch((error) => {\n                        return checkError(\"sendTransaction\", error, params.signedTransaction);\n                    });\n                case \"getBlock\":\n                    if (params.blockTag) {\n                        return this.fetch(\"proxy\", {\n                            action: \"eth_getBlockByNumber\",\n                            tag: params.blockTag,\n                            boolean: (params.includeTransactions ? \"true\" : \"false\")\n                        });\n                    }\n                    throw new Error(\"getBlock by blockHash not implemented\");\n                case \"getTransaction\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionByHash\",\n                        txhash: params.transactionHash\n                    });\n                case \"getTransactionReceipt\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionReceipt\",\n                        txhash: params.transactionHash\n                    });\n                case \"call\": {\n                    if (params.blockTag !== \"latest\") {\n                        throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                    }\n                    const postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_call\";\n                    try {\n                        return yield this.fetch(\"proxy\", postData, true);\n                    }\n                    catch (error) {\n                        return checkError(\"call\", error, params.transaction);\n                    }\n                }\n                case \"estimateGas\": {\n                    const postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_estimateGas\";\n                    try {\n                        return yield this.fetch(\"proxy\", postData, true);\n                    }\n                    catch (error) {\n                        return checkError(\"estimateGas\", error, params.transaction);\n                    }\n                }\n                case \"getLogs\": {\n                    const args = { action: \"getLogs\" };\n                    if (params.filter.fromBlock) {\n                        args.fromBlock = checkLogTag(params.filter.fromBlock);\n                    }\n                    if (params.filter.toBlock) {\n                        args.toBlock = checkLogTag(params.filter.toBlock);\n                    }\n                    if (params.filter.address) {\n                        args.address = params.filter.address;\n                    }\n                    // @TODO: We can handle slightly more complicated logs using the logs API\n                    if (params.filter.topics && params.filter.topics.length > 0) {\n                        if (params.filter.topics.length > 1) {\n                            logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                        }\n                        if (params.filter.topics.length === 1) {\n                            const topic0 = params.filter.topics[0];\n                            if (typeof (topic0) !== \"string\" || topic0.length !== 66) {\n                                logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                            }\n                            args.topic0 = topic0;\n                        }\n                    }\n                    const logs = yield this.fetch(\"logs\", args);\n                    // Cache txHash => blockHash\n                    let blocks = {};\n                    // Add any missing blockHash to the logs\n                    for (let i = 0; i < logs.length; i++) {\n                        const log = logs[i];\n                        if (log.blockHash != null) {\n                            continue;\n                        }\n                        if (blocks[log.blockNumber] == null) {\n                            const block = yield this.getBlock(log.blockNumber);\n                            if (block) {\n                                blocks[log.blockNumber] = block.hash;\n                            }\n                        }\n                        log.blockHash = blocks[log.blockNumber];\n                    }\n                    return logs;\n                }\n                case \"getEtherPrice\":\n                    if (this.network.name !== \"homestead\") {\n                        return 0.0;\n                    }\n                    return parseFloat((yield this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n                default:\n                    break;\n            }\n            return _super.perform.call(this, method, params);\n        });\n    }\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n    getHistory(addressOrName, startBlock, endBlock) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const params = {\n                action: \"txlist\",\n                address: (yield this.resolveName(addressOrName)),\n                startblock: ((startBlock == null) ? 0 : startBlock),\n                endblock: ((endBlock == null) ? 99999999 : endBlock),\n                sort: \"asc\"\n            };\n            const result = yield this.fetch(\"account\", params);\n            return result.map((tx) => {\n                [\"contractAddress\", \"to\"].forEach(function (key) {\n                    if (tx[key] == \"\") {\n                        delete tx[key];\n                    }\n                });\n                if (tx.creates == null && tx.contractAddress != null) {\n                    tx.creates = tx.contractAddress;\n                }\n                const item = this.formatter.transactionResponse(tx);\n                if (tx.timeStamp) {\n                    item.timestamp = parseInt(tx.timeStamp);\n                }\n                return item;\n            });\n        });\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n//# sourceMappingURL=etherscan-provider.js.map"]},"metadata":{},"sourceType":"module"}