{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nexport function promisify(originalFn, thisArg) {\n  var promisifiedFunction = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _len,\n          callArgs,\n          _key,\n          _args = arguments;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              for (_len = _args.length, callArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n                callArgs[_key] = _args[_key];\n              }\n\n              return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                var callback = function callback(err, data) {\n                  if (err === null || typeof err === \"undefined\") {\n                    reject(err);\n                  }\n\n                  resolve(data);\n                };\n\n                originalFn.apply(thisArg, [].concat(callArgs, [callback]));\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function promisifiedFunction() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return promisifiedFunction;\n}\nexport function formatRpcError(error) {\n  var message = error.message || \"Failed or Rejected Request\";\n  var code = -32000;\n\n  if (error && !error.code) {\n    switch (message) {\n      case \"Parse error\":\n        code = -32700;\n        break;\n\n      case \"Invalid request\":\n        code = -32600;\n        break;\n\n      case \"Method not found\":\n        code = -32601;\n        break;\n\n      case \"Invalid params\":\n        code = -32602;\n        break;\n\n      case \"Internal error\":\n        code = -32603;\n        break;\n\n      default:\n        code = -32000;\n        break;\n    }\n  }\n\n  var result = {\n    code: code,\n    message: message\n  };\n  return result;\n}","map":{"version":3,"sources":["../../src/payload.ts"],"names":[],"mappings":";;AAMA,OAAM,SAAU,SAAV,CACJ,UADI,EAEJ,OAFI,EAES;EAEb,IAAM,mBAAmB;IAAA,sEAAG;MAAA;MAAA;MAAA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA,0BACvB,QADuB;gBACvB,QADuB;cAAA;;cAAA,iCAGnB,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;gBACrC,IAAM,QAAQ,GAAG,SAAX,QAAW,CACf,GADe,EAEf,IAFe,EAGb;kBACF,IAAI,GAAG,KAAK,IAAR,IAAgB,OAAO,GAAP,KAAe,WAAnC,EAAgD;oBAC9C,MAAM,CAAC,GAAD,CAAN;kBACD;;kBACD,OAAO,CAAC,IAAD,CAAP;gBACD,CARD;;gBASA,UAAU,CAAC,KAAX,CAAiB,OAAjB,YAA8B,QAA9B,GAAwC,QAAxC;cACD,CAXM,CAHmB;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAnB,mBAAmB;MAAA;IAAA;EAAA,GAAzB;;EAgBA,OAAO,mBAAP;AACD;AAED,OAAM,SAAU,cAAV,CACJ,KADI,EACgC;EAEpC,IAAM,OAAO,GAAG,KAAK,CAAC,OAAN,IAAiB,4BAAjC;EACA,IAAI,IAAI,GAAG,CAAC,KAAZ;;EACA,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,IAApB,EAA0B;IACxB,QAAQ,OAAR;MACE,KAAK,aAAL;QACE,IAAI,GAAG,CAAC,KAAR;QACA;;MACF,KAAK,iBAAL;QACE,IAAI,GAAG,CAAC,KAAR;QACA;;MACF,KAAK,kBAAL;QACE,IAAI,GAAG,CAAC,KAAR;QACA;;MACF,KAAK,gBAAL;QACE,IAAI,GAAG,CAAC,KAAR;QACA;;MACF,KAAK,gBAAL;QACE,IAAI,GAAG,CAAC,KAAR;QACA;;MACF;QACE,IAAI,GAAG,CAAC,KAAR;QACA;IAlBJ;EAoBD;;EACD,IAAM,MAAM,GAAG;IACb,IAAI,EAAJ,IADa;IAEb,OAAO,EAAP;EAFa,CAAf;EAIA,OAAO,MAAP;AACD","sourceRoot":"","sourcesContent":["export function promisify(originalFn, thisArg) {\n    const promisifiedFunction = async (...callArgs) => {\n        return new Promise((resolve, reject) => {\n            const callback = (err, data) => {\n                if (err === null || typeof err === \"undefined\") {\n                    reject(err);\n                }\n                resolve(data);\n            };\n            originalFn.apply(thisArg, [...callArgs, callback]);\n        });\n    };\n    return promisifiedFunction;\n}\nexport function formatRpcError(error) {\n    const message = error.message || \"Failed or Rejected Request\";\n    let code = -32000;\n    if (error && !error.code) {\n        switch (message) {\n            case \"Parse error\":\n                code = -32700;\n                break;\n            case \"Invalid request\":\n                code = -32600;\n                break;\n            case \"Method not found\":\n                code = -32601;\n                break;\n            case \"Invalid params\":\n                code = -32602;\n                break;\n            case \"Internal error\":\n                code = -32603;\n                break;\n            default:\n                code = -32000;\n                break;\n        }\n    }\n    const result = {\n        code,\n        message,\n    };\n    return result;\n}\n//# sourceMappingURL=payload.js.map"]},"metadata":{},"sourceType":"module"}