{"ast":null,"code":"import _classCallCheck from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nimport randombytes from 'randombytes';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport base64urlLib from 'base64url';\nimport keccakLib from 'keccak'; // TODO: should be crypto safe\n\nvar randomId = function randomId() {\n  return randombytes(32).toString(\"hex\");\n};\n\nvar URLWithHashParams = /*#__PURE__*/function (_URL) {\n  _inherits(URLWithHashParams, _URL);\n\n  var _super = _createSuper(URLWithHashParams);\n\n  function URLWithHashParams() {\n    var _this;\n\n    _classCallCheck(this, URLWithHashParams);\n\n    _this = _super.apply(this, arguments);\n\n    _defineProperty(_assertThisInitialized(_this), \"hashParams\", new URLSearchParams());\n\n    return _this;\n  }\n\n  _createClass(URLWithHashParams, [{\n    key: \"toString\",\n    value: function toString() {\n      this.hash = this.hashParams.toString();\n      return _get(_getPrototypeOf(URLWithHashParams.prototype), \"toString\", this).call(this);\n    }\n  }]);\n\n  return URLWithHashParams;\n}( /*#__PURE__*/_wrapNativeSuper(URL));\n\nvar base64url = base64urlLib;\n\nfunction safebtoa(str) {\n  return base64url.encode(str);\n}\n\nfunction safeatob(str) {\n  // Going backwards: from bytestream, to percent-encoding, to original string.\n  return base64url.decode(str);\n}\n\nvar keccak = keccakLib;\n\nfunction base64toJSON(b64str) {\n  return JSON.parse(base64url.decode(b64str));\n}\n\nfunction jsonToBase64(json) {\n  return base64url.encode(JSON.stringify(json));\n}\n\nfunction keccak256(str) {\n  var input = str;\n\n  if (typeof str === \"string\" && str.slice(0, 2) === \"0x\" && str.length === 66) {\n    input = Buffer.from(str.slice(2), \"hex\");\n  }\n\n  var data = \"0x\".concat(keccak(\"keccak256\").update(input).digest(\"hex\").padStart(64, \"0\"));\n  return data;\n}\n\nexport { URLWithHashParams, base64toJSON, base64url, jsonToBase64, keccak, keccak256, randomId, safeatob, safebtoa };","map":{"version":3,"sources":["../src/randomId.ts","../src/url.ts","../src/utils.ts"],"names":["randomId","randombytes","URLWithHashParams","URL","toString","base64url","base64urlLib","safebtoa","str","safeatob","keccak","keccakLib","base64toJSON","b64str","JSON","jsonToBase64","json","keccak256","input","Buffer","data"],"mappings":";;;;;;;;;;;gCAAA;;IAGaA,QAAQ,GAAG,SAAXA,QAAW;EAAA,OAAcC,WAAW,CAAXA,EAAW,CAAXA,CAAAA,QAAAA,CAAAA,KAAAA,CAAd;AAAA,C;;ICDXC,iB;;;;;;;;;;;;iEACc,IAAA,eAAA,E;;;;;;;WAEzBE,oBAAQ;MACN,KAAA,IAAA,GAAY,KAAA,UAAA,CAAZ,QAAY,EAAZ;MACA,OAAO,qEAAA,IAAA,CAAP,IAAO,CAAP;IACD;;;;iCANoCD,G;;ICC1BE,SAAS,GAAGC,Y;;SAETC,Q,CAASC,G,EAAAA;EACvB,OAAOH,SAAS,CAATA,MAAAA,CAAP,GAAOA,CAAP;AACD;;SAEeI,Q,CAASD,G,EAAAA;EACvB;EACA,OAAOH,SAAS,CAATA,MAAAA,CAAP,GAAOA,CAAP;AACD;;IAEYK,MAAM,GAAGC,S;;SAINC,Y,CAAaC,M,EAAAA;EAC3B,OAAOC,IAAI,CAAJA,KAAAA,CAAWT,SAAS,CAATA,MAAAA,CAAlB,MAAkBA,CAAXS,CAAP;AACD;;SAEeC,Y,CAAaC,I,EAAAA;EAC3B,OAAOX,SAAS,CAATA,MAAAA,CAAiBS,IAAI,CAAJA,SAAAA,CAAxB,IAAwBA,CAAjBT,CAAP;AACD;;SAEeY,S,CAAUT,G,EAAAA;EACxB,IAAIU,KAAK,GAAT,GAAA;;EACA,IAAI,OAAA,GAAA,KAAA,QAAA,IAA2BV,GAAG,CAAHA,KAAAA,CAAAA,CAAAA,EAAAA,CAAAA,MAA3B,IAAA,IAAuDA,GAAG,CAAHA,MAAAA,KAA3D,EAAA,EAA8E;IAC5EU,KAAK,GAAGC,MAAM,CAANA,IAAAA,CAAYX,GAAG,CAAHA,KAAAA,CAAZW,CAAYX,CAAZW,EAARD,KAAQC,CAARD;EACD;;EACD,IAAME,IAAI,GAAA,KAAA,MAAA,CAAQV,MAAM,CAANA,WAAM,CAANA,CAAAA,MAAAA,CAAAA,KAAAA,EAAAA,MAAAA,CAAAA,KAAAA,EAAAA,QAAAA,CAAAA,EAAAA,EAAlB,GAAkBA,CAAR,CAAV;EACA,OAAA,IAAA;AACD","sourcesContent":["import randombytes from 'randombytes';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport base64urlLib from 'base64url';\nimport keccakLib from 'keccak';\n\n// TODO: should be crypto safe\nconst randomId = () => randombytes(32).toString(\"hex\");\n\nclass URLWithHashParams extends URL {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"hashParams\", new URLSearchParams());\n  }\n\n  toString() {\n    this.hash = this.hashParams.toString();\n    return super.toString.call(this);\n  }\n\n}\n\nconst base64url = base64urlLib;\nfunction safebtoa(str) {\n  return base64url.encode(str);\n}\nfunction safeatob(str) {\n  // Going backwards: from bytestream, to percent-encoding, to original string.\n  return base64url.decode(str);\n}\nconst keccak = keccakLib;\nfunction base64toJSON(b64str) {\n  return JSON.parse(base64url.decode(b64str));\n}\nfunction jsonToBase64(json) {\n  return base64url.encode(JSON.stringify(json));\n}\nfunction keccak256(str) {\n  let input = str;\n\n  if (typeof str === \"string\" && str.slice(0, 2) === \"0x\" && str.length === 66) {\n    input = Buffer.from(str.slice(2), \"hex\");\n  }\n\n  const data = \"0x\".concat(keccak(\"keccak256\").update(input).digest(\"hex\").padStart(64, \"0\"));\n  return data;\n}\n\nexport { URLWithHashParams, base64toJSON, base64url, jsonToBase64, keccak, keccak256, randomId, safeatob, safebtoa };\n//# sourceMappingURL=openloginUtils.esm.js.map\n"]},"metadata":{},"sourceType":"module"}