{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MergedStore = void 0;\n\nvar ObservableStore_1 = require(\"./ObservableStore\");\n\nvar MergedStore = /*#__PURE__*/function (_ObservableStore_1$Ob) {\n  _inherits(MergedStore, _ObservableStore_1$Ob);\n\n  var _super = _createSuper(MergedStore);\n\n  function MergedStore() {\n    var _this;\n\n    var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, MergedStore);\n\n    // Typecast: Preserve existing behavior\n    _this = _super.call(this, {});\n    _this._children = children; // subscribe to children\n\n    children.forEach(function (child) {\n      return _this._addChild(child);\n    });\n\n    _this._updateWholeState();\n\n    return _this;\n  }\n\n  _createClass(MergedStore, [{\n    key: \"_addChild\",\n    value: function _addChild(child) {\n      var _this2 = this;\n\n      child.subscribe(function () {\n        return _this2._updateWholeState();\n      });\n    }\n  }, {\n    key: \"_updateWholeState\",\n    value: function _updateWholeState() {\n      var childStates = this._children.map(function (child) {\n        return child.getState();\n      }); // apply shallow merge over states\n\n\n      var state = Object.assign.apply(Object, [{}].concat(_toConsumableArray(childStates)));\n      this.putState(state);\n    }\n  }]);\n\n  return MergedStore;\n}(ObservableStore_1.ObservableStore);\n\nexports.MergedStore = MergedStore;","map":{"version":3,"sources":["../src/MergedStore.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,IAAA,iBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;IAEa,W;;;;;EAKX,uBAAyB;IAAA;;IAAA,IAAb,QAAa,uEAAF,EAAE;;IAAA;;IACvB;IACA,0BAAM,EAAN;IAEA,MAAK,SAAL,GAAiB,QAAjB,CAJuB,CAKvB;;IACA,QAAQ,CAAC,OAAT,CAAiB,UAAC,KAAD;MAAA,OAAW,MAAK,SAAL,CAAe,KAAf,CAAX;IAAA,CAAjB;;IACA,MAAK,iBAAL;;IAPuB;EAQxB;;;;WAED,mBAAU,KAAV,EAA4C;MAAA;;MAC1C,KAAK,CAAC,SAAN,CAAgB;QAAA,OAAM,MAAI,CAAC,iBAAL,EAAN;MAAA,CAAhB;IACD;;;WAED,6BAAiB;MACf,IAAM,WAAW,GAAG,KAAK,SAAL,CAAe,GAAf,CAAmB,UAAC,KAAD;QAAA,OAAW,KAAK,CAAC,QAAN,EAAX;MAAA,CAAnB,CAApB,CADe,CAEf;;;MACA,IAAM,KAAK,GAAG,MAAM,CAAC,MAAP,OAAA,MAAM,GAAQ,EAAR,4BAAe,WAAf,GAApB;MACA,KAAK,QAAL,CAAc,KAAd;IACD;;;;EAtBO,iBAAA,CAAA,e;;AAFV,OAAA,CAAA,WAAA,GAAA,WAAA","sourcesContent":["import { ObservableStore } from './ObservableStore';\n\nexport class MergedStore<\n  T extends Record<string, unknown>,\n> extends ObservableStore<T> {\n  private _children: ObservableStore<Partial<T>>[];\n\n  constructor(children = []) {\n    // Typecast: Preserve existing behavior\n    super({} as unknown as T);\n\n    this._children = children;\n    // subscribe to children\n    children.forEach((child) => this._addChild(child));\n    this._updateWholeState();\n  }\n\n  _addChild(child: ObservableStore<Partial<T>>): void {\n    child.subscribe(() => this._updateWholeState());\n  }\n\n  _updateWholeState(): void {\n    const childStates = this._children.map((child) => child.getState());\n    // apply shallow merge over states\n    const state = Object.assign({}, ...childStates);\n    this.putState(state);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}