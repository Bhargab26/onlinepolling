{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { setAPIKey as _setAPIKey, setEmbedHost as _setEmbedHost, post } from '@toruslabs/http-helpers';\nimport stringify from 'json-stable-stringify';\nimport { ec as ec$1 } from 'elliptic';\nimport createKeccakHash from 'keccak';\nimport { encrypt, getPublic, decrypt } from '@toruslabs/eccrypto';\n\nfunction keccak256(a) {\n  return createKeccakHash(\"keccak256\").update(a).digest();\n}\n\nvar ec = new ec$1(\"secp256k1\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar MetadataStorageLayer = /*#__PURE__*/function () {\n  // ms\n  function MetadataStorageLayer() {\n    _classCallCheck(this, MetadataStorageLayer);\n\n    var metadataHost = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"https://metadata.tor.us\";\n    var serverTimeOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    _defineProperty(this, \"metadataHost\", void 0);\n\n    _defineProperty(this, \"serverTimeOffset\", void 0);\n\n    this.metadataHost = metadataHost;\n    this.serverTimeOffset = serverTimeOffset;\n  }\n\n  _createClass(MetadataStorageLayer, [{\n    key: \"generateMetadataParams\",\n    value: function generateMetadataParams(message, privateKeyHex) {\n      var _ref, _sig$recoveryParam;\n\n      var key = ec.keyFromPrivate(privateKeyHex, \"hex\");\n      var setData = {\n        data: message,\n        timestamp: Math.floor(this.serverTimeOffset + Date.now() / 1000).toString(16)\n      };\n      var sig = key.sign(keccak256(stringify(setData)));\n      return {\n        pub_key_X: key.getPublic().getX().toString(\"hex\"),\n        pub_key_Y: key.getPublic().getY().toString(\"hex\"),\n        set_data: setData,\n        signature: Buffer.from((_ref = sig.r.toString(16, 64) + sig.s.toString(16, 64) + ((_sig$recoveryParam = sig.recoveryParam) === null || _sig$recoveryParam === void 0 ? void 0 : _sig$recoveryParam.toString(16).padStart(2, \"0\").slice(-2))) !== null && _ref !== void 0 ? _ref : \"00\", \"hex\").toString(\"base64\")\n      };\n    }\n  }, {\n    key: \"generatePubKeyParams\",\n    value: function generatePubKeyParams(privateKeyHex) {\n      var key = ec.keyFromPrivate(privateKeyHex, \"hex\");\n      return {\n        pub_key_X: key.getPublic().getX().toString(\"hex\"),\n        pub_key_Y: key.getPublic().getY().toString(\"hex\")\n      };\n    }\n  }, {\n    key: \"setMetadata\",\n    value: function () {\n      var _setMetadata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data, namespace, options) {\n        var params, metadataResponse;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                params = namespace !== null ? _objectSpread(_objectSpread({}, data), {}, {\n                  namespace: namespace\n                }) : data;\n                _context.next = 3;\n                return post(\"\".concat(this.metadataHost, \"/set\"), params, options, {\n                  useAPIKey: true\n                });\n\n              case 3:\n                metadataResponse = _context.sent;\n                return _context.abrupt(\"return\", metadataResponse.message);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function setMetadata(_x, _x2, _x3) {\n        return _setMetadata.apply(this, arguments);\n      }\n\n      return setMetadata;\n    }()\n  }, {\n    key: \"getMetadata\",\n    value: function () {\n      var _getMetadata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(pubKey, namespace, options) {\n        var params, metadataResponse;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                params = namespace !== null ? _objectSpread(_objectSpread({}, pubKey), {}, {\n                  namespace: namespace\n                }) : pubKey;\n                _context2.next = 3;\n                return post(\"\".concat(this.metadataHost, \"/get\"), params, options, {\n                  useAPIKey: true\n                });\n\n              case 3:\n                metadataResponse = _context2.sent;\n                return _context2.abrupt(\"return\", metadataResponse.message);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getMetadata(_x4, _x5, _x6) {\n        return _getMetadata.apply(this, arguments);\n      }\n\n      return getMetadata;\n    }()\n  }], [{\n    key: \"setAPIKey\",\n    value: function setAPIKey(apiKey) {\n      _setAPIKey(apiKey);\n    }\n  }, {\n    key: \"setEmbedHost\",\n    value: function setEmbedHost(embedHost) {\n      _setEmbedHost(embedHost);\n    }\n  }]);\n\n  return MetadataStorageLayer;\n}();\n\nvar WEBAUTHN_TORUS_SHARE = \"webauthn_torus_share\";\nvar WEBAUTHN_DEVICE_SHARE = \"webauthn_device_share\";\n\nfunction encParamsHexToBuf(encParamsHex) {\n  return {\n    iv: Buffer.from(encParamsHex.iv, \"hex\"),\n    ephemPublicKey: Buffer.from(encParamsHex.ephemPublicKey, \"hex\"),\n    ciphertext: Buffer.from(encParamsHex.ciphertext, \"hex\"),\n    mac: Buffer.from(encParamsHex.mac, \"hex\")\n  };\n}\n\nfunction encParamsBufToHex(encParams) {\n  return {\n    iv: Buffer.from(encParams.iv).toString(\"hex\"),\n    ephemPublicKey: Buffer.from(encParams.ephemPublicKey).toString(\"hex\"),\n    ciphertext: Buffer.from(encParams.ciphertext).toString(\"hex\"),\n    mac: Buffer.from(encParams.mac).toString(\"hex\")\n  };\n}\n\nfunction encryptData(_x7, _x8) {\n  return _encryptData.apply(this, arguments);\n}\n\nfunction _encryptData() {\n  _encryptData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(privKeyHex, d) {\n    var serializedDec, serializedBuf, encParams, encParamsHex, sData;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            serializedDec = JSON.stringify(d);\n            serializedBuf = Buffer.from(serializedDec, \"utf-8\");\n            _context3.next = 4;\n            return encrypt(getPublic(Buffer.from(privKeyHex, \"hex\")), serializedBuf);\n\n          case 4:\n            encParams = _context3.sent;\n            encParamsHex = encParamsBufToHex(encParams);\n            sData = JSON.stringify(encParamsHex);\n            return _context3.abrupt(\"return\", sData);\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _encryptData.apply(this, arguments);\n}\n\nfunction decryptData(_x9, _x10) {\n  return _decryptData.apply(this, arguments);\n}\n\nfunction _decryptData() {\n  _decryptData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(privKeyHex, d) {\n    var encParamsHex, encParams, keyPair, serializedBuf, serializedDec, data;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            encParamsHex = JSON.parse(d);\n            encParams = encParamsHexToBuf(encParamsHex);\n            keyPair = ec.keyFromPrivate(privKeyHex);\n            _context4.next = 5;\n            return decrypt(Buffer.from(keyPair.getPrivate().toString(\"hex\", 64), \"hex\"), encParams);\n\n          case 5:\n            serializedBuf = _context4.sent;\n            serializedDec = serializedBuf.toString(\"utf-8\");\n            data = JSON.parse(serializedDec);\n            return _context4.abrupt(\"return\", data);\n\n          case 9:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _decryptData.apply(this, arguments);\n}\n\nfunction getAndDecryptData(_x11, _x12, _x13) {\n  return _getAndDecryptData.apply(this, arguments);\n}\n\nfunction _getAndDecryptData() {\n  _getAndDecryptData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(m, privKeyHex, namespace) {\n    var keyPair, pubKey, serializedData, data;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            keyPair = ec.keyFromPrivate(privKeyHex);\n            pubKey = keyPair.getPublic();\n            _context5.next = 4;\n            return m.getMetadata({\n              pub_key_X: pubKey.getX().toString(16),\n              pub_key_Y: pubKey.getY().toString(16)\n            }, namespace);\n\n          case 4:\n            serializedData = _context5.sent;\n\n            if (serializedData) {\n              _context5.next = 7;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", null);\n\n          case 7:\n            _context5.next = 9;\n            return decryptData(privKeyHex, serializedData);\n\n          case 9:\n            data = _context5.sent;\n            return _context5.abrupt(\"return\", data);\n\n          case 11:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _getAndDecryptData.apply(this, arguments);\n}\n\nfunction encryptAndSetData(_x14, _x15, _x16, _x17) {\n  return _encryptAndSetData.apply(this, arguments);\n}\n\nfunction _encryptAndSetData() {\n  _encryptAndSetData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(m, privKeyHex, d, namespace) {\n    var sData, metadataParams;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return encryptData(privKeyHex, d);\n\n          case 2:\n            sData = _context6.sent;\n            metadataParams = m.generateMetadataParams(sData, privKeyHex);\n            _context6.next = 6;\n            return m.setMetadata(metadataParams, namespace);\n\n          case 6:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _encryptAndSetData.apply(this, arguments);\n}\n\nfunction setTorusShare(_x18, _x19, _x20, _x21, _x22) {\n  return _setTorusShare.apply(this, arguments);\n}\n\nfunction _setTorusShare() {\n  _setTorusShare = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(m, webAuthnPubKey, webAuthnRefHex, subspace, subspaceData) {\n    var refKeyPair, privKey, pubKey, data, d, serializedSubspaceData, serializedSubspaceDataBuf, encSubspaceData, encSubspaceDataHex;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            refKeyPair = ec.keyFromPrivate(webAuthnRefHex);\n            privKey = refKeyPair.getPrivate();\n            pubKey = ec.keyFromPublic({\n              x: webAuthnPubKey.pub_key_X,\n              y: webAuthnPubKey.pub_key_Y\n            });\n            _context7.next = 5;\n            return getAndDecryptData(m, webAuthnRefHex, WEBAUTHN_TORUS_SHARE);\n\n          case 5:\n            data = _context7.sent;\n            d = {};\n            if (data) d = data;\n            serializedSubspaceData = JSON.stringify(subspaceData);\n            serializedSubspaceDataBuf = Buffer.from(serializedSubspaceData, \"utf-8\");\n            _context7.next = 12;\n            return encrypt(Buffer.from(pubKey.getPublic(\"hex\"), \"hex\"), serializedSubspaceDataBuf);\n\n          case 12:\n            encSubspaceData = _context7.sent;\n            encSubspaceDataHex = encParamsBufToHex(encSubspaceData);\n            d[subspace] = encSubspaceDataHex;\n            _context7.next = 17;\n            return encryptAndSetData(m, privKey.toString(\"hex\", 64), d, WEBAUTHN_TORUS_SHARE);\n\n          case 17:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _setTorusShare.apply(this, arguments);\n}\n\nfunction setDeviceShare(_x23, _x24, _x25, _x26) {\n  return _setDeviceShare.apply(this, arguments);\n}\n\nfunction _setDeviceShare() {\n  _setDeviceShare = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(m, webAuthnRefHex, subspace, subspaceData) {\n    var keyPair, privKey, data, d;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            keyPair = ec.keyFromPrivate(webAuthnRefHex);\n            privKey = keyPair.getPrivate();\n            _context8.next = 4;\n            return getAndDecryptData(m, webAuthnRefHex, WEBAUTHN_DEVICE_SHARE);\n\n          case 4:\n            data = _context8.sent;\n            d = {};\n            if (data) d = data;\n            d[subspace] = subspaceData;\n            _context8.next = 10;\n            return encryptAndSetData(m, privKey.toString(\"hex\", 64), d, WEBAUTHN_DEVICE_SHARE);\n\n          case 10:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _setDeviceShare.apply(this, arguments);\n}\n\nfunction getTorusShare(_x27, _x28, _x29, _x30) {\n  return _getTorusShare.apply(this, arguments);\n}\n\nfunction _getTorusShare() {\n  _getTorusShare = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(m, webAuthnKeyHex, webAuthnRefHex, subspace) {\n    var data, encParamsHex, encParams, keyPair, privKey, serializedSubspaceDataBuf, serializedSubspaceData, subspaceData;\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return getAndDecryptData(m, webAuthnRefHex, WEBAUTHN_TORUS_SHARE);\n\n          case 2:\n            data = _context9.sent;\n\n            if (data) {\n              _context9.next = 5;\n              break;\n            }\n\n            return _context9.abrupt(\"return\", null);\n\n          case 5:\n            encParamsHex = data[subspace];\n\n            if (encParamsHex) {\n              _context9.next = 8;\n              break;\n            }\n\n            return _context9.abrupt(\"return\", null);\n\n          case 8:\n            encParams = encParamsHexToBuf(encParamsHex);\n            keyPair = ec.keyFromPrivate(webAuthnKeyHex);\n            privKey = keyPair.getPrivate();\n            _context9.next = 13;\n            return decrypt(Buffer.from(privKey.toString(\"hex\", 64), \"hex\"), encParams);\n\n          case 13:\n            serializedSubspaceDataBuf = _context9.sent;\n            serializedSubspaceData = serializedSubspaceDataBuf.toString(\"utf-8\");\n            subspaceData = JSON.parse(serializedSubspaceData);\n            return _context9.abrupt(\"return\", subspaceData);\n\n          case 17:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _getTorusShare.apply(this, arguments);\n}\n\nfunction getDeviceShare(_x31, _x32, _x33) {\n  return _getDeviceShare.apply(this, arguments);\n}\n\nfunction _getDeviceShare() {\n  _getDeviceShare = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(m, webAuthnRefHex, subspace) {\n    var data;\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.next = 2;\n            return getAndDecryptData(m, webAuthnRefHex, WEBAUTHN_DEVICE_SHARE);\n\n          case 2:\n            data = _context10.sent;\n\n            if (!data) {\n              _context10.next = 5;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", data[subspace]);\n\n          case 5:\n            return _context10.abrupt(\"return\", null);\n\n          case 6:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _getDeviceShare.apply(this, arguments);\n}\n\nexport { decryptData, MetadataStorageLayer as default, ec, encParamsBufToHex, encParamsHexToBuf, encryptAndSetData, encryptData, getAndDecryptData, getDeviceShare, getTorusShare, keccak256, setDeviceShare, setTorusShare };","map":{"version":3,"sources":["../src/utils.ts","../src/MetadataStorageLayer.ts","../src/webAuthnShareResolver.ts"],"names":["createKeccakHash","ec","constructor","metadataHost","serverTimeOffset","setAPIKey","setEmbedHost","generateMetadataParams","key","setData","data","timestamp","Math","Date","sig","keccak256","stringify","pub_key_X","pub_key_Y","set_data","signature","Buffer","generatePubKeyParams","setMetadata","params","namespace","metadataResponse","post","useAPIKey","getMetadata","WEBAUTHN_TORUS_SHARE","WEBAUTHN_DEVICE_SHARE","iv","encParamsHex","ephemPublicKey","ciphertext","mac","encParams","serializedDec","JSON","serializedBuf","encrypt","getPublic","encParamsBufToHex","sData","encParamsHexToBuf","keyPair","decrypt","pubKey","serializedData","decryptData","encryptData","metadataParams","m","refKeyPair","privKey","x","webAuthnPubKey","y","getAndDecryptData","d","serializedSubspaceData","serializedSubspaceDataBuf","encSubspaceData","encSubspaceDataHex","encryptAndSetData","subspaceData"],"mappings":"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","sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { setAPIKey, setEmbedHost, post } from '@toruslabs/http-helpers';\nimport stringify from 'json-stable-stringify';\nimport { ec as ec$1 } from 'elliptic';\nimport createKeccakHash from 'keccak';\nimport { encrypt, getPublic, decrypt } from '@toruslabs/eccrypto';\n\nfunction keccak256(a) {\n  return createKeccakHash(\"keccak256\").update(a).digest();\n}\nconst ec = new ec$1(\"secp256k1\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nclass MetadataStorageLayer {\n  // ms\n  constructor() {\n    let metadataHost = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"https://metadata.tor.us\";\n    let serverTimeOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    _defineProperty(this, \"metadataHost\", void 0);\n\n    _defineProperty(this, \"serverTimeOffset\", void 0);\n\n    this.metadataHost = metadataHost;\n    this.serverTimeOffset = serverTimeOffset;\n  }\n\n  static setAPIKey(apiKey) {\n    setAPIKey(apiKey);\n  }\n\n  static setEmbedHost(embedHost) {\n    setEmbedHost(embedHost);\n  }\n\n  generateMetadataParams(message, privateKeyHex) {\n    var _ref, _sig$recoveryParam;\n\n    const key = ec.keyFromPrivate(privateKeyHex, \"hex\");\n    const setData = {\n      data: message,\n      timestamp: Math.floor(this.serverTimeOffset + Date.now() / 1000).toString(16)\n    };\n    const sig = key.sign(keccak256(stringify(setData)));\n    return {\n      pub_key_X: key.getPublic().getX().toString(\"hex\"),\n      pub_key_Y: key.getPublic().getY().toString(\"hex\"),\n      set_data: setData,\n      signature: Buffer.from((_ref = sig.r.toString(16, 64) + sig.s.toString(16, 64) + ((_sig$recoveryParam = sig.recoveryParam) === null || _sig$recoveryParam === void 0 ? void 0 : _sig$recoveryParam.toString(16).padStart(2, \"0\").slice(-2))) !== null && _ref !== void 0 ? _ref : \"00\", \"hex\").toString(\"base64\")\n    };\n  }\n\n  generatePubKeyParams(privateKeyHex) {\n    const key = ec.keyFromPrivate(privateKeyHex, \"hex\");\n    return {\n      pub_key_X: key.getPublic().getX().toString(\"hex\"),\n      pub_key_Y: key.getPublic().getY().toString(\"hex\")\n    };\n  }\n\n  async setMetadata(data, namespace, options) {\n    const params = namespace !== null ? _objectSpread(_objectSpread({}, data), {}, {\n      namespace\n    }) : data;\n    const metadataResponse = await post(\"\".concat(this.metadataHost, \"/set\"), params, options, {\n      useAPIKey: true\n    });\n    return metadataResponse.message;\n  }\n\n  async getMetadata(pubKey, namespace, options) {\n    const params = namespace !== null ? _objectSpread(_objectSpread({}, pubKey), {}, {\n      namespace\n    }) : pubKey;\n    const metadataResponse = await post(\"\".concat(this.metadataHost, \"/get\"), params, options, {\n      useAPIKey: true\n    });\n    return metadataResponse.message;\n  }\n\n}\n\nconst WEBAUTHN_TORUS_SHARE = \"webauthn_torus_share\";\nconst WEBAUTHN_DEVICE_SHARE = \"webauthn_device_share\";\nfunction encParamsHexToBuf(encParamsHex) {\n  return {\n    iv: Buffer.from(encParamsHex.iv, \"hex\"),\n    ephemPublicKey: Buffer.from(encParamsHex.ephemPublicKey, \"hex\"),\n    ciphertext: Buffer.from(encParamsHex.ciphertext, \"hex\"),\n    mac: Buffer.from(encParamsHex.mac, \"hex\")\n  };\n}\nfunction encParamsBufToHex(encParams) {\n  return {\n    iv: Buffer.from(encParams.iv).toString(\"hex\"),\n    ephemPublicKey: Buffer.from(encParams.ephemPublicKey).toString(\"hex\"),\n    ciphertext: Buffer.from(encParams.ciphertext).toString(\"hex\"),\n    mac: Buffer.from(encParams.mac).toString(\"hex\")\n  };\n}\nasync function encryptData(privKeyHex, d) {\n  const serializedDec = JSON.stringify(d);\n  const serializedBuf = Buffer.from(serializedDec, \"utf-8\");\n  const encParams = await encrypt(getPublic(Buffer.from(privKeyHex, \"hex\")), serializedBuf);\n  const encParamsHex = encParamsBufToHex(encParams);\n  const sData = JSON.stringify(encParamsHex);\n  return sData;\n}\nasync function decryptData(privKeyHex, d) {\n  const encParamsHex = JSON.parse(d);\n  const encParams = encParamsHexToBuf(encParamsHex);\n  const keyPair = ec.keyFromPrivate(privKeyHex);\n  const serializedBuf = await decrypt(Buffer.from(keyPair.getPrivate().toString(\"hex\", 64), \"hex\"), encParams);\n  const serializedDec = serializedBuf.toString(\"utf-8\");\n  const data = JSON.parse(serializedDec);\n  return data;\n}\nasync function getAndDecryptData(m, privKeyHex, namespace) {\n  const keyPair = ec.keyFromPrivate(privKeyHex);\n  const pubKey = keyPair.getPublic();\n  const serializedData = await m.getMetadata({\n    pub_key_X: pubKey.getX().toString(16),\n    pub_key_Y: pubKey.getY().toString(16)\n  }, namespace);\n\n  if (!serializedData) {\n    return null;\n  }\n\n  const data = await decryptData(privKeyHex, serializedData);\n  return data;\n}\nasync function encryptAndSetData(m, privKeyHex, d, namespace) {\n  const sData = await encryptData(privKeyHex, d);\n  const metadataParams = m.generateMetadataParams(sData, privKeyHex);\n  await m.setMetadata(metadataParams, namespace);\n}\nasync function setTorusShare(m, webAuthnPubKey, webAuthnRefHex, subspace, subspaceData) {\n  const refKeyPair = ec.keyFromPrivate(webAuthnRefHex);\n  const privKey = refKeyPair.getPrivate();\n  const pubKey = ec.keyFromPublic({\n    x: webAuthnPubKey.pub_key_X,\n    y: webAuthnPubKey.pub_key_Y\n  });\n  const data = await getAndDecryptData(m, webAuthnRefHex, WEBAUTHN_TORUS_SHARE);\n  let d = {};\n  if (data) d = data;\n  const serializedSubspaceData = JSON.stringify(subspaceData);\n  const serializedSubspaceDataBuf = Buffer.from(serializedSubspaceData, \"utf-8\");\n  const encSubspaceData = await encrypt(Buffer.from(pubKey.getPublic(\"hex\"), \"hex\"), serializedSubspaceDataBuf);\n  const encSubspaceDataHex = encParamsBufToHex(encSubspaceData);\n  d[subspace] = encSubspaceDataHex;\n  await encryptAndSetData(m, privKey.toString(\"hex\", 64), d, WEBAUTHN_TORUS_SHARE);\n}\nasync function setDeviceShare(m, webAuthnRefHex, subspace, subspaceData) {\n  const keyPair = ec.keyFromPrivate(webAuthnRefHex);\n  const privKey = keyPair.getPrivate();\n  const data = await getAndDecryptData(m, webAuthnRefHex, WEBAUTHN_DEVICE_SHARE);\n  let d = {};\n  if (data) d = data;\n  d[subspace] = subspaceData;\n  await encryptAndSetData(m, privKey.toString(\"hex\", 64), d, WEBAUTHN_DEVICE_SHARE);\n}\nasync function getTorusShare(m, webAuthnKeyHex, webAuthnRefHex, subspace) {\n  const data = await getAndDecryptData(m, webAuthnRefHex, WEBAUTHN_TORUS_SHARE);\n  if (!data) return null;\n  const encParamsHex = data[subspace];\n  if (!encParamsHex) return null;\n  const encParams = encParamsHexToBuf(encParamsHex);\n  const keyPair = ec.keyFromPrivate(webAuthnKeyHex);\n  const privKey = keyPair.getPrivate();\n  const serializedSubspaceDataBuf = await decrypt(Buffer.from(privKey.toString(\"hex\", 64), \"hex\"), encParams);\n  const serializedSubspaceData = serializedSubspaceDataBuf.toString(\"utf-8\");\n  const subspaceData = JSON.parse(serializedSubspaceData);\n  return subspaceData;\n}\nasync function getDeviceShare(m, webAuthnRefHex, subspace) {\n  const data = await getAndDecryptData(m, webAuthnRefHex, WEBAUTHN_DEVICE_SHARE);\n  if (data) return data[subspace];\n  return null;\n}\n\nexport { decryptData, MetadataStorageLayer as default, ec, encParamsBufToHex, encParamsHexToBuf, encryptAndSetData, encryptData, getAndDecryptData, getDeviceShare, getTorusShare, keccak256, setDeviceShare, setTorusShare };\n//# sourceMappingURL=metadataHelpers.esm.js.map\n"]},"metadata":{},"sourceType":"module"}