{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _wrapNativeSuper from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nimport _defineProperty2 from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _regeneratorRuntime from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _get from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _classCallCheck from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Bhargab kalita/Downloads/DAO/DAO/PROJECTDAO/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { SafeEventEmitter, JRPCEngine, createAsyncMiddleware, mergeMiddleware, createScaffoldMiddleware } from '@toruslabs/openlogin-jrpc';\nimport { serializeError, ethErrors } from 'eth-rpc-errors';\nimport getCreateRandomId from 'json-rpc-random-id';\nimport { BigNumber } from 'bignumber.js';\nimport { fromSigned, bufferToInt, toUnsigned, stripHexPrefix, addHexPrefix, hashPersonalMessage, ecsign, intToBuffer } from 'ethereumjs-util';\nimport log from 'loglevel';\nimport { BroadcastChannel } from '@toruslabs/broadcast-channel';\nimport { get, post, patch, remove } from '@toruslabs/http-helpers';\nimport bowser from 'bowser';\nimport { cloneDeep, pickBy, omitBy } from 'lodash';\n\nfunction ownKeys$3(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$3(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$3(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$3(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n/**\n * Controller class that provides configuration, state management, and subscriptions\n */\n\n\nvar BaseController = /*#__PURE__*/function (_SafeEventEmitter) {\n  _inherits(BaseController, _SafeEventEmitter);\n\n  var _super = _createSuper(BaseController);\n\n  /**\n   * Default options used to configure this controller\n   */\n\n  /**\n   * Default state set on this controller\n   */\n\n  /**\n   * Determines if listeners are notified of state changes\n   */\n\n  /**\n   * Name of this controller used during composition\n   */\n\n  /**\n   * Creates a BaseController instance. Both initial state and initial\n   * configuration options are merged with defaults upon initialization.\n   *\n   * @param config - Initial options used to configure this controller\n   * @param state - Initial state to set on this controller\n   */\n  function BaseController(_ref) {\n    var _this;\n\n    _classCallCheck(this, BaseController);\n\n    var _ref$config = _ref.config,\n        config = _ref$config === void 0 ? {} : _ref$config,\n        _ref$state = _ref.state,\n        state = _ref$state === void 0 ? {} : _ref$state;\n    _this = _super.call(this); // Use assign since generics can't be spread: https://git.io/vpRhY\n\n    _defineProperty(_assertThisInitialized(_this), \"defaultConfig\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"defaultState\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"disabled\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"name\", \"BaseController\");\n\n    _defineProperty(_assertThisInitialized(_this), \"initialConfig\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"initialState\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"internalConfig\", _this.defaultConfig);\n\n    _defineProperty(_assertThisInitialized(_this), \"internalState\", _this.defaultState);\n\n    _this.initialState = state;\n    _this.initialConfig = config;\n    return _this;\n  }\n  /**\n   * Retrieves current controller configuration options\n   *\n   * @returns - Current configuration\n   */\n\n\n  _createClass(BaseController, [{\n    key: \"config\",\n    get: function get() {\n      return this.internalConfig;\n    }\n    /**\n     * Retrieves current controller state\n     *\n     * @returns - Current state\n     */\n\n  }, {\n    key: \"state\",\n    get: function get() {\n      return this.internalState;\n    }\n    /**\n     * Updates controller configuration\n     *\n     * @param config - New configuration options\n     * @param overwrite - Overwrite config instead of merging\n     * @param fullUpdate - Boolean that defines if the update is partial or not\n     */\n\n  }, {\n    key: \"configure\",\n    value: function configure(config) {\n      var overwrite = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var fullUpdate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      if (fullUpdate) {\n        this.internalConfig = overwrite ? config : Object.assign(this.internalConfig, config);\n\n        for (var key in this.internalConfig) {\n          if (typeof this.internalConfig[key] !== \"undefined\") {\n            this[key] = this.internalConfig[key];\n          }\n        }\n      } else {\n        for (var _key in config) {\n          /* istanbul ignore else */\n          if (typeof this.internalConfig[_key] !== \"undefined\") {\n            this.internalConfig[_key] = config[_key];\n            this[_key] = config[_key];\n          }\n        }\n      }\n    }\n    /**\n     * Updates controller state\n     *\n     * @param state - New state\n     * @param overwrite - Overwrite state instead of merging\n     */\n\n  }, {\n    key: \"update\",\n    value: function update(state) {\n      var overwrite = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      this.internalState = overwrite ? _objectSpread$3({}, state) : _objectSpread$3(_objectSpread$3({}, this.internalState), state);\n      this.emit(\"store\", this.internalState);\n    }\n    /**\n     * Enables the controller. This sets each config option as a member\n     * variable on this instance and triggers any defined setters. This\n     * also sets initial state and triggers any listeners.\n     *\n     * @returns - This controller instance\n     */\n\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      this.internalState = this.defaultState;\n      this.internalConfig = this.defaultConfig;\n      this.configure(this.initialConfig);\n      this.update(this.initialState);\n      return this;\n    }\n  }]);\n\n  return BaseController;\n}(SafeEventEmitter);\n\nvar sec = 1000;\n\nvar calculateSum = function calculateSum(accumulator, currentValue) {\n  return accumulator + currentValue;\n};\n\nvar blockTrackerEvents = [\"sync\", \"latest\"];\n\nvar BaseBlockTracker = /*#__PURE__*/function (_BaseController) {\n  _inherits(BaseBlockTracker, _BaseController);\n\n  var _super2 = _createSuper(BaseBlockTracker);\n\n  function BaseBlockTracker(_ref) {\n    var _this2;\n\n    _classCallCheck(this, BaseBlockTracker);\n\n    var _ref$config2 = _ref.config,\n        config = _ref$config2 === void 0 ? {} : _ref$config2,\n        _ref$state2 = _ref.state,\n        state = _ref$state2 === void 0 ? {} : _ref$state2;\n    _this2 = _super2.call(this, {\n      config: config,\n      state: state\n    }); // config\n\n    _defineProperty(_assertThisInitialized(_this2), \"name\", \"BaseBlockTracker\");\n\n    _defineProperty(_assertThisInitialized(_this2), \"_blockResetTimeout\", void 0);\n\n    _this2.defaultState = {\n      _currentBlock: {\n        idempotencyKey: \"\"\n      },\n      _isRunning: false\n    };\n    _this2.defaultConfig = {\n      blockResetDuration: 20 * sec\n    };\n\n    _this2.initialize(); // bind functions for internal use\n\n\n    _this2._onNewListener = _this2._onNewListener.bind(_assertThisInitialized(_this2));\n    _this2._onRemoveListener = _this2._onRemoveListener.bind(_assertThisInitialized(_this2));\n    _this2._resetCurrentBlock = _this2._resetCurrentBlock.bind(_assertThisInitialized(_this2)); // listen for handler changes\n\n    _this2._setupInternalEvents();\n\n    return _this2;\n  }\n\n  _createClass(BaseBlockTracker, [{\n    key: \"isRunning\",\n    value: function isRunning() {\n      return this.state._isRunning;\n    }\n  }, {\n    key: \"getCurrentBlock\",\n    value: function getCurrentBlock() {\n      return this.state._currentBlock;\n    }\n  }, {\n    key: \"getLatestBlock\",\n    value: function () {\n      var _getLatestBlock = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this3 = this;\n\n        var latestBlock;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.state._currentBlock) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.state._currentBlock);\n\n              case 2:\n                _context.next = 4;\n                return new Promise(function (resolve) {\n                  return _this3.once(\"latest\", function (newState) {\n                    if (newState._currentBlock) {\n                      resolve(newState._currentBlock);\n                    }\n                  });\n                });\n\n              case 4:\n                latestBlock = _context.sent;\n                return _context.abrupt(\"return\", latestBlock);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getLatestBlock() {\n        return _getLatestBlock.apply(this, arguments);\n      }\n\n      return getLatestBlock;\n    }() // dont allow module consumer to remove our internal event listeners\n\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners(eventName) {\n      if (eventName) {\n        _get(_getPrototypeOf(BaseBlockTracker.prototype), \"removeAllListeners\", this).call(this, eventName);\n      } else {\n        _get(_getPrototypeOf(BaseBlockTracker.prototype), \"removeAllListeners\", this).call(this);\n      } // re-add internal events\n\n\n      this._setupInternalEvents(); // trigger stop check just in case\n\n\n      this._onRemoveListener();\n\n      return this;\n    }\n    /**\n     * To be implemented in subclass.\n     */\n\n  }, {\n    key: \"_start\",\n    value: function _start() {// default behavior is noop\n    }\n    /**\n     * To be implemented in subclass.\n     */\n\n  }, {\n    key: \"_end\",\n    value: function _end() {// default behavior is noop\n    }\n  }, {\n    key: \"_newPotentialLatest\",\n    value: function _newPotentialLatest(newBlock) {\n      var currentBlock = this.state._currentBlock; // only update if blok number is higher\n\n      if (currentBlock && newBlock.idempotencyKey === currentBlock.idempotencyKey) {\n        return;\n      }\n\n      this._setCurrentBlock(newBlock);\n    }\n  }, {\n    key: \"_setupInternalEvents\",\n    value: function _setupInternalEvents() {\n      // first remove listeners for idempotency\n      this.removeListener(\"newListener\", this._onNewListener);\n      this.removeListener(\"removeListener\", this._onRemoveListener); // then add them\n\n      this.on(\"removeListener\", this._onRemoveListener);\n      this.on(\"newListener\", this._onNewListener);\n    }\n  }, {\n    key: \"_onNewListener\",\n    value: function _onNewListener() {\n      this._maybeStart();\n    }\n  }, {\n    key: \"_onRemoveListener\",\n    value: function _onRemoveListener() {\n      // `removeListener` is called *after* the listener is removed\n      if (this._getBlockTrackerEventCount() > 0) {\n        return;\n      }\n\n      this._maybeEnd();\n    }\n  }, {\n    key: \"_maybeStart\",\n    value: function _maybeStart() {\n      if (this.state._isRunning) {\n        return;\n      }\n\n      this.state._isRunning = true; // cancel setting latest block to stale\n\n      this._cancelBlockResetTimeout();\n\n      this._start();\n    }\n  }, {\n    key: \"_maybeEnd\",\n    value: function _maybeEnd() {\n      if (!this.state._isRunning) {\n        return;\n      }\n\n      this.state._isRunning = false;\n\n      this._setupBlockResetTimeout();\n\n      this._end();\n    }\n  }, {\n    key: \"_getBlockTrackerEventCount\",\n    value: function _getBlockTrackerEventCount() {\n      var _this4 = this;\n\n      return blockTrackerEvents.map(function (eventName) {\n        return _this4.listenerCount(eventName);\n      }).reduce(calculateSum);\n    }\n  }, {\n    key: \"_setCurrentBlock\",\n    value: function _setCurrentBlock(newBlock) {\n      var oldBlock = this.state._currentBlock;\n      this.update({\n        _currentBlock: newBlock\n      });\n      this.emit(\"latest\", newBlock);\n      this.emit(\"sync\", {\n        oldBlock: oldBlock,\n        newBlock: newBlock\n      });\n    }\n  }, {\n    key: \"_setupBlockResetTimeout\",\n    value: function _setupBlockResetTimeout() {\n      // clear any existing timeout\n      this._cancelBlockResetTimeout(); // clear latest block when stale\n\n\n      this._blockResetTimeout = setTimeout(this._resetCurrentBlock, this.config.blockResetDuration); // nodejs - dont hold process open\n\n      if (this._blockResetTimeout.unref) {\n        this._blockResetTimeout.unref();\n      }\n    }\n  }, {\n    key: \"_cancelBlockResetTimeout\",\n    value: function _cancelBlockResetTimeout() {\n      if (this._blockResetTimeout) {\n        clearTimeout(this._blockResetTimeout);\n      }\n    }\n  }, {\n    key: \"_resetCurrentBlock\",\n    value: function _resetCurrentBlock() {\n      this.update({\n        _currentBlock: {\n          idempotencyKey: \"\"\n        }\n      });\n    }\n  }]);\n\n  return BaseBlockTracker;\n}(BaseController);\n\nvar filterNoop = function filterNoop() {\n  return true;\n};\n\nvar internalEvents = [\"newListener\", \"removeListener\"];\n\nvar externalEventFilter = function externalEventFilter(name) {\n  return !internalEvents.includes(name);\n};\n\nfunction getRawListeners(eventEmitter, name) {\n  // prefer native\n  return eventEmitter.rawListeners(name);\n}\n\nfunction createEventEmitterProxy(initialTarget, opts) {\n  // parse options\n  var finalOpts = opts || {};\n  var eventFilter = finalOpts.eventFilter || filterNoop;\n  if (typeof eventFilter === \"string\" && eventFilter === \"skipInternal\") eventFilter = externalEventFilter;\n  if (typeof eventFilter !== \"function\") throw new Error(\"createEventEmitterProxy - Invalid eventFilter\");\n  var target = initialTarget;\n\n  var setTarget = function setTarget(newTarget) {\n    var oldTarget = target;\n    target = newTarget;\n    oldTarget.eventNames().filter(eventFilter).forEach(function (name) {\n      getRawListeners(oldTarget, name).forEach(function (handler) {\n        return newTarget.on(name, handler);\n      });\n    }); // remove old listeners\n\n    oldTarget.removeAllListeners();\n  };\n\n  var proxy = new Proxy({}, {\n    get: function get(_, name) {\n      // override `setTarget` access\n      if (name === \"setTarget\") return setTarget;\n      return target[name];\n    },\n    set: function set(_, name, value) {\n      // allow `setTarget` overrides\n      if (name === \"setTarget\") {\n        setTarget = value;\n        return true;\n      }\n\n      target[name] = value;\n      return true;\n    }\n  });\n  return proxy;\n}\n\nfunction createSwappableProxy(initialTarget) {\n  var target = initialTarget;\n\n  var setTarget = function setTarget(newTarget) {\n    target = newTarget;\n  };\n\n  var proxy = new Proxy({}, {\n    get: function get(_, name) {\n      // override `setTarget` access\n      if (name === \"setTarget\") return setTarget;\n      return target[name];\n    },\n    set: function set(_, name, value) {\n      // allow `setTarget` overrides\n      if (name === \"setTarget\") {\n        setTarget = value;\n        return true;\n      }\n\n      target[name] = value;\n      return true;\n    }\n  });\n  return proxy;\n}\n\nvar POLLING_INTERVAL = 600000;\n\nvar BaseCurrencyController = /*#__PURE__*/function (_BaseController2) {\n  _inherits(BaseCurrencyController, _BaseController2);\n\n  var _super3 = _createSuper(BaseCurrencyController);\n\n  function BaseCurrencyController(_ref) {\n    var _this5;\n\n    _classCallCheck(this, BaseCurrencyController);\n\n    var _ref$config3 = _ref.config,\n        config = _ref$config3 === void 0 ? {} : _ref$config3,\n        state = _ref.state;\n    _this5 = _super3.call(this, {\n      config: config,\n      state: state\n    });\n    _this5.defaultState = {\n      currentCurrency: \"usd\",\n      conversionRate: 0,\n      conversionDate: \"N/A\",\n      nativeCurrency: \"ETH\"\n    };\n    _this5.defaultConfig = {\n      pollInterval: POLLING_INTERVAL\n    };\n\n    _this5.initialize();\n\n    return _this5;\n  } //\n  // PUBLIC METHODS\n  //\n\n\n  _createClass(BaseCurrencyController, [{\n    key: \"getNativeCurrency\",\n    value: function getNativeCurrency() {\n      return this.state.nativeCurrency;\n    }\n  }, {\n    key: \"setNativeCurrency\",\n    value: function setNativeCurrency(nativeCurrency) {\n      this.update({\n        nativeCurrency: nativeCurrency,\n        ticker: nativeCurrency\n      });\n    }\n  }, {\n    key: \"getCurrentCurrency\",\n    value: function getCurrentCurrency() {\n      return this.state.currentCurrency;\n    }\n  }, {\n    key: \"setCurrentCurrency\",\n    value: function setCurrentCurrency(currentCurrency) {\n      this.update({\n        currentCurrency: currentCurrency\n      });\n    }\n    /**\n     * A getter for the conversionRate property\n     *\n     * @returns The conversion rate from ETH to the selected currency.\n     *\n     */\n\n  }, {\n    key: \"getConversionRate\",\n    value: function getConversionRate() {\n      return this.state.conversionRate;\n    }\n  }, {\n    key: \"setConversionRate\",\n    value: function setConversionRate(conversionRate) {\n      this.update({\n        conversionRate: conversionRate\n      });\n    }\n    /**\n     * A getter for the conversionDate property\n     *\n     * @returns The date at which the conversion rate was set. Expressed in milliseconds since midnight of\n     * January 1, 1970\n     *\n     */\n\n  }, {\n    key: \"getConversionDate\",\n    value: function getConversionDate() {\n      return this.state.conversionDate;\n    }\n  }, {\n    key: \"setConversionDate\",\n    value: function setConversionDate(conversionDate) {\n      this.update({\n        conversionDate: conversionDate\n      });\n    }\n  }]);\n\n  return BaseCurrencyController;\n}(BaseController);\n\nfunction ownKeys$2(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar createRandomId = getCreateRandomId();\n\nfunction providerFromEngine(engine) {\n  var provider = new SafeEventEmitter(); // handle both rpc send methods\n\n  provider.sendAsync = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(req) {\n      var res, _res$error, _res$error2, err;\n\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return engine.handle(req);\n\n            case 2:\n              res = _context2.sent;\n\n              if (!res.error) {\n                _context2.next = 6;\n                break;\n              }\n\n              err = serializeError(res.error, {\n                fallbackError: {\n                  message: ((_res$error = res.error) === null || _res$error === void 0 ? void 0 : _res$error.message) || res.error.toString(),\n                  code: ((_res$error2 = res.error) === null || _res$error2 === void 0 ? void 0 : _res$error2.code) || -32603\n                }\n              });\n              throw ethErrors.rpc.internal(err);\n\n            case 6:\n              return _context2.abrupt(\"return\", res.result);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  provider.send = function (req, callback) {\n    if (typeof callback !== \"function\") {\n      throw new Error('Must provide callback to \"send\" method.');\n    }\n\n    engine.handle(req, callback);\n  }; // forward notifications\n\n\n  if (engine.on) {\n    engine.on(\"notification\", function (message) {\n      provider.emit(\"data\", null, message);\n    });\n  }\n\n  provider.request = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(args) {\n      var req, res;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              req = _objectSpread$2(_objectSpread$2({}, args), {}, {\n                id: createRandomId(),\n                jsonrpc: \"2.0\"\n              });\n              _context3.next = 3;\n              return provider.sendAsync(req);\n\n            case 3:\n              res = _context3.sent;\n              return _context3.abrupt(\"return\", res);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return provider;\n}\n\nfunction providerFromMiddleware(middleware) {\n  var engine = new JRPCEngine();\n  engine.push(middleware);\n  var provider = providerFromEngine(engine);\n  return provider;\n}\n\nfunction providerAsMiddleware(provider) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(req, res, _next, end) {\n      var providerRes;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return provider.sendAsync(req);\n\n            case 3:\n              providerRes = _context4.sent;\n              res.result = providerRes;\n              return _context4.abrupt(\"return\", end());\n\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](0);\n              return _context4.abrupt(\"return\", end(_context4.t0.message));\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 8]]);\n    }));\n\n    return function (_x3, _x4, _x5, _x6) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n}\n\nvar FEATURES_PROVIDER_CHANGE_WINDOW = {\n  height: 660,\n  width: 375\n};\nvar FEATURES_DEFAULT_WALLET_WINDOW = {\n  height: 740,\n  width: 1315\n};\nvar FEATURES_DEFAULT_POPUP_WINDOW = {\n  height: 700,\n  width: 1200\n};\nvar FEATURES_CONFIRM_WINDOW = {\n  height: 700,\n  width: 450\n};\nvar POPUP_LOADED = \"popup_loaded\";\nvar POPUP_RESULT = \"popup_result\";\nvar SETUP_COMPLETE = \"setup_complete\";\nvar ACTIVITY_ACTION_ALL = \"walletActivity.allTransactions\";\nvar ACTIVITY_ACTION_SEND = \"walletActivity.send\";\nvar ACTIVITY_ACTION_RECEIVE = \"walletActivity.receive\";\nvar ACTIVITY_ACTION_TOPUP = \"walletActivity.topup\";\nvar ACTIVITY_PERIOD_ALL = \"walletActivity.all\";\nvar ACTIVITY_PERIOD_WEEK_ONE = \"walletActivity.lastOneWeek\";\nvar ACTIVITY_PERIOD_MONTH_ONE = \"walletActivity.lastOneMonth\";\nvar ACTIVITY_PERIOD_MONTH_SIX = \"walletActivity.lastSixMonts\";\nvar ACTIVITY_STATUS_SUCCESSFUL = \"walletActivity.successful\";\nvar ACTIVITY_STATUS_UNSUCCESSFUL = \"walletActivity.unsuccessful\";\nvar ACTIVITY_STATUS_PENDING = \"walletActivity.pending\";\nvar ACTIVITY_STATUS_CANCELLED = \"walletActivity.cancelled\";\nvar ACTIVITY_STATUS_CANCELLING = \"walletActivity.cancelling\";\nvar COMMUNICATION_NOTIFICATIONS = {\n  IFRAME_STATUS: \"iframe_status\",\n  // Tell embed to create the window\n  CREATE_WINDOW: \"create_window\",\n  // Tell embed to close the window\n  CLOSE_WINDOW: \"close_window\",\n  USER_LOGGED_IN: \"user_logged_in\",\n  USER_LOGGED_OUT: \"user_logged_out\"\n};\nvar COMMUNICATION_JRPC_METHODS = {\n  LOGOUT: \"logout\",\n  WALLET_INSTANCE_ID: \"wallet_instance_id\",\n  USER_INFO: \"user_info\",\n  SET_PROVIDER: \"set_provider\",\n  TOPUP: \"topup\",\n  IFRAME_STATUS: \"iframe_status\",\n  // embed has opened the window as requested\n  OPENED_WINDOW: \"opened_window\",\n  // user has closed the window from embed's side\n  CLOSED_WINDOW: \"closed_window\",\n  GET_PROVIDER_STATE: \"get_provider_state\",\n  LOGIN_WITH_PRIVATE_KEY: \"login_with_private_key\"\n};\nvar PROVIDER_JRPC_METHODS = {\n  GET_PROVIDER_STATE: \"wallet_get_provider_state\"\n};\nvar PROVIDER_NOTIFICATIONS = {\n  ACCOUNTS_CHANGED: \"wallet_accounts_changed\",\n  CHAIN_CHANGED: \"wallet_chain_changed\",\n  UNLOCK_STATE_CHANGED: \"wallet_unlock_state_changed\"\n};\nvar BROADCAST_CHANNELS = {\n  REDIRECT_CHANNEL: \"redirect_channel\",\n  PROVIDER_CHANGE_CHANNEL: \"torus_provider_change_channel\",\n  TRANSACTION_CHANNEL: \"torus_channel\",\n  MESSAGE_CHANNEL: \"torus_message_channel\",\n  WALLET_LOGOUT_CHANNEL: \"wallet_logout_channel\",\n  WALLET_SELECTED_ADDRESS_CHANNEL: \"wallet_selected_address_channel\",\n  WALLET_NETWORK_CHANGE_CHANNEL: \"wallet_network_change_channel\",\n  WALLET_ACCOUNT_IMPORT_CHANNEL: \"wallet_account_import_channel\"\n};\nvar BROADCAST_CHANNELS_MSGS = {\n  LOGOUT: \"logout\",\n  ACCOUNT_IMPORTED: \"account_imported\",\n  SELECTED_ADDRESS_CHANGE: \"selected_address_change\",\n  NETWORK_CHANGE: \"network_change\"\n};\n\nfunction createChangeProviderMiddlewareMiddleware(_ref) {\n  var changeProvider = _ref.changeProvider;\n  return createAsyncMiddleware( /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(request, response, next) {\n      var method;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              method = request.method;\n\n              if (!(method !== COMMUNICATION_JRPC_METHODS.SET_PROVIDER)) {\n                _context5.next = 3;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", next());\n\n            case 3:\n              if (changeProvider) {\n                _context5.next = 5;\n                break;\n              }\n\n              throw new Error(\"CommunicationMiddleware - opts.changeProvider not provided\");\n\n            case 5:\n              _context5.next = 7;\n              return changeProvider(request);\n\n            case 7:\n              response.result = _context5.sent;\n\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x7, _x8, _x9) {\n      return _ref6.apply(this, arguments);\n    };\n  }());\n}\n\nfunction createTopupMiddleware(_ref2) {\n  var topup = _ref2.topup;\n  return createAsyncMiddleware( /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(request, response, next) {\n      var method;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              method = request.method;\n\n              if (!(method !== COMMUNICATION_JRPC_METHODS.TOPUP)) {\n                _context6.next = 3;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", next());\n\n            case 3:\n              if (topup) {\n                _context6.next = 5;\n                break;\n              }\n\n              throw new Error(\"CommunicationMiddleware - opts.topup not provided\");\n\n            case 5:\n              _context6.next = 7;\n              return topup(request);\n\n            case 7:\n              response.result = _context6.sent;\n\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function (_x10, _x11, _x12) {\n      return _ref7.apply(this, arguments);\n    };\n  }());\n}\n\nfunction createGenericJRPCMiddleware(targetMethod, handler) {\n  return createAsyncMiddleware( /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(request, response, next) {\n      var method, result;\n      return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              method = request.method;\n\n              if (!(method !== targetMethod)) {\n                _context7.next = 3;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", next());\n\n            case 3:\n              if (handler) {\n                _context7.next = 5;\n                break;\n              }\n\n              throw new Error(\"CommunicationMiddleware - \".concat(targetMethod, \" not provided\"));\n\n            case 5:\n              _context7.next = 7;\n              return handler(request);\n\n            case 7:\n              result = _context7.sent;\n\n              if (result) {\n                _context7.next = 10;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", next());\n\n            case 10:\n              response.result = result;\n              return _context7.abrupt(\"return\", undefined);\n\n            case 12:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function (_x13, _x14, _x15) {\n      return _ref8.apply(this, arguments);\n    };\n  }());\n}\n\nfunction createCommunicationMiddleware(providerHandlers) {\n  var _createScaffoldMiddle;\n\n  var getUserInfo = providerHandlers.getUserInfo,\n      getWalletInstanceId = providerHandlers.getWalletInstanceId,\n      topup = providerHandlers.topup,\n      logout = providerHandlers.logout,\n      changeProvider = providerHandlers.changeProvider,\n      setIFrameStatus = providerHandlers.setIFrameStatus,\n      handleWindowRpc = providerHandlers.handleWindowRpc,\n      getProviderState = providerHandlers.getProviderState,\n      loginWithPrivateKey = providerHandlers.loginWithPrivateKey;\n  return mergeMiddleware([createChangeProviderMiddlewareMiddleware({\n    changeProvider: changeProvider\n  }), createTopupMiddleware({\n    topup: topup\n  }), createScaffoldMiddleware((_createScaffoldMiddle = {}, _defineProperty2(_createScaffoldMiddle, COMMUNICATION_JRPC_METHODS.LOGOUT, logout), _defineProperty2(_createScaffoldMiddle, COMMUNICATION_JRPC_METHODS.WALLET_INSTANCE_ID, getWalletInstanceId), _defineProperty2(_createScaffoldMiddle, COMMUNICATION_JRPC_METHODS.USER_INFO, getUserInfo), _defineProperty2(_createScaffoldMiddle, COMMUNICATION_JRPC_METHODS.IFRAME_STATUS, setIFrameStatus), _defineProperty2(_createScaffoldMiddle, COMMUNICATION_JRPC_METHODS.OPENED_WINDOW, handleWindowRpc), _defineProperty2(_createScaffoldMiddle, COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW, handleWindowRpc), _defineProperty2(_createScaffoldMiddle, COMMUNICATION_JRPC_METHODS.GET_PROVIDER_STATE, getProviderState), _createScaffoldMiddle)), createGenericJRPCMiddleware(COMMUNICATION_JRPC_METHODS.LOGIN_WITH_PRIVATE_KEY, loginWithPrivateKey)]);\n}\n\nvar BaseEmbedController = /*#__PURE__*/function (_BaseController3) {\n  _inherits(BaseEmbedController, _BaseController3);\n\n  var _super4 = _createSuper(BaseEmbedController);\n\n  function BaseEmbedController(_ref) {\n    var _this6;\n\n    _classCallCheck(this, BaseEmbedController);\n\n    var _ref$config4 = _ref.config,\n        config = _ref$config4 === void 0 ? {} : _ref$config4,\n        state = _ref.state;\n    _this6 = _super4.call(this, {\n      config: config,\n      state: state\n    });\n\n    _defineProperty(_assertThisInitialized(_this6), \"_communicationProviderProxy\", void 0);\n\n    _this6.defaultState = {\n      buttonPosition: \"bottom-right\",\n      isIFrameFullScreen: true,\n      apiKey: \"torus-default\",\n      oauthModalVisibility: false,\n      loginInProgress: false,\n      dappMetadata: {\n        name: \"\",\n        icon: \"\"\n      }\n    };\n\n    _this6.initialize();\n\n    return _this6;\n  }\n  /**\n   * Called by orchestrator once while initializing the class\n   * @param handlers - JRPC handlers for provider\n   * @returns - provider - Returns the providerProxy\n   */\n\n\n  _createClass(BaseEmbedController, [{\n    key: \"initializeProvider\",\n    value: function initializeProvider(handlers) {\n      var engine = new JRPCEngine();\n      var communicationMiddleware = createCommunicationMiddleware(handlers);\n      engine.push(communicationMiddleware);\n      var communicationProvider = providerFromEngine(engine);\n      this.setCommunicationProvider(communicationProvider);\n    }\n  }, {\n    key: \"setCommunicationProvider\",\n    value: function setCommunicationProvider(communicationProvider) {\n      if (this._communicationProviderProxy) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        this._communicationProviderProxy.setTarget(communicationProvider);\n      } else {\n        this._communicationProviderProxy = createSwappableProxy(communicationProvider);\n      }\n    }\n  }]);\n\n  return BaseEmbedController;\n}(BaseController);\n\nvar CommunicationWindowManager = /*#__PURE__*/function (_SafeEventEmitter2) {\n  _inherits(CommunicationWindowManager, _SafeEventEmitter2);\n\n  var _super5 = _createSuper(CommunicationWindowManager);\n\n  function CommunicationWindowManager() {\n    var _this7;\n\n    _classCallCheck(this, CommunicationWindowManager);\n\n    _this7 = _super5.apply(this, arguments);\n\n    _defineProperty(_assertThisInitialized(_this7), \"handleWindowRpc\", function (request, response, next, end) {\n      var method = request.method,\n          params = request.params;\n\n      if (method === COMMUNICATION_JRPC_METHODS.OPENED_WINDOW) {\n        var windowId = params.windowId; // I've been informed that a window has been opened\n\n        _this7.emit(\"\".concat(windowId, \":opened\"));\n\n        response.result = true;\n        end();\n      } else if (method === COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW) {\n        var _windowId = params.windowId; // I've been informed that a window has been closed\n\n        _this7.emit(\"\".concat(_windowId, \":closed\"));\n\n        response.result = true;\n        end();\n      } else {\n        next();\n      }\n    });\n\n    return _this7;\n  }\n\n  return _createClass(CommunicationWindowManager);\n}(SafeEventEmitter);\n\nvar LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\"\n};\nvar PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\"\n};\n\nvar getTxStatusText = function getTxStatusText(txStatus) {\n  switch (txStatus) {\n    case \"rejected\":\n    case \"unapproved\":\n    case \"failed\":\n      return ACTIVITY_STATUS_UNSUCCESSFUL;\n\n    case \"confirmed\":\n      return ACTIVITY_STATUS_SUCCESSFUL;\n\n    case \"submitted\":\n      return ACTIVITY_STATUS_PENDING;\n\n    case \"cancelled\":\n      return ACTIVITY_STATUS_CANCELLED;\n\n    default:\n      return \"\";\n  }\n};\n/**\n * General utility functions\n */\n\n\nfunction intToHex(i) {\n  var hex = i.toString(16);\n  return \"0x\".concat(hex);\n}\n/**\n * Returns a random number. Don't use for cryptographic purposes.\n * @returns a random number\n */\n\n\nvar randomId = function randomId() {\n  return Math.random().toString(36).slice(2);\n};\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\n\n\nfunction padWithZeroes(hexString, targetLength) {\n  if (hexString !== \"\" && !/^[0-9a-f]+$/i.test(hexString)) {\n    throw new Error(\"Expected an unprefixed hex string. Received: \".concat(hexString));\n  }\n\n  if (targetLength < 0) {\n    throw new Error(\"Expected a non-negative integer target length. Received: \".concat(targetLength));\n  }\n\n  return String.prototype.padStart.call(hexString, targetLength, \"0\");\n}\n/**\n * Concatenate an extended ECDSA signature into a hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature.\n */\n\n\nfunction concatSig(v, r, s) {\n  var rSig = fromSigned(r);\n  var sSig = fromSigned(s);\n  var vSig = bufferToInt(v);\n  var rStr = padWithZeroes(toUnsigned(rSig).toString(\"hex\"), 64);\n  var sStr = padWithZeroes(toUnsigned(sSig).toString(\"hex\"), 64);\n  var vStr = stripHexPrefix(intToHex(vSig));\n  return addHexPrefix(rStr.concat(sStr, vStr));\n}\n\nfunction timeout$1(duration) {\n  return new Promise(function (resolve) {\n    var timeoutRef = window.setTimeout(function () {\n      resolve();\n      window.clearTimeout(timeoutRef);\n    }, duration);\n  });\n}\n/**\n * Text/number formatting utilities\n */\n\n\nvar formatSmallNumbers = function formatSmallNumbers(number) {\n  var currency = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"usd\";\n  var noTilde = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var finalNumber = BigNumber.isBigNumber(number) ? number.toNumber() : number;\n  if (!Number.isFinite(finalNumber)) return \"\";\n  var value = currency.toLowerCase() === \"usd\" ? parseFloat(Number(finalNumber).toFixed(2)) : parseFloat(Number(finalNumber).toFixed(5));\n  var tilde = value > 0 ? \"~ \" : \"\";\n  return \"\".concat(currency.toLowerCase() === \"usd\" || noTilde ? \"\" : tilde).concat(Number(value), \" \").concat(currency.toUpperCase());\n};\n\nvar addressSlicer = function addressSlicer(address) {\n  var sliceLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n\n  if (address.length < 11) {\n    return address;\n  }\n\n  if (typeof address !== \"string\") return \"\";\n  return \"\".concat(address.slice(0, sliceLength), \"...\").concat(address.slice(-sliceLength));\n};\n\nvar significantDigits = function significantDigits(number) {\n  var perc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var length_ = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;\n  var input = !BigNumber.isBigNumber(number) ? new BigNumber(number) : number;\n  if (input.isZero()) return input;\n\n  if (perc) {\n    input = input.times(new BigNumber(100));\n  }\n\n  var depth;\n\n  if (input.gte(new BigNumber(1))) {\n    depth = length_;\n  } else {\n    depth = length_ - 1 + Math.ceil(Math.log10(new BigNumber(\"1\").div(input).toNumber()));\n  }\n\n  var shift = new BigNumber(10).pow(new BigNumber(depth));\n  var roundedNumber = Math.round(shift.times(input).toNumber()) / shift.toNumber();\n  return roundedNumber;\n};\n\nvar formatDate = function formatDate(inputDate) {\n  var monthList = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  var date = new Date(inputDate);\n  var day = date.getDate();\n  var month = monthList[date.getMonth()];\n  var year = date.getFullYear();\n  return \"\".concat(day, \" \").concat(month, \" \").concat(year);\n};\n\nvar formatTime = function formatTime(time) {\n  return new Date(time).toTimeString().slice(0, 8);\n};\n/**\n * Network utilities\n */\n\n\nvar transactionMatchesNetwork = function transactionMatchesNetwork(transaction, chainId) {\n  if (typeof transaction.chainId !== \"undefined\") {\n    return transaction.chainId === chainId;\n  }\n\n  return false;\n};\n/**\n * Signing utils\n */\n\n\nvar hashMessage = function hashMessage(message) {\n  var bufferedMessage = Buffer.from(message, \"utf8\");\n  var el = hashPersonalMessage(bufferedMessage);\n  return el;\n};\n\nvar signMessage = function signMessage(privateKey, data) {\n  var privKey = Buffer.from(privateKey, \"hex\");\n  var message = stripHexPrefix(data);\n  var msgSig = ecsign(Buffer.from(message, \"hex\"), privKey);\n  var rawMsgSig = concatSig(intToBuffer(msgSig.v), msgSig.r, msgSig.s);\n  return rawMsgSig;\n};\n/**\n * popup handler utils\n */\n\n\nfunction getPopupFeatures(_ref) {\n  var w = _ref.width,\n      h = _ref.height; // Fixes dual-screen position                             Most browsers      Firefox\n\n  var dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  var dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  var width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  var height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  var systemZoom = 1; // No reliable estimate\n\n  var left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  var top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  var features = \"titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=\".concat(h / systemZoom, \",width=\").concat(w / systemZoom, \",top=\").concat(top, \",left=\").concat(left);\n  return features;\n}\n\nvar broadcastChannelOptions = {\n  // type: 'localstorage', // (optional) enforce a type, oneOf['native', 'idb', 'localstorage', 'node']\n  webWorkerSupport: false // (optional) set this to false if you know that your channel will never be used in a WebWorker (increases performance)\n\n};\n\nfunction getCustomDeviceInfo() {\n  var _navigator;\n\n  if ((_navigator = navigator) !== null && _navigator !== void 0 && _navigator.brave) {\n    return {\n      browser: \"Brave\"\n    };\n  }\n}\n\nvar UserError = /*#__PURE__*/function (_Error) {\n  _inherits(UserError, _Error);\n\n  var _super6 = _createSuper(UserError);\n\n  function UserError() {\n    _classCallCheck(this, UserError);\n\n    return _super6.apply(this, arguments);\n  }\n\n  return _createClass(UserError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar handleRedirectParameters = function handleRedirectParameters(hash, queryParameters) {\n  var hashParameters = {};\n  var hashUrl = new URL(\"\".concat(window.location.origin, \"/?\").concat(hash.slice(1)));\n  hashUrl.searchParams.forEach(function (value, key) {\n    hashParameters[key] = value;\n  });\n  var instanceParameters = {};\n  var error = \"\";\n\n  if (!queryParameters.windowId) {\n    if (Object.keys(hashParameters).length > 0 && hashParameters.state) {\n      instanceParameters = JSON.parse(window.atob(decodeURIComponent(decodeURIComponent(hashParameters.state)))) || {};\n      error = hashParameters.error_description || hashParameters.error || error;\n    } else if (Object.keys(queryParameters).length > 0 && queryParameters.state) {\n      instanceParameters = JSON.parse(window.atob(decodeURIComponent(decodeURIComponent(queryParameters.state)))) || {};\n      if (queryParameters.error) error = queryParameters.error;\n    }\n  }\n\n  return {\n    error: error,\n    instanceParameters: instanceParameters,\n    hashParameters: hashParameters\n  };\n};\n\nvar BaseKeyringController = /*#__PURE__*/function (_BaseController4) {\n  _inherits(BaseKeyringController, _BaseController4);\n\n  var _super7 = _createSuper(BaseKeyringController);\n\n  function BaseKeyringController(_ref) {\n    var _this8;\n\n    _classCallCheck(this, BaseKeyringController);\n\n    var _state$wallets;\n\n    var _ref$config5 = _ref.config,\n        config = _ref$config5 === void 0 ? {} : _ref$config5,\n        state = _ref.state;\n    _this8 = _super7.call(this, {\n      config: config,\n      state: state\n    });\n    _this8.defaultState = {\n      wallets: (_state$wallets = state.wallets) !== null && _state$wallets !== void 0 ? _state$wallets : []\n    };\n\n    _this8.initialize();\n\n    return _this8;\n  } // for signing auth message\n\n\n  _createClass(BaseKeyringController, [{\n    key: \"signAuthMessage\",\n    value: function signAuthMessage(address, message) {\n      var keyring = this.state.wallets.find(function (x) {\n        return x.address === address;\n      });\n\n      if (!keyring) {\n        throw new Error(\"key does not exist\");\n      }\n\n      var hashedMessage = hashMessage(message).toString(\"hex\");\n      var rawMessageSig = signMessage(keyring.privateKey, hashedMessage);\n      return rawMessageSig;\n    }\n  }]);\n\n  return BaseKeyringController;\n}(BaseController);\n\nvar RETRIABLE_ERRORS = [// ignore server overload errors\n\"Gateway timeout\", \"ETIMEDOUT\", // ignore server sent html error pages\n// or truncated json responses\n\"failed to parse response body\", // ignore errors where http req failed to establish\n\"Failed to fetch\"];\n\nfunction checkForHttpErrors(fetchRes) {\n  // check for errors\n  switch (fetchRes.status) {\n    case 405:\n      throw ethErrors.rpc.methodNotFound();\n\n    case 418:\n      throw ethErrors.rpc.internal({\n        message: \"Request is being rate limited.\"\n      });\n\n    case 503:\n    case 504:\n      throw ethErrors.rpc.internal({\n        message: \"Gateway timeout. The request took too long to process.\" + \"This can happen when querying over too wide a block range.\"\n      });\n  }\n}\n\nfunction timeout(duration) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, duration);\n  });\n}\n\nfunction parseResponse(fetchRes, body) {\n  // check for error code\n  if (fetchRes.status !== 200) {\n    throw ethErrors.rpc.internal({\n      message: \"Non-200 status code: '\".concat(fetchRes.status, \"'\"),\n      data: body\n    });\n  } // check for rpc error\n\n\n  if (body.error) {\n    throw ethErrors.rpc.internal({\n      data: body.error\n    });\n  } // return successful result\n\n\n  return body.result;\n}\n\nfunction createFetchConfigFromReq(_ref) {\n  var req = _ref.req,\n      rpcTarget = _ref.rpcTarget,\n      originHttpHeaderKey = _ref.originHttpHeaderKey;\n  var parsedUrl = new URL(rpcTarget); // prepare payload\n  // copy only canonical json rpc properties\n\n  var payload = {\n    id: req.id,\n    jsonrpc: req.jsonrpc,\n    method: req.method,\n    params: req.params\n  }; // extract 'origin' parameter from request\n\n  var originDomain = req.origin; // serialize request body\n\n  var serializedPayload = JSON.stringify(payload); // configure fetch params\n\n  var fetchParams = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: serializedPayload\n  }; // optional: add request origin as header\n\n  if (originHttpHeaderKey && originDomain) {\n    fetchParams.headers[originHttpHeaderKey] = originDomain;\n  }\n\n  return {\n    fetchUrl: parsedUrl.href,\n    fetchParams: fetchParams\n  };\n}\n\nfunction createFetchMiddleware(_ref2) {\n  var rpcTarget = _ref2.rpcTarget,\n      originHttpHeaderKey = _ref2.originHttpHeaderKey;\n  return createAsyncMiddleware( /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(req, res, _next) {\n      var _createFetchConfigFro, fetchUrl, fetchParams, maxAttempts, retryInterval, attempt, fetchRes, fetchBody, result;\n\n      return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _createFetchConfigFro = createFetchConfigFromReq({\n                req: req,\n                rpcTarget: rpcTarget,\n                originHttpHeaderKey: originHttpHeaderKey\n              }), fetchUrl = _createFetchConfigFro.fetchUrl, fetchParams = _createFetchConfigFro.fetchParams; // attempt request multiple times\n\n              maxAttempts = 5;\n              retryInterval = 1000;\n              attempt = 0;\n\n            case 4:\n              if (!(attempt < maxAttempts)) {\n                _context8.next = 26;\n                break;\n              }\n\n              _context8.prev = 5;\n              _context8.next = 8;\n              return fetch(fetchUrl, fetchParams);\n\n            case 8:\n              fetchRes = _context8.sent;\n              // check for http errrors\n              checkForHttpErrors(fetchRes); // parse response body\n\n              _context8.next = 12;\n              return fetchRes.json();\n\n            case 12:\n              fetchBody = _context8.sent;\n              result = parseResponse(fetchRes, fetchBody); // set result and exit retry loop\n\n              res.result = result;\n              return _context8.abrupt(\"return\");\n\n            case 18:\n              _context8.prev = 18;\n              _context8.t0 = _context8[\"catch\"](5);\n\n              (function () {\n                var errMsg = _context8.t0.toString();\n\n                var isRetriable = RETRIABLE_ERRORS.some(function (phrase) {\n                  return errMsg.includes(phrase);\n                }); // re-throw error if not retriable\n\n                if (!isRetriable) {\n                  throw _context8.t0;\n                }\n              })();\n\n            case 21:\n              _context8.next = 23;\n              return timeout(retryInterval);\n\n            case 23:\n              attempt++;\n              _context8.next = 4;\n              break;\n\n            case 26:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[5, 18]]);\n    }));\n\n    return function (_x16, _x17, _x18) {\n      return _ref9.apply(this, arguments);\n    };\n  }());\n}\n\nfunction createLoggerMiddleware(options) {\n  return function loggerMiddleware(request, response, next) {\n    next(function (callback) {\n      if (response.error) {\n        log.warn(\"Error in RPC response:\\n\", response);\n      }\n\n      if (request.isTorusInternal) return;\n      log.info(\"RPC (\".concat(options.origin, \"):\"), request, \"->\", response);\n      callback();\n    });\n  };\n}\n\nfunction createOriginMiddleware(options) {\n  return function originMiddleware(request, _, next) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    request.origin = options.origin;\n    next();\n  };\n}\n\nvar BroadcastChannelHandler = /*#__PURE__*/function () {\n  function BroadcastChannelHandler(channelPrefix) {\n    _classCallCheck(this, BroadcastChannelHandler);\n\n    _defineProperty(this, \"bc\", void 0);\n\n    _defineProperty(this, \"channel\", void 0);\n\n    var queryParameters = new URLSearchParams(window.location.search);\n    var instanceId = queryParameters.get(\"instanceId\");\n    this.channel = \"\".concat(channelPrefix, \"_\").concat(instanceId);\n    this.bc = new BroadcastChannel(this.channel, broadcastChannelOptions);\n  }\n\n  _createClass(BroadcastChannelHandler, [{\n    key: \"getMessageFromChannel\",\n    value: function getMessageFromChannel() {\n      var _this9 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this9.bc.addEventListener(\"message\", /*#__PURE__*/function () {\n          var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(ev) {\n            return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n              while (1) {\n                switch (_context9.prev = _context9.next) {\n                  case 0:\n                    _this9.bc.close();\n\n                    if (ev.error) {\n                      reject(ev.error);\n                    } else {\n                      resolve(ev.data);\n                    }\n\n                  case 2:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }\n            }, _callee9);\n          }));\n\n          return function (_x19) {\n            return _ref10.apply(this, arguments);\n          };\n        }());\n\n        _this9.bc.postMessage({\n          data: {\n            type: POPUP_LOADED\n          }\n        });\n      });\n    }\n  }]);\n\n  return BroadcastChannelHandler;\n}();\n\nvar StreamWindow = /*#__PURE__*/function (_BaseController5) {\n  _inherits(StreamWindow, _BaseController5);\n\n  var _super8 = _createSuper(StreamWindow);\n\n  // if window has been closed by users\n  function StreamWindow(_ref) {\n    var _this10;\n\n    _classCallCheck(this, StreamWindow);\n\n    var config = _ref.config,\n        _ref$state3 = _ref.state,\n        state = _ref$state3 === void 0 ? {} : _ref$state3;\n    _this10 = _super8.call(this, {\n      config: config,\n      state: state\n    });\n\n    _defineProperty(_assertThisInitialized(_this10), \"closed\", false);\n\n    _this10.initialize();\n\n    return _this10;\n  }\n\n  _createClass(StreamWindow, [{\n    key: \"open\",\n    value: function () {\n      var _open = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n        var _this11 = this;\n\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                return _context11.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  var _this11$config = _this11.config,\n                      communicationEngine = _this11$config.communicationEngine,\n                      communicationWindowManager = _this11$config.communicationWindowManager;\n                  communicationWindowManager.once(\"\".concat(_this11.state.windowId, \":closed\"), function () {\n                    _this11.closed = true;\n                  }); // Window is not open yet\n\n                  if (!_this11.state.windowId) {\n                    _this11.update({\n                      windowId: randomId()\n                    });\n\n                    communicationWindowManager.once(\"\".concat(_this11.state.windowId, \":opened\"), function () {\n                      resolve(_this11);\n                    }); // Tell the other party to create a window by prompting the user to click on something\n\n                    communicationEngine.emit(\"notification\", {\n                      method: COMMUNICATION_NOTIFICATIONS.CREATE_WINDOW,\n                      params: {\n                        windowId: _this11.state.windowId,\n                        url: _this11.state.url.href\n                      }\n                    });\n                  } else {\n                    // Send this window with `windowId` the url to open via bc\n                    var bc = new BroadcastChannel(_this11.state.windowId, broadcastChannelOptions);\n                    var writeInterval = null;\n                    bc.addEventListener(\"message\", /*#__PURE__*/function () {\n                      var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(ev) {\n                        var error, message;\n                        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n                          while (1) {\n                            switch (_context10.prev = _context10.next) {\n                              case 0:\n                                _context10.prev = 0;\n                                log.info(ev, \"receiving data on channel: \".concat(bc.name));\n                                error = ev.error;\n\n                                if (!error) {\n                                  _context10.next = 6;\n                                  break;\n                                }\n\n                                // Popup says some error. so, we say it's not really opened\n                                reject(new Error(error));\n                                return _context10.abrupt(\"return\");\n\n                              case 6:\n                                message = ev.data.message;\n\n                                if (!(message === POPUP_LOADED)) {\n                                  _context10.next = 13;\n                                  break;\n                                }\n\n                                if (writeInterval) window.clearInterval(writeInterval);\n                                _context10.next = 11;\n                                return bc.postMessage({\n                                  data: {\n                                    url: _this11.state.url.href,\n                                    message: \"\" // No need of a msg\n\n                                  }\n                                });\n\n                              case 11:\n                                resolve(_this11);\n                                bc.close();\n\n                              case 13:\n                                _context10.next = 20;\n                                break;\n\n                              case 15:\n                                _context10.prev = 15;\n                                _context10.t0 = _context10[\"catch\"](0);\n                                reject(_context10.t0);\n                                bc.close(); // Something went wrong. so, we close that window\n\n                                _this11.close();\n\n                              case 20:\n                              case \"end\":\n                                return _context10.stop();\n                            }\n                          }\n                        }, _callee10, null, [[0, 15]]);\n                      }));\n\n                      return function (_x20) {\n                        return _ref11.apply(this, arguments);\n                      };\n                    }()); // We don't know if the other end is ready to receive this msg. So, we keep writing until it receives and sends back something\n\n                    writeInterval = window.setInterval(function () {\n                      bc.postMessage({\n                        data: {\n                          message: SETUP_COMPLETE\n                        }\n                      });\n                    }, bc.type === \"server\" ? 1000 : 200);\n                  }\n                }));\n\n              case 1:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      function open() {\n        return _open.apply(this, arguments);\n      }\n\n      return open;\n    }()\n  }, {\n    key: \"close\",\n    value: function close() {\n      var communicationEngine = this.config.communicationEngine;\n      communicationEngine.emit(\"notification\", {\n        method: COMMUNICATION_NOTIFICATIONS.CLOSE_WINDOW,\n        params: {\n          windowId: this.state.windowId\n        }\n      });\n    }\n  }]);\n\n  return StreamWindow;\n}(BaseController);\n/*\nScenarios:\n1. Open a normal popup window and no communication with it - Use PopupHandler\n2. Open a popup window and communicate with it - Use PopupWithBcHandler (can initiate communication by waiting for window to open or not)\n\n3. If window is already opened, pass in windowId to the popup handler.\n   This will establish communication with the popup window and sends it a new url to redirect to\n\n\nIf you're trying to open a window and it gets blocked (happens if you're in iframe or delay b/w click and opening window),\nStreamWindow is invoked and it writes in a channel to display a message to the user\n\nOnce user clicks on that modal/dialog, we pre-open the window and pass in the windowId (goes to 3)\n*/\n\n/**\n * Handles popup window management.\n * For broadcast channel communication, use url with `instanceId` coded into state parameter.\n * This state parameter will be passed across redirects according to OAuth spec.\n */\n\n\nvar PopupHandler = /*#__PURE__*/function (_BaseController6) {\n  _inherits(PopupHandler, _BaseController6);\n\n  var _super9 = _createSuper(PopupHandler);\n\n  function PopupHandler(_ref) {\n    var _this12;\n\n    _classCallCheck(this, PopupHandler);\n\n    var config = _ref.config,\n        state = _ref.state;\n    _this12 = _super9.call(this, {\n      config: config,\n      state: state\n    }); // this.id = randomId()\n    // Add in dapp storage key to all popups as a hash parameter\n\n    _this12.defaultConfig = {\n      dappStorageKey: \"\",\n      features: getPopupFeatures(FEATURES_DEFAULT_POPUP_WINDOW),\n      target: \"_blank\",\n      communicationEngine: null,\n      communicationWindowManager: null\n    };\n    _this12.defaultState = {\n      windowTimer: null,\n      window: null,\n      iClosedWindow: false,\n      windowId: \"\",\n      url: state.url\n    };\n\n    _this12.initialize();\n\n    _this12._setupTimer();\n\n    return _this12;\n  }\n\n  _createClass(PopupHandler, [{\n    key: \"open\",\n    value: function () {\n      var _open2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {\n        var _this$config, target, features, dappStorageKey, communicationEngine, communicationWindowManager, _this$state, windowId, url, urlHashParams, _localWindow, localWindow;\n\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                // if window is already open\n                _this$config = this.config, target = _this$config.target, features = _this$config.features, dappStorageKey = _this$config.dappStorageKey, communicationEngine = _this$config.communicationEngine, communicationWindowManager = _this$config.communicationWindowManager;\n                _this$state = this.state, windowId = _this$state.windowId, url = _this$state.url;\n\n                if (dappStorageKey) {\n                  urlHashParams = new URLSearchParams(url.hash.slice(1));\n                  urlHashParams.append(\"dappStorageKey\", dappStorageKey);\n                  url.hash = urlHashParams.toString();\n                  this.update({\n                    url: url\n                  });\n                } // No window has been pre-opened\n\n\n                if (windowId) {\n                  _context12.next = 8;\n                  break;\n                }\n\n                // try to open a window first\n                _localWindow = window.open(url.href, target, features);\n\n                if (!_localWindow) {\n                  // if it's blocked, open StreamWindow\n                  _localWindow = new StreamWindow({\n                    config: {\n                      communicationEngine: communicationEngine,\n                      communicationWindowManager: communicationWindowManager\n                    },\n                    state: {\n                      url: url\n                    }\n                  });\n\n                  _localWindow.open();\n                }\n\n                this.update({\n                  window: _localWindow\n                });\n                return _context12.abrupt(\"return\");\n\n              case 8:\n                // A window has been pre-opened with a query parameter `windowId`\n                localWindow = new StreamWindow({\n                  config: {\n                    communicationEngine: communicationEngine,\n                    communicationWindowManager: communicationWindowManager\n                  },\n                  state: {\n                    url: url,\n                    windowId: windowId\n                  }\n                });\n                this.update({\n                  window: localWindow\n                });\n                _context12.next = 12;\n                return localWindow.open();\n\n              case 12:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function open() {\n        return _open2.apply(this, arguments);\n      }\n\n      return open;\n    }()\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.update({\n        iClosedWindow: true\n      });\n      var window = this.state.window;\n      if (window) window.close();\n    }\n  }, {\n    key: \"_setupTimer\",\n    value: function _setupTimer() {\n      var _this13 = this;\n\n      var timer = window.setInterval(function () {\n        var _this13$state = _this13.state,\n            window = _this13$state.window,\n            windowTimer = _this13$state.windowTimer,\n            iClosedWindow = _this13$state.iClosedWindow;\n\n        if (window && window.closed) {\n          if (windowTimer) clearInterval(windowTimer);\n\n          if (!iClosedWindow) {\n            _this13.emit(\"close\");\n          }\n\n          _this13.update({\n            iClosedWindow: false,\n            window: null\n          });\n        }\n\n        if (window === null && windowTimer) clearInterval(windowTimer);\n      }, 500);\n      this.update({\n        windowTimer: timer\n      });\n    }\n  }]);\n\n  return PopupHandler;\n}(BaseController);\n\nvar PopupStoreChannel = /*#__PURE__*/function () {\n  function PopupStoreChannel(_ref) {\n    _classCallCheck(this, PopupStoreChannel);\n\n    var instanceId = _ref.instanceId,\n        handleLogout = _ref.handleLogout,\n        handleAccountImport = _ref.handleAccountImport,\n        handleNetworkChange = _ref.handleNetworkChange,\n        handleSelectedAddressChange = _ref.handleSelectedAddressChange;\n\n    _defineProperty(this, \"handleLogout\", void 0);\n\n    _defineProperty(this, \"handleAccountImport\", void 0);\n\n    _defineProperty(this, \"handleNetworkChange\", void 0);\n\n    _defineProperty(this, \"handleSelectedAddressChange\", void 0);\n\n    _defineProperty(this, \"instanceId\", void 0);\n\n    this.instanceId = instanceId;\n    this.handleLogout = handleLogout;\n    this.handleAccountImport = handleAccountImport;\n    this.handleNetworkChange = handleNetworkChange;\n    this.handleSelectedAddressChange = handleSelectedAddressChange;\n  }\n\n  _createClass(PopupStoreChannel, [{\n    key: \"setupStoreChannels\",\n    value: function setupStoreChannels() {\n      this.logoutChannel();\n      this.importAccountChannel();\n      this.networkChangeChannel();\n      this.selectedAddressChangeChannel();\n    }\n  }, {\n    key: \"logoutChannel\",\n    value: function logoutChannel() {\n      var _this14 = this;\n\n      var logoutChannel = new BroadcastChannel(\"\".concat(BROADCAST_CHANNELS.WALLET_LOGOUT_CHANNEL, \"_\").concat(this.instanceId), broadcastChannelOptions);\n      logoutChannel.addEventListener(\"message\", function (ev) {\n        var _ev$data;\n\n        log.info(\"received logout message\", ev);\n\n        if (!ev.error && ((_ev$data = ev.data) === null || _ev$data === void 0 ? void 0 : _ev$data.type) === BROADCAST_CHANNELS_MSGS.LOGOUT) {\n          log.info(\"Logging Out\");\n\n          _this14.handleLogout();\n        }\n      });\n    }\n  }, {\n    key: \"importAccountChannel\",\n    value: function importAccountChannel() {\n      var _this15 = this;\n\n      var walletAccountImportChannel = new BroadcastChannel(\"\".concat(BROADCAST_CHANNELS.WALLET_ACCOUNT_IMPORT_CHANNEL, \"_\").concat(this.instanceId), broadcastChannelOptions);\n      walletAccountImportChannel.addEventListener(\"message\", function (ev) {\n        var _ev$data2;\n\n        if (!ev.error && ((_ev$data2 = ev.data) === null || _ev$data2 === void 0 ? void 0 : _ev$data2.type) === BROADCAST_CHANNELS_MSGS.ACCOUNT_IMPORTED) {\n          var _ev$data3;\n\n          _this15.handleAccountImport((_ev$data3 = ev.data) === null || _ev$data3 === void 0 ? void 0 : _ev$data3.privKey);\n        }\n      });\n    }\n  }, {\n    key: \"networkChangeChannel\",\n    value: function networkChangeChannel() {\n      var _this16 = this;\n\n      var walletAccountImportChannel = new BroadcastChannel(\"\".concat(BROADCAST_CHANNELS.WALLET_NETWORK_CHANGE_CHANNEL, \"_\").concat(this.instanceId), broadcastChannelOptions);\n      walletAccountImportChannel.addEventListener(\"message\", function (ev) {\n        var _ev$data4;\n\n        if (!ev.error && ((_ev$data4 = ev.data) === null || _ev$data4 === void 0 ? void 0 : _ev$data4.type) === BROADCAST_CHANNELS_MSGS.NETWORK_CHANGE) {\n          var _ev$data5;\n\n          _this16.handleNetworkChange((_ev$data5 = ev.data) === null || _ev$data5 === void 0 ? void 0 : _ev$data5.network);\n        }\n      });\n    }\n  }, {\n    key: \"selectedAddressChangeChannel\",\n    value: function selectedAddressChangeChannel() {\n      var _this17 = this;\n\n      var walletAccountImportChannel = new BroadcastChannel(\"\".concat(BROADCAST_CHANNELS.WALLET_SELECTED_ADDRESS_CHANNEL, \"_\").concat(this.instanceId), broadcastChannelOptions);\n      walletAccountImportChannel.addEventListener(\"message\", function (ev) {\n        var _ev$data6;\n\n        if (!ev.error && ((_ev$data6 = ev.data) === null || _ev$data6 === void 0 ? void 0 : _ev$data6.type) === BROADCAST_CHANNELS_MSGS.SELECTED_ADDRESS_CHANGE) {\n          var _ev$data7;\n\n          _this17.handleSelectedAddressChange((_ev$data7 = ev.data) === null || _ev$data7 === void 0 ? void 0 : _ev$data7.selectedAddress);\n        }\n      });\n    }\n  }]);\n\n  return PopupStoreChannel;\n}();\n/**\n * PopupWithBcHandler is a PopupHandler which uses broadcast channel to communicate with the popup window.\n */\n\n\nvar PopupWithBcHandler = /*#__PURE__*/function (_PopupHandler) {\n  _inherits(PopupWithBcHandler, _PopupHandler);\n\n  var _super10 = _createSuper(PopupWithBcHandler);\n\n  function PopupWithBcHandler(_ref) {\n    var _this18;\n\n    _classCallCheck(this, PopupWithBcHandler);\n\n    var config = _ref.config,\n        state = _ref.state,\n        instanceId = _ref.instanceId;\n    _this18 = _super10.call(this, {\n      config: config,\n      state: state\n    });\n\n    _defineProperty(_assertThisInitialized(_this18), \"bc\", void 0);\n\n    _this18.bc = new BroadcastChannel(instanceId, broadcastChannelOptions);\n    return _this18;\n  }\n  /**\n   * Receives the data from popup window and closes the window\n   * @param successExtraFn - Extra function to be called after the data is received\n   * @returns The data to be received\n   */\n\n\n  _createClass(PopupWithBcHandler, [{\n    key: \"handle\",\n    value: function handle(successExtraFn) {\n      var _this19 = this;\n\n      return new Promise(function (resolve, reject) {\n        var closeListener = function closeListener() {\n          _this19.bc.close();\n\n          reject(new UserError(\"user closed popup\"));\n\n          _this19.removeListener(\"close\", closeListener);\n        };\n\n        _this19.on(\"close\", closeListener);\n\n        _this19.bc.addEventListener(\"message\", /*#__PURE__*/function () {\n          var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(ev) {\n            var error, data;\n            return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n              while (1) {\n                switch (_context13.prev = _context13.next) {\n                  case 0:\n                    log.info(ev, \"receiving data on channel: \".concat(_this19.bc.name));\n                    _context13.prev = 1;\n                    error = ev.error, data = ev.data;\n\n                    if (!error) {\n                      _context13.next = 6;\n                      break;\n                    }\n\n                    reject(new Error(error));\n                    return _context13.abrupt(\"return\");\n\n                  case 6:\n                    if (!successExtraFn) {\n                      _context13.next = 9;\n                      break;\n                    }\n\n                    _context13.next = 9;\n                    return successExtraFn.call(_this19, data);\n\n                  case 9:\n                    resolve(data);\n                    _context13.next = 15;\n                    break;\n\n                  case 12:\n                    _context13.prev = 12;\n                    _context13.t0 = _context13[\"catch\"](1);\n                    reject(_context13.t0);\n\n                  case 15:\n                    _context13.prev = 15;\n\n                    _this19.bc.close();\n\n                    _this19.close();\n\n                    return _context13.finish(15);\n\n                  case 19:\n                  case \"end\":\n                    return _context13.stop();\n                }\n              }\n            }, _callee13, null, [[1, 12, 15, 19]]);\n          }));\n\n          return function (_x21) {\n            return _ref12.apply(this, arguments);\n          };\n        }());\n\n        _this19.open().then(function () {\n          log.info(\"opened window \".concat(_this19.bc.name)); // Opened window. yay.  let the bc events do their job\n\n          return undefined;\n        }).catch(function (err) {\n          log.error(err, \"something went wrong while opening window\");\n          reject(err);\n        });\n      });\n    }\n    /**\n     * Use this if we have to send large payloads which don't fit in query/hash params.\n     * Waits for ack that popup window is ready to receive data.\n     * Receives the data from popup window and closes the window\n     * @param payload - The data to be sent to the popup window once we have ack that window is ready to receive data\n     * @param successExtraFn - Extra function to be called after the data is received\n     * @returns The data to be received\n     */\n\n  }, {\n    key: \"handleWithHandshake\",\n    value: function handleWithHandshake(payload, successExtraFn) {\n      var _this20 = this;\n\n      return new Promise(function (resolve, reject) {\n        var closeListener = function closeListener() {\n          _this20.bc.close();\n\n          reject(new UserError(\"user closed popup\"));\n\n          _this20.removeListener(\"close\", closeListener);\n        };\n\n        _this20.on(\"close\", closeListener);\n\n        _this20.bc.addEventListener(\"message\", /*#__PURE__*/function () {\n          var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(ev) {\n            var error, data, _data$type, type;\n\n            return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n              while (1) {\n                switch (_context14.prev = _context14.next) {\n                  case 0:\n                    _context14.prev = 0;\n                    log.info(ev, \"receiving data on channel: \".concat(_this20.bc.name));\n                    error = ev.error, data = ev.data;\n\n                    if (!error) {\n                      _context14.next = 6;\n                      break;\n                    }\n\n                    reject(new Error(error));\n                    return _context14.abrupt(\"return\");\n\n                  case 6:\n                    // Do handshake\n                    _data$type = data.type, type = _data$type === void 0 ? \"\" : _data$type;\n\n                    if (!(type === POPUP_LOADED)) {\n                      _context14.next = 12;\n                      break;\n                    }\n\n                    _context14.next = 10;\n                    return _this20.bc.postMessage({\n                      data: payload\n                    });\n\n                  case 10:\n                    _context14.next = 19;\n                    break;\n\n                  case 12:\n                    if (!(type === POPUP_RESULT)) {\n                      _context14.next = 19;\n                      break;\n                    }\n\n                    if (!successExtraFn) {\n                      _context14.next = 16;\n                      break;\n                    }\n\n                    _context14.next = 16;\n                    return successExtraFn.call(_this20, data);\n\n                  case 16:\n                    resolve(data); // Must only close the bc after result is done\n\n                    _this20.bc.close();\n\n                    _this20.close();\n\n                  case 19:\n                    _context14.next = 26;\n                    break;\n\n                  case 21:\n                    _context14.prev = 21;\n                    _context14.t0 = _context14[\"catch\"](0);\n                    reject(_context14.t0);\n\n                    _this20.bc.close();\n\n                    _this20.close();\n\n                  case 26:\n                  case \"end\":\n                    return _context14.stop();\n                }\n              }\n            }, _callee14, null, [[0, 21]]);\n          }));\n\n          return function (_x22) {\n            return _ref13.apply(this, arguments);\n          };\n        }());\n\n        _this20.open().then(function () {\n          log.info(\"opened window \".concat(_this20.bc.name)); // Opened window. yay.  let the bc events do their job\n\n          return undefined;\n        }).catch(function (err) {\n          log.error(err, \"something went wrong while opening window\");\n          reject(err);\n        });\n      });\n    }\n  }]);\n\n  return PopupWithBcHandler;\n}(PopupHandler);\n\nvar RedirectHandler = /*#__PURE__*/function () {\n  function RedirectHandler() {\n    var _this21 = this;\n\n    _classCallCheck(this, RedirectHandler);\n\n    _defineProperty(this, \"error\", void 0);\n\n    _defineProperty(this, \"finalQueryParams\", {});\n\n    _defineProperty(this, \"instanceParameters\", void 0);\n\n    _defineProperty(this, \"hashParameters\", void 0);\n\n    var hash = window.location.hash;\n    var queryParameters = new URLSearchParams(window.location.search);\n    queryParameters.forEach(function (value, key) {\n      _this21.finalQueryParams[key] = value;\n    });\n\n    var _handleRedirectParame = handleRedirectParameters(hash, this.finalQueryParams),\n        error = _handleRedirectParame.error,\n        instanceParameters = _handleRedirectParame.instanceParameters,\n        hashParameters = _handleRedirectParame.hashParameters;\n\n    this.error = error;\n    this.instanceParameters = instanceParameters;\n    this.hashParameters = hashParameters;\n  }\n\n  _createClass(RedirectHandler, [{\n    key: \"handle\",\n    value: function () {\n      var _handle = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {\n        var _this22 = this;\n\n        return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                return _context17.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  var finalQueryParams = _this22.finalQueryParams,\n                      instanceParameters = _this22.instanceParameters,\n                      hashParameters = _this22.hashParameters,\n                      error = _this22.error;\n                  var bc;\n\n                  try {\n                    if (!finalQueryParams.windowId) {\n                      bc = new BroadcastChannel(\"\".concat(BROADCAST_CHANNELS.REDIRECT_CHANNEL, \"_\").concat(instanceParameters.instanceId), broadcastChannelOptions);\n                      bc.addEventListener(\"message\", /*#__PURE__*/function () {\n                        var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(ev) {\n                          return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n                            while (1) {\n                              switch (_context15.prev = _context15.next) {\n                                case 0:\n                                  if (ev.error) {\n                                    reject(ev.error);\n                                    window.close();\n                                  } else {\n                                    resolve();\n                                    bc.close();\n                                    log.info(\"posted\", {\n                                      finalQueryParams: finalQueryParams,\n                                      hashParameters: hashParameters,\n                                      instanceParameters: instanceParameters\n                                    });\n                                  }\n\n                                case 1:\n                                case \"end\":\n                                  return _context15.stop();\n                              }\n                            }\n                          }, _callee15);\n                        }));\n\n                        return function (_x23) {\n                          return _ref14.apply(this, arguments);\n                        };\n                      }());\n                      bc.postMessage({\n                        data: {\n                          instanceParams: instanceParameters,\n                          hashParams: hashParameters,\n                          queryParams: finalQueryParams\n                        },\n                        error: error\n                      });\n                      setTimeout(function () {\n                        resolve();\n                        window.location.href = window.location.origin + window.location.search + window.location.hash;\n                      }, 5000);\n                    } else {\n                      bc = new BroadcastChannel(\"\".concat(finalQueryParams.windowId), broadcastChannelOptions);\n                      bc.addEventListener(\"message\", /*#__PURE__*/function () {\n                        var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(ev) {\n                          var _ev$data8, url, message;\n\n                          return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n                            while (1) {\n                              switch (_context16.prev = _context16.next) {\n                                case 0:\n                                  _ev$data8 = ev.data, url = _ev$data8.url, message = _ev$data8.message;\n\n                                  if (!url) {\n                                    _context16.next = 6;\n                                    break;\n                                  }\n\n                                  resolve();\n                                  window.location.href = url;\n                                  _context16.next = 9;\n                                  break;\n\n                                case 6:\n                                  if (!(message === SETUP_COMPLETE)) {\n                                    _context16.next = 9;\n                                    break;\n                                  }\n\n                                  _context16.next = 9;\n                                  return bc.postMessage({\n                                    data: {\n                                      windowId: finalQueryParams.windowId,\n                                      message: POPUP_LOADED\n                                    }\n                                  });\n\n                                case 9:\n                                  if (ev.error && ev.error !== \"\") {\n                                    log.error(ev.error);\n                                    resolve();\n                                    bc.close();\n                                  }\n\n                                case 10:\n                                case \"end\":\n                                  return _context16.stop();\n                              }\n                            }\n                          }, _callee16);\n                        }));\n\n                        return function (_x24) {\n                          return _ref15.apply(this, arguments);\n                        };\n                      }());\n                    }\n                  } catch (err) {\n                    log.info(err, \"something went wrong\");\n                    reject(err);\n                    if (bc) bc.close();\n                    window.close();\n                  }\n                }));\n\n              case 1:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17);\n      }));\n\n      function handle() {\n        return _handle.apply(this, arguments);\n      }\n\n      return handle;\n    }()\n  }]);\n\n  return RedirectHandler;\n}();\n\nvar ACTIVITY_ACTION = {\n  ACTIVITY_ACTION_ALL: \"walletActivity.allTransactions\",\n  ACTIVITY_ACTION_SEND: \"walletActivity.send\",\n  ACTIVITY_ACTION_RECEIVE: \"walletActivity.receive\",\n  ACTIVITY_ACTION_TOPUP: \"walletActivity.topup\"\n};\nvar ACCOUNT_CATEGORY = {\n  NORMAL: \"normal\",\n  THRESHOLD: \"threshold\",\n  IMPORTED: \"imported\"\n};\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar DEFAULT_INTERVAL = 180 * 1000;\nvar DEFAULT_PREFERENCES = {\n  selectedCurrency: \"USD\",\n  theme: \"dark\",\n  locale: \"en-US\",\n  accountType: ACCOUNT_CATEGORY.NORMAL,\n  contacts: [],\n  jwtToken: \"\",\n  fetchedPastTx: [],\n  pastTransactions: [],\n  paymentTx: [],\n  defaultPublicAddress: \"\",\n  customTokens: [],\n  customNfts: [],\n  crashReport: true,\n  userInfo: {\n    aggregateVerifier: \"\",\n    email: \"\",\n    name: \"\",\n    profileImage: \"\",\n    typeOfLogin: LOGIN_PROVIDER.GOOGLE,\n    verifier: \"\",\n    verifierId: \"\"\n  }\n};\n/**\n * Controller that stores shared settings and exposes convenience methods\n */\n\nvar BasePreferencesController = /*#__PURE__*/function (_BaseController7) {\n  _inherits(BasePreferencesController, _BaseController7);\n\n  var _super11 = _createSuper(BasePreferencesController);\n\n  /**\n   * Name of this controller used during composition\n   */\n\n  /**\n   * Creates a PreferencesController instance\n   *\n   * @param config - Initial options used to configure this controller\n   * @param state - Initial state to set on this controller\n   */\n  function BasePreferencesController(_ref) {\n    var _this23;\n\n    _classCallCheck(this, BasePreferencesController);\n\n    var config = _ref.config,\n        state = _ref.state,\n        defaultPreferences = _ref.defaultPreferences,\n        signAuthMessage = _ref.signAuthMessage;\n    _this23 = _super11.call(this, {\n      config: config,\n      state: state\n    });\n\n    _defineProperty(_assertThisInitialized(_this23), \"name\", \"PreferencesController\");\n\n    _defineProperty(_assertThisInitialized(_this23), \"iframeOrigin\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this23), \"signAuthMessage\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this23), \"defaultPreferences\", void 0);\n\n    if (!config.api) {\n      throw new Error(\"PreferencesController - no api specified in config.\");\n    }\n\n    _this23.defaultState = {\n      identities: {},\n      selectedAddress: \"\",\n      lastErrorMessage: \"\",\n      lastSuccessMessage: \"\"\n    };\n    _this23.defaultConfig = {\n      api: config.api,\n      pollInterval: DEFAULT_INTERVAL\n    };\n\n    _this23.initialize();\n\n    _this23.defaultPreferences = _objectSpread$1(_objectSpread$1({}, DEFAULT_PREFERENCES), defaultPreferences);\n    _this23.signAuthMessage = signAuthMessage;\n    return _this23;\n  }\n\n  _createClass(BasePreferencesController, [{\n    key: \"setIframeOrigin\",\n    value: function setIframeOrigin(origin) {\n      this.iframeOrigin = origin;\n    }\n  }, {\n    key: \"getAddressState\",\n    value: function getAddressState(address) {\n      var selectedAddress = address || this.state.selectedAddress;\n      return this.state.identities[selectedAddress];\n    }\n    /**\n     * Sets selected address\n     *\n     * @param selectedAddress - casper account hash\n     */\n\n  }, {\n    key: \"setSelectedAddress\",\n    value: function setSelectedAddress(selectedAddress) {\n      this.update({\n        selectedAddress: selectedAddress\n      });\n    }\n  }, {\n    key: \"getUser\",\n    value: function () {\n      var _getUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(address) {\n        var user;\n        return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                _context18.next = 2;\n                return get(\"\".concat(this.config.api, \"/user?fetchTx=false\"), this.headers(address), {\n                  useAPIKey: true\n                });\n\n              case 2:\n                user = _context18.sent;\n                return _context18.abrupt(\"return\", user.data);\n\n              case 4:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n\n      function getUser(_x25) {\n        return _getUser.apply(this, arguments);\n      }\n\n      return getUser;\n    }()\n  }, {\n    key: \"createUser\",\n    value: function () {\n      var _createUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(params) {\n        var selectedCurrency, theme, verifier, verifierId, locale, address, userPayload;\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                selectedCurrency = params.selectedCurrency, theme = params.theme, verifier = params.verifier, verifierId = params.verifierId, locale = params.locale, address = params.address;\n                userPayload = {\n                  default_currency: selectedCurrency,\n                  theme: theme,\n                  verifier: verifier,\n                  verifier_id: verifierId,\n                  locale: locale\n                };\n                _context19.next = 4;\n                return post(\"\".concat(this.config.api, \"/user\"), userPayload, this.headers(address), {\n                  useAPIKey: true\n                });\n\n              case 4:\n                this.updateState({\n                  theme: theme,\n                  defaultPublicAddress: address,\n                  selectedCurrency: selectedCurrency,\n                  locale: locale\n                }, address);\n\n              case 5:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function createUser(_x26) {\n        return _createUser.apply(this, arguments);\n      }\n\n      return createUser;\n    }()\n  }, {\n    key: \"storeUserLogin\",\n    value: function () {\n      var _storeUserLogin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20(params) {\n        var verifierId, verifier, options, address, browser, specialBrowser, recordLoginPayload;\n        return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                verifierId = params.verifierId, verifier = params.verifier, options = params.options, address = params.address;\n\n                if (options.rehydrate) {\n                  _context20.next = 7;\n                  break;\n                }\n\n                browser = bowser.getParser(window.navigator.userAgent);\n                specialBrowser = getCustomDeviceInfo();\n                recordLoginPayload = {\n                  os: browser.getOSName(),\n                  os_version: browser.getOSVersion() || \"unidentified\",\n                  browser: (specialBrowser === null || specialBrowser === void 0 ? void 0 : specialBrowser.browser) || browser.getBrowserName() || \"unidentified\",\n                  browser_version: browser.getBrowserVersion() || \"unidentified\",\n                  platform: browser.getPlatform().type || \"desktop\",\n                  hostname: this.iframeOrigin,\n                  verifier: verifier,\n                  verifier_id: verifierId\n                };\n                _context20.next = 7;\n                return post(\"\".concat(this.config.api, \"/user/recordLogin\"), recordLoginPayload, this.headers(address), {\n                  useAPIKey: true\n                });\n\n              case 7:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this);\n      }));\n\n      function storeUserLogin(_x27) {\n        return _storeUserLogin.apply(this, arguments);\n      }\n\n      return storeUserLogin;\n    }()\n  }, {\n    key: \"setCrashReport\",\n    value: function () {\n      var _setCrashReport = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21(isEnabled) {\n        var _this$getAddressState;\n\n        return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                if (!(isEnabled === ((_this$getAddressState = this.getAddressState()) === null || _this$getAddressState === void 0 ? void 0 : _this$getAddressState.crashReport))) {\n                  _context21.next = 2;\n                  break;\n                }\n\n                return _context21.abrupt(\"return\", true);\n\n              case 2:\n                _context21.prev = 2;\n                _context21.next = 5;\n                return patch(\"\".concat(this.config.api, \"/user\"), {\n                  enable_crash_reporter: isEnabled\n                }, this.headers(), {\n                  useAPIKey: true\n                });\n\n              case 5:\n                this.updateState({\n                  crashReport: isEnabled\n                });\n                return _context21.abrupt(\"return\", true);\n\n              case 9:\n                _context21.prev = 9;\n                _context21.t0 = _context21[\"catch\"](2);\n                log.error(_context21.t0);\n                return _context21.abrupt(\"return\", false);\n\n              case 13:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this, [[2, 9]]);\n      }));\n\n      function setCrashReport(_x28) {\n        return _setCrashReport.apply(this, arguments);\n      }\n\n      return setCrashReport;\n    }()\n  }, {\n    key: \"setUserTheme\",\n    value: function () {\n      var _setUserTheme = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22(theme) {\n        var _this$getAddressState2;\n\n        return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                if (!(theme === ((_this$getAddressState2 = this.getAddressState()) === null || _this$getAddressState2 === void 0 ? void 0 : _this$getAddressState2.theme))) {\n                  _context22.next = 2;\n                  break;\n                }\n\n                return _context22.abrupt(\"return\", true);\n\n              case 2:\n                _context22.prev = 2;\n                _context22.next = 5;\n                return patch(\"\".concat(this.config.api, \"/user\"), {\n                  theme: theme\n                }, this.headers(), {\n                  useAPIKey: true\n                });\n\n              case 5:\n                this.updateState({\n                  theme: theme\n                });\n                return _context22.abrupt(\"return\", true);\n\n              case 9:\n                _context22.prev = 9;\n                _context22.t0 = _context22[\"catch\"](2);\n                log.error(_context22.t0);\n                return _context22.abrupt(\"return\", false);\n\n              case 13:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this, [[2, 9]]);\n      }));\n\n      function setUserTheme(_x29) {\n        return _setUserTheme.apply(this, arguments);\n      }\n\n      return setUserTheme;\n    }()\n  }, {\n    key: \"setUserLocale\",\n    value: function () {\n      var _setUserLocale = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23(locale) {\n        var _this$getAddressState3;\n\n        return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                if (!(locale === ((_this$getAddressState3 = this.getAddressState()) === null || _this$getAddressState3 === void 0 ? void 0 : _this$getAddressState3.locale))) {\n                  _context23.next = 2;\n                  break;\n                }\n\n                return _context23.abrupt(\"return\");\n\n              case 2:\n                _context23.prev = 2;\n                _context23.next = 5;\n                return patch(\"\".concat(this.config.api, \"/user\"), {\n                  locale: locale\n                }, this.headers(), {\n                  useAPIKey: true\n                });\n\n              case 5:\n                this.updateState({\n                  locale: locale\n                });\n                return _context23.abrupt(\"return\", true);\n\n              case 9:\n                _context23.prev = 9;\n                _context23.t0 = _context23[\"catch\"](2);\n                log.error(\"unable to set locale\", _context23.t0);\n                return _context23.abrupt(\"return\", false);\n\n              case 13:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23, this, [[2, 9]]);\n      }));\n\n      function setUserLocale(_x30) {\n        return _setUserLocale.apply(this, arguments);\n      }\n\n      return setUserLocale;\n    }()\n  }, {\n    key: \"setSelectedCurrency\",\n    value: function () {\n      var _setSelectedCurrency = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee24(payload) {\n        var _this$getAddressState4;\n\n        return _regeneratorRuntime().wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                if (!(payload.selectedCurrency === ((_this$getAddressState4 = this.getAddressState()) === null || _this$getAddressState4 === void 0 ? void 0 : _this$getAddressState4.selectedCurrency))) {\n                  _context24.next = 2;\n                  break;\n                }\n\n                return _context24.abrupt(\"return\", true);\n\n              case 2:\n                _context24.prev = 2;\n                _context24.next = 5;\n                return patch(\"\".concat(this.config.api, \"/user\"), {\n                  default_currency: payload.selectedCurrency\n                }, this.headers(), {\n                  useAPIKey: true\n                });\n\n              case 5:\n                this.updateState({\n                  selectedCurrency: payload.selectedCurrency\n                });\n                return _context24.abrupt(\"return\", true);\n\n              case 9:\n                _context24.prev = 9;\n                _context24.t0 = _context24[\"catch\"](2);\n                log.error(_context24.t0);\n                return _context24.abrupt(\"return\", false);\n\n              case 13:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24, this, [[2, 9]]);\n      }));\n\n      function setSelectedCurrency(_x31) {\n        return _setSelectedCurrency.apply(this, arguments);\n      }\n\n      return setSelectedCurrency;\n    }()\n  }, {\n    key: \"addContact\",\n    value: function () {\n      var _addContact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee25(contact) {\n        var _this$getAddressState5, response;\n\n        return _regeneratorRuntime().wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                _context25.prev = 0;\n                _context25.next = 3;\n                return post(\"\".concat(this.config.api, \"/contact\"), contact, this.headers(), {\n                  useAPIKey: true\n                });\n\n              case 3:\n                response = _context25.sent;\n                this.updateState({\n                  contacts: [].concat(_toConsumableArray(((_this$getAddressState5 = this.getAddressState()) === null || _this$getAddressState5 === void 0 ? void 0 : _this$getAddressState5.contacts) || []), [response.data])\n                });\n                return _context25.abrupt(\"return\", true);\n\n              case 8:\n                _context25.prev = 8;\n                _context25.t0 = _context25[\"catch\"](0);\n                log.error(\"unable to add contact\", _context25.t0);\n                return _context25.abrupt(\"return\", false);\n\n              case 12:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25, this, [[0, 8]]);\n      }));\n\n      function addContact(_x32) {\n        return _addContact.apply(this, arguments);\n      }\n\n      return addContact;\n    }()\n  }, {\n    key: \"deleteContact\",\n    value: function () {\n      var _deleteContact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee26(contactId) {\n        var _this$getAddressState6, response, finalContacts;\n\n        return _regeneratorRuntime().wrap(function _callee26$(_context26) {\n          while (1) {\n            switch (_context26.prev = _context26.next) {\n              case 0:\n                _context26.prev = 0;\n                _context26.next = 3;\n                return remove(\"\".concat(this.config.api, \"/contact/\").concat(contactId), {}, this.headers(), {\n                  useAPIKey: true\n                });\n\n              case 3:\n                response = _context26.sent;\n                finalContacts = (_this$getAddressState6 = this.getAddressState()) === null || _this$getAddressState6 === void 0 ? void 0 : _this$getAddressState6.contacts.filter(function (contact) {\n                  return contact.id !== response.data.id;\n                });\n                if (finalContacts) this.updateState({\n                  contacts: _toConsumableArray(finalContacts)\n                });\n                return _context26.abrupt(\"return\", true);\n\n              case 9:\n                _context26.prev = 9;\n                _context26.t0 = _context26[\"catch\"](0);\n                log.error(\"unable to delete contact\", _context26.t0);\n                return _context26.abrupt(\"return\", false);\n\n              case 13:\n              case \"end\":\n                return _context26.stop();\n            }\n          }\n        }, _callee26, this, [[0, 9]]);\n      }));\n\n      function deleteContact(_x33) {\n        return _deleteContact.apply(this, arguments);\n      }\n\n      return deleteContact;\n    }()\n  }, {\n    key: \"revokeDiscord\",\n    value: function () {\n      var _revokeDiscord = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee27(idToken) {\n        var resp;\n        return _regeneratorRuntime().wrap(function _callee27$(_context27) {\n          while (1) {\n            switch (_context27.prev = _context27.next) {\n              case 0:\n                _context27.prev = 0;\n                _context27.next = 3;\n                return post(\"\".concat(this.config.api, \"/revoke/discord\"), {\n                  token: idToken\n                }, this.headers(), {\n                  useAPIKey: true\n                });\n\n              case 3:\n                resp = _context27.sent;\n                log.info(resp);\n                _context27.next = 10;\n                break;\n\n              case 7:\n                _context27.prev = 7;\n                _context27.t0 = _context27[\"catch\"](0);\n                log.error(_context27.t0);\n\n              case 10:\n              case \"end\":\n                return _context27.stop();\n            }\n          }\n        }, _callee27, this, [[0, 7]]);\n      }));\n\n      function revokeDiscord(_x34) {\n        return _revokeDiscord.apply(this, arguments);\n      }\n\n      return revokeDiscord;\n    }()\n  }, {\n    key: \"patchPastTx\",\n    value: function () {\n      var _patchPastTx = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee28(body, address) {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee28$(_context28) {\n          while (1) {\n            switch (_context28.prev = _context28.next) {\n              case 0:\n                _context28.prev = 0;\n                _context28.next = 3;\n                return patch(\"\".concat(this.config.api, \"/transaction\"), body, this.headers(address), {\n                  useAPIKey: true\n                });\n\n              case 3:\n                response = _context28.sent;\n                log.info(\"successfully patched\", response);\n                _context28.next = 10;\n                break;\n\n              case 7:\n                _context28.prev = 7;\n                _context28.t0 = _context28[\"catch\"](0);\n                log.error(\"unable to patch tx\", _context28.t0);\n\n              case 10:\n              case \"end\":\n                return _context28.stop();\n            }\n          }\n        }, _callee28, this, [[0, 7]]);\n      }));\n\n      function patchPastTx(_x35, _x36) {\n        return _patchPastTx.apply(this, arguments);\n      }\n\n      return patchPastTx;\n    }()\n  }, {\n    key: \"postPastTx\",\n    value: function () {\n      var _postPastTx = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee29(tx, address) {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee29$(_context29) {\n          while (1) {\n            switch (_context29.prev = _context29.next) {\n              case 0:\n                _context29.prev = 0;\n                _context29.next = 3;\n                return post(\"\".concat(this.config.api, \"/transaction\"), tx, this.headers(address), {\n                  useAPIKey: true\n                });\n\n              case 3:\n                response = _context29.sent;\n                log.info(\"successfully posted tx\", response);\n                return _context29.abrupt(\"return\", response);\n\n              case 8:\n                _context29.prev = 8;\n                _context29.t0 = _context29[\"catch\"](0);\n                log.error(_context29.t0, \"unable to insert transaction\");\n\n              case 11:\n              case \"end\":\n                return _context29.stop();\n            }\n          }\n        }, _callee29, this, [[0, 8]]);\n      }));\n\n      function postPastTx(_x37, _x38) {\n        return _postPastTx.apply(this, arguments);\n      }\n\n      return postPastTx;\n    }()\n  }, {\n    key: \"getWalletOrders\",\n    value: function () {\n      var _getWalletOrders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee30(address) {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee30$(_context30) {\n          while (1) {\n            switch (_context30.prev = _context30.next) {\n              case 0:\n                _context30.prev = 0;\n                _context30.next = 3;\n                return get(\"\".concat(this.config.api, \"/transaction\"), this.headers(address), {\n                  useAPIKey: true\n                });\n\n              case 3:\n                response = _context30.sent;\n                return _context30.abrupt(\"return\", response.success ? response.data ? response.data : [] : []);\n\n              case 7:\n                _context30.prev = 7;\n                _context30.t0 = _context30[\"catch\"](0);\n                log.error(\"unable to get wallet orders tx\", _context30.t0);\n                return _context30.abrupt(\"return\", []);\n\n              case 11:\n              case \"end\":\n                return _context30.stop();\n            }\n          }\n        }, _callee30, this, [[0, 7]]);\n      }));\n\n      function getWalletOrders(_x39) {\n        return _getWalletOrders.apply(this, arguments);\n      }\n\n      return getWalletOrders;\n    }()\n  }, {\n    key: \"getTopUpOrders\",\n    value: function () {\n      var _getTopUpOrders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee31(address) {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee31$(_context31) {\n          while (1) {\n            switch (_context31.prev = _context31.next) {\n              case 0:\n                _context31.prev = 0;\n                _context31.next = 3;\n                return get(\"\".concat(this.config.commonApiHost, \"/transaction\"), this.headers(address), {\n                  useAPIKey: true\n                });\n\n              case 3:\n                response = _context31.sent;\n                return _context31.abrupt(\"return\", response.data || []);\n\n              case 7:\n                _context31.prev = 7;\n                _context31.t0 = _context31[\"catch\"](0);\n                log.error(\"unable to fetch past Top up orders\", _context31.t0);\n\n              case 10:\n              case \"end\":\n                return _context31.stop();\n            }\n          }\n        }, _callee31, this, [[0, 7]]);\n      }));\n\n      function getTopUpOrders(_x40) {\n        return _getTopUpOrders.apply(this, arguments);\n      }\n\n      return getTopUpOrders;\n    }()\n  }, {\n    key: \"getBillBoardData\",\n    value: function () {\n      var _getBillBoardData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee32() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee32$(_context32) {\n          while (1) {\n            switch (_context32.prev = _context32.next) {\n              case 0:\n                _context32.prev = 0;\n                _context32.next = 3;\n                return get(\"\".concat(this.config.api, \"/billboard\"), this.headers(), {\n                  useAPIKey: true\n                });\n\n              case 3:\n                response = _context32.sent;\n                return _context32.abrupt(\"return\", response.success ? response.data : []);\n\n              case 7:\n                _context32.prev = 7;\n                _context32.t0 = _context32[\"catch\"](0);\n                log.error(\"unable to get billboard data\", _context32.t0);\n                return _context32.abrupt(\"return\", []);\n\n              case 11:\n              case \"end\":\n                return _context32.stop();\n            }\n          }\n        }, _callee32, this, [[0, 7]]);\n      }));\n\n      function getBillBoardData() {\n        return _getBillBoardData.apply(this, arguments);\n      }\n\n      return getBillBoardData;\n    }()\n  }, {\n    key: \"getMessageForSigning\",\n    value: function () {\n      var _getMessageForSigning = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee33(publicAddress) {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee33$(_context33) {\n          while (1) {\n            switch (_context33.prev = _context33.next) {\n              case 0:\n                _context33.next = 2;\n                return post(\"\".concat(this.config.api, \"/auth/message\"), {\n                  public_address: publicAddress\n                }, {}, {\n                  useAPIKey: true\n                });\n\n              case 2:\n                response = _context33.sent;\n                return _context33.abrupt(\"return\", response.message);\n\n              case 4:\n              case \"end\":\n                return _context33.stop();\n            }\n          }\n        }, _callee33, this);\n      }));\n\n      function getMessageForSigning(_x41) {\n        return _getMessageForSigning.apply(this, arguments);\n      }\n\n      return getMessageForSigning;\n    }()\n  }, {\n    key: \"getTwitterId\",\n    value: function () {\n      var _getTwitterId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee34(payload) {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee34$(_context34) {\n          while (1) {\n            switch (_context34.prev = _context34.next) {\n              case 0:\n                _context34.next = 2;\n                return get(\"\".concat(this.config.api, \"/twitter?screen_name=\").concat(payload.nick), this.headers(), {\n                  useAPIKey: true\n                });\n\n              case 2:\n                res = _context34.sent;\n                return _context34.abrupt(\"return\", \"\".concat(payload.typeOfLogin.toLowerCase(), \"|\").concat(res.data.toString()));\n\n              case 4:\n              case \"end\":\n                return _context34.stop();\n            }\n          }\n        }, _callee34, this);\n      }));\n\n      function getTwitterId(_x42) {\n        return _getTwitterId.apply(this, arguments);\n      }\n\n      return getTwitterId;\n    }()\n  }, {\n    key: \"sendEmail\",\n    value: function () {\n      var _sendEmail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee35(payload) {\n        return _regeneratorRuntime().wrap(function _callee35$(_context35) {\n          while (1) {\n            switch (_context35.prev = _context35.next) {\n              case 0:\n                return _context35.abrupt(\"return\", post(\"\".concat(this.config.api, \"/transaction/sendemail\"), payload.emailObject, this.headers(), {\n                  useAPIKey: true\n                }));\n\n              case 1:\n              case \"end\":\n                return _context35.stop();\n            }\n          }\n        }, _callee35, this);\n      }));\n\n      function sendEmail(_x43) {\n        return _sendEmail.apply(this, arguments);\n      }\n\n      return sendEmail;\n    }()\n  }, {\n    key: \"refreshJwt\",\n    value: function () {\n      var _refreshJwt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee36() {\n        var address, messageToSign, signedMessage, response;\n        return _regeneratorRuntime().wrap(function _callee36$(_context36) {\n          while (1) {\n            switch (_context36.prev = _context36.next) {\n              case 0:\n                address = this.state.selectedAddress;\n                _context36.next = 3;\n                return this.getMessageForSigning(address);\n\n              case 3:\n                messageToSign = _context36.sent;\n\n                if (messageToSign.startsWith(this.config.signInPrefix)) {\n                  _context36.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Cannot sign on invalid message\");\n\n              case 6:\n                signedMessage = this.signAuthMessage(address, messageToSign);\n                _context36.next = 9;\n                return post(\"\".concat(this.config.api, \"/auth/verify\"), {\n                  public_address: address,\n                  signed_message: signedMessage\n                }, {}, {\n                  useAPIKey: true\n                });\n\n              case 9:\n                response = _context36.sent;\n                this.updateState({\n                  jwtToken: response.token\n                }, address);\n\n              case 11:\n              case \"end\":\n                return _context36.stop();\n            }\n          }\n        }, _callee36, this);\n      }));\n\n      function refreshJwt() {\n        return _refreshJwt.apply(this, arguments);\n      }\n\n      return refreshJwt;\n    }()\n  }, {\n    key: \"getDappList\",\n    value: function () {\n      var _getDappList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee37() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee37$(_context37) {\n          while (1) {\n            switch (_context37.prev = _context37.next) {\n              case 0:\n                _context37.prev = 0;\n                _context37.next = 3;\n                return get(\"\".concat(this.config.api, \"/dapps\"), this.headers(), {\n                  useAPIKey: true\n                });\n\n              case 3:\n                response = _context37.sent;\n                return _context37.abrupt(\"return\", response.success ? response.data : []);\n\n              case 7:\n                _context37.prev = 7;\n                _context37.t0 = _context37[\"catch\"](0);\n                log.error(\"unable to get billboard data\", _context37.t0);\n                return _context37.abrupt(\"return\", []);\n\n              case 11:\n              case \"end\":\n                return _context37.stop();\n            }\n          }\n        }, _callee37, this, [[0, 7]]);\n      }));\n\n      function getDappList() {\n        return _getDappList.apply(this, arguments);\n      }\n\n      return getDappList;\n    }()\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee38(address, userInfo, jwtToken) {\n        var response, messageToSign, signedMessage;\n        return _regeneratorRuntime().wrap(function _callee38$(_context38) {\n          while (1) {\n            switch (_context38.prev = _context38.next) {\n              case 0:\n                response = {\n                  token: jwtToken\n                };\n\n                if (!this.getAddressState(address)) {\n                  _context38.next = 3;\n                  break;\n                }\n\n                return _context38.abrupt(\"return\");\n\n              case 3:\n                if (jwtToken) {\n                  _context38.next = 13;\n                  break;\n                }\n\n                _context38.next = 6;\n                return this.getMessageForSigning(address);\n\n              case 6:\n                messageToSign = _context38.sent;\n\n                if (messageToSign.startsWith(this.config.signInPrefix)) {\n                  _context38.next = 9;\n                  break;\n                }\n\n                throw new Error(\"Cannot sign on invalid message\");\n\n              case 9:\n                signedMessage = this.signAuthMessage(address, messageToSign);\n                _context38.next = 12;\n                return post(\"\".concat(this.config.api, \"/auth/verify\"), {\n                  public_address: address,\n                  signed_message: signedMessage\n                }, {}, {\n                  useAPIKey: true\n                });\n\n              case 12:\n                response = _context38.sent;\n\n              case 13:\n                this.updateState({\n                  jwtToken: response.token,\n                  userInfo: userInfo\n                }, address);\n\n              case 14:\n              case \"end\":\n                return _context38.stop();\n            }\n          }\n        }, _callee38, this);\n      }));\n\n      function init(_x44, _x45, _x46) {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"updateState\",\n    value: function updateState(preferences, address) {\n      var selectedAddress = address || this.state.selectedAddress;\n      var currentState = this.getAddressState(selectedAddress) || cloneDeep(this.defaultPreferences);\n\n      var mergedState = _objectSpread$1(_objectSpread$1({}, currentState), preferences);\n\n      this.update({\n        identities: _objectSpread$1(_objectSpread$1({}, this.state.identities), {}, _defineProperty2({}, selectedAddress, mergedState))\n      });\n      return mergedState;\n    }\n  }, {\n    key: \"headers\",\n    value: function headers(address) {\n      var _this$getAddressState7;\n\n      var selectedAddress = address || this.state.selectedAddress;\n      return {\n        headers: {\n          Authorization: \"Bearer \".concat(((_this$getAddressState7 = this.getAddressState(selectedAddress)) === null || _this$getAddressState7 === void 0 ? void 0 : _this$getAddressState7.jwtToken) || \"\"),\n          \"Content-Type\": \"application/json; charset=utf-8\"\n        }\n      };\n    }\n  }]);\n\n  return BasePreferencesController;\n}(BaseController);\n/**\n * The status of the transaction. Each status represents the state of the transaction internally\n * in the wallet. Some of these correspond with the state of the transaction on the network, but\n * some are wallet-specific.\n */\n\n\nvar TransactionStatus;\n\n(function (TransactionStatus) {\n  TransactionStatus[\"approved\"] = \"approved\";\n  TransactionStatus[\"cancelled\"] = \"cancelled\";\n  TransactionStatus[\"confirmed\"] = \"confirmed\";\n  TransactionStatus[\"failed\"] = \"failed\";\n  TransactionStatus[\"finalized\"] = \"finalized\";\n  TransactionStatus[\"processed\"] = \"processed\";\n  TransactionStatus[\"rejected\"] = \"rejected\";\n  TransactionStatus[\"signed\"] = \"signed\";\n  TransactionStatus[\"submitted\"] = \"submitted\";\n  TransactionStatus[\"unapproved\"] = \"unapproved\";\n  TransactionStatus[\"dropped\"] = \"dropped\";\n  TransactionStatus[\"expired\"] = \"expired\";\n})(TransactionStatus || (TransactionStatus = {}));\n\nvar TRANSACTION_TYPES = {\n  CONTRACT_INTERACTION: \"contractInteraction\",\n  DEPLOY_CONTRACT: \"contractDeployment\",\n  STANDARD_TRANSACTION: \"transaction\",\n  STANDARD_PAYMENT_TRANSACTION: \"payment_transaction\" // specific to chains like solana and casper\n\n};\nvar TX_EVENTS = {\n  TX_WARNING: \"tx:warning\",\n  TX_ERROR: \"tx:error\",\n  TX_FAILED: \"tx:failed\",\n  TX_CONFIRMED: \"tx:confirmed\",\n  TX_DROPPED: \"tx:dropped\",\n  TX_EXPIRED: \"tx:expired\",\n  TX_STATUS_UPDATE: \"tx:status_update\",\n  TX_UNAPPROVED: \"tx:unapproved\"\n};\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar BaseTransactionStateManager = /*#__PURE__*/function (_BaseController8) {\n  _inherits(BaseTransactionStateManager, _BaseController8);\n\n  var _super12 = _createSuper(BaseTransactionStateManager);\n\n  function BaseTransactionStateManager(_ref) {\n    var _this24;\n\n    _classCallCheck(this, BaseTransactionStateManager);\n\n    var config = _ref.config,\n        state = _ref.state,\n        getCurrentChainId = _ref.getCurrentChainId;\n    _this24 = _super12.call(this, {\n      config: config,\n      state: state\n    });\n\n    _defineProperty(_assertThisInitialized(_this24), \"getCurrentChainId\", void 0);\n\n    _this24.defaultConfig = {\n      txHistoryLimit: 40\n    };\n    _this24.defaultState = {\n      transactions: {},\n      unapprovedTxs: {},\n      currentNetworkTxsList: []\n    };\n\n    _this24.initialize();\n\n    _this24.getCurrentChainId = getCurrentChainId;\n    return _this24;\n  }\n\n  _createClass(BaseTransactionStateManager, [{\n    key: \"getUnapprovedTxList\",\n    value: function getUnapprovedTxList() {\n      var chainId = this.getCurrentChainId();\n      return pickBy(this.state.transactions, function (transaction) {\n        return transaction.status === TransactionStatus.unapproved && transactionMatchesNetwork(transaction, chainId);\n      });\n    }\n  }, {\n    key: \"getTransaction\",\n    value: function getTransaction(txId) {\n      var transactions = this.state.transactions;\n      return transactions[txId];\n    }\n  }, {\n    key: \"updateTransaction\",\n    value: function updateTransaction(txMeta) {\n      // commit txMeta to state\n      var txId = txMeta.id;\n      txMeta.updated_at = new Date().toISOString();\n      this.update({\n        transactions: _objectSpread(_objectSpread({}, this.state.transactions), {}, _defineProperty2({}, txId, txMeta))\n      });\n    }\n  }, {\n    key: \"setTxStatusRejected\",\n    value: function setTxStatusRejected(txId) {\n      this._setTransactionStatus(txId, TransactionStatus.rejected);\n\n      this._deleteTransaction(txId);\n    }\n    /**\n     * The implementing controller can override this functionality and add custom logic + call super.()\n     */\n\n  }, {\n    key: \"setTxStatusUnapproved\",\n    value: function setTxStatusUnapproved(txId) {\n      this._setTransactionStatus(txId, TransactionStatus.unapproved);\n    }\n  }, {\n    key: \"setTxStatusApproved\",\n    value: function setTxStatusApproved(txId) {\n      this._setTransactionStatus(txId, TransactionStatus.approved);\n    }\n  }, {\n    key: \"setTxStatusSigned\",\n    value: function setTxStatusSigned(txId) {\n      this._setTransactionStatus(txId, TransactionStatus.signed);\n    }\n  }, {\n    key: \"setTxStatusSubmitted\",\n    value: function setTxStatusSubmitted(txId) {\n      this._setTransactionStatus(txId, TransactionStatus.submitted);\n    }\n  }, {\n    key: \"setTxStatusDropped\",\n    value: function setTxStatusDropped(txId) {\n      this._setTransactionStatus(txId, TransactionStatus.dropped);\n    }\n  }, {\n    key: \"setTxStatusExpired\",\n    value: function setTxStatusExpired(txId) {\n      this._setTransactionStatus(txId, TransactionStatus.expired);\n    }\n  }, {\n    key: \"setTxStatusConfirmed\",\n    value: function setTxStatusConfirmed(txId) {\n      this._setTransactionStatus(txId, TransactionStatus.confirmed);\n    }\n  }, {\n    key: \"setTxStatusFailed\",\n    value: function setTxStatusFailed(txId, error_) {\n      var error = !error_ ? new Error(\"Internal torus failure\") : error_;\n      var txMeta = this.getTransaction(txId);\n      txMeta.error = error;\n      this.updateTransaction(txMeta);\n\n      this._setTransactionStatus(txId, TransactionStatus.failed);\n    }\n    /**\n     * Method to determine if the transaction is in a final state\n     * @param status - Transaction status\n     * @returns boolean if the transaction is in a final state\n     */\n\n  }, {\n    key: \"isFinalState\",\n    value: function isFinalState(status) {\n      return status === TransactionStatus.rejected || status === TransactionStatus.submitted || status === TransactionStatus.confirmed || status === TransactionStatus.failed || status === TransactionStatus.cancelled || status === TransactionStatus.expired;\n    }\n    /**\n     * Filters out the unapproved transactions from state\n     */\n\n  }, {\n    key: \"clearUnapprovedTxs\",\n    value: function clearUnapprovedTxs() {\n      this.update({\n        transactions: omitBy(this.state.transactions, function (transaction) {\n          return transaction.status === TransactionStatus.unapproved;\n        })\n      });\n    }\n    /**\n     * will append new transactions to old txns.\n     */\n\n  }, {\n    key: \"_addTransactionsToState\",\n    value: function _addTransactionsToState(transactions) {\n      this.update({\n        transactions: transactions.reduce(function (result, newTx) {\n          result[newTx.id] = newTx;\n          return result;\n        }, this.state.transactions)\n      });\n    }\n    /**\n     * will set new txns, override existing if any in state.\n     */\n\n  }, {\n    key: \"_setTransactionsToState\",\n    value: function _setTransactionsToState(transactions) {\n      this.update({\n        transactions: transactions.reduce(function (result, newTx) {\n          result[newTx.id] = newTx;\n          return result;\n        }, {})\n      });\n    }\n  }, {\n    key: \"_deleteTransaction\",\n    value: function _deleteTransaction(targetTransactionId) {\n      var transactions = this.state.transactions;\n      delete transactions[targetTransactionId];\n      this.update({\n        transactions: transactions\n      });\n    }\n  }, {\n    key: \"_deleteTransactions\",\n    value: function _deleteTransactions(targetTransactionIds) {\n      var transactions = this.state.transactions;\n      targetTransactionIds.forEach(function (transactionId) {\n        delete transactions[transactionId];\n      });\n      this.update({\n        transactions: transactions\n      });\n    }\n  }, {\n    key: \"_setTransactionStatus\",\n    value: function _setTransactionStatus(txId, status) {\n      var txMeta = this.getTransaction(txId);\n\n      if (!txMeta) {\n        return;\n      }\n\n      txMeta.status = status; // only updating status so no validation required on txn.\n\n      this.updateTransaction(txMeta);\n      this.emit(TX_EVENTS.TX_STATUS_UPDATE, {\n        txId: txId,\n        status: status\n      });\n\n      if (this.isFinalState(status)) {\n        this.emit(\"\".concat(txMeta.id, \":finished\"), txMeta);\n      } else {\n        this.emit(\"\".concat(txMeta.id, \":\").concat(status), txId);\n      }\n    }\n  }]);\n\n  return BaseTransactionStateManager;\n}(BaseController);\n\nexport { ACCOUNT_CATEGORY, ACTIVITY_ACTION, ACTIVITY_ACTION_ALL, ACTIVITY_ACTION_RECEIVE, ACTIVITY_ACTION_SEND, ACTIVITY_ACTION_TOPUP, ACTIVITY_PERIOD_ALL, ACTIVITY_PERIOD_MONTH_ONE, ACTIVITY_PERIOD_MONTH_SIX, ACTIVITY_PERIOD_WEEK_ONE, ACTIVITY_STATUS_CANCELLED, ACTIVITY_STATUS_CANCELLING, ACTIVITY_STATUS_PENDING, ACTIVITY_STATUS_SUCCESSFUL, ACTIVITY_STATUS_UNSUCCESSFUL, BROADCAST_CHANNELS, BROADCAST_CHANNELS_MSGS, BaseBlockTracker, BaseController, BaseCurrencyController, BaseEmbedController, BaseKeyringController, BasePreferencesController, BaseTransactionStateManager, BroadcastChannelHandler, COMMUNICATION_JRPC_METHODS, COMMUNICATION_NOTIFICATIONS, CommunicationWindowManager, DEFAULT_PREFERENCES, FEATURES_CONFIRM_WINDOW, FEATURES_DEFAULT_POPUP_WINDOW, FEATURES_DEFAULT_WALLET_WINDOW, FEATURES_PROVIDER_CHANGE_WINDOW, LOGIN_PROVIDER, PAYMENT_PROVIDER, POPUP_LOADED, POPUP_RESULT, PROVIDER_JRPC_METHODS, PROVIDER_NOTIFICATIONS, PopupHandler, PopupStoreChannel, PopupWithBcHandler, RedirectHandler, SETUP_COMPLETE, StreamWindow, TRANSACTION_TYPES, TX_EVENTS, TransactionStatus, UserError, addressSlicer, broadcastChannelOptions, concatSig, createChangeProviderMiddlewareMiddleware, createCommunicationMiddleware, createEventEmitterProxy, createFetchConfigFromReq, createFetchMiddleware, createGenericJRPCMiddleware, createLoggerMiddleware, createOriginMiddleware, createRandomId, createSwappableProxy, createTopupMiddleware, formatDate, formatSmallNumbers, formatTime, getCustomDeviceInfo, getPopupFeatures, getTxStatusText, handleRedirectParameters, hashMessage, intToHex, padWithZeroes, providerAsMiddleware, providerFromEngine, providerFromMiddleware, randomId, signMessage, significantDigits, timeout$1 as timeout, transactionMatchesNetwork };","map":{"version":3,"sources":["../src/BaseController.ts","../src/Block/BaseBlockTracker.ts","../src/createEventEmitterProxy.ts","../src/createSwappableProxy.ts","../src/Currency/BaseCurrencyController.ts","../src/Network/INetworkController.ts","../src/enums.ts","../src/Embed/CommunicationMethodMiddleware.ts","../src/Embed/BaseEmbedController.ts","../src/Embed/CommunicationWindowManager.ts","../src/interfaces.ts","../src/utils/txUtils.ts","../src/utils/utils.ts","../src/Keyring/BaseKeyringController.ts","../src/Network/createFetchMiddleware.ts","../src/Network/createLoggerMiddleware.ts","../src/Network/createOriginMiddleware.ts","../src/Popup/BroadcastChannelHandler.ts","../src/Popup/StreamWindow.ts","../src/Popup/PopupHandler.ts","../src/Popup/PopupStoreChannel.ts","../src/Popup/PopupWithBcHandler.ts","../src/Popup/RedirectHandler.ts","../src/Preferences/IPreferencesController.ts","../src/Preferences/BasePreferencesController.ts","../src/Transaction/ITransactionController.ts","../src/Transaction/BaseTransactionStateController.ts"],"names":["defaultConfig","defaultState","constructor","config","state","initialState","initialConfig","configure","overwrite","fullUpdate","Object","update","internalState","initialize","internalConfig","sec","calculateSum","accumulator","blockTrackerEvents","_currentBlock","idempotencyKey","_isRunning","blockResetDuration","_onNewListener","_onRemoveListener","_resetCurrentBlock","isRunning","getCurrentBlock","getLatestBlock","latestBlock","resolve","newState","removeAllListeners","_setupInternalEvents","_start","_end","_newPotentialLatest","currentBlock","newBlock","_setCurrentBlock","_maybeStart","_maybeEnd","_getBlockTrackerEventCount","eventName","oldBlock","emit","_setupBlockResetTimeout","_cancelBlockResetTimeout","setTimeout","_blockResetTimeout","clearTimeout","filterNoop","internalEvents","externalEventFilter","name","eventEmitter","finalOpts","opts","eventFilter","target","setTarget","newTarget","oldTarget","getRawListeners","handler","proxy","get","set","POLLING_INTERVAL","currentCurrency","conversionRate","conversionDate","nativeCurrency","pollInterval","getNativeCurrency","setNativeCurrency","ticker","getCurrentCurrency","setCurrentCurrency","getConversionRate","setConversionRate","getConversionDate","setConversionDate","createRandomId","getCreateRandomId","provider","res","engine","err","serializeError","fallbackError","message","code","ethErrors","req","id","jsonrpc","providerFromEngine","providerRes","end","error","FEATURES_PROVIDER_CHANGE_WINDOW","height","width","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_DEFAULT_POPUP_WINDOW","FEATURES_CONFIRM_WINDOW","POPUP_LOADED","POPUP_RESULT","SETUP_COMPLETE","ACTIVITY_ACTION_ALL","ACTIVITY_ACTION_SEND","ACTIVITY_ACTION_RECEIVE","ACTIVITY_ACTION_TOPUP","ACTIVITY_PERIOD_ALL","ACTIVITY_PERIOD_WEEK_ONE","ACTIVITY_PERIOD_MONTH_ONE","ACTIVITY_PERIOD_MONTH_SIX","ACTIVITY_STATUS_SUCCESSFUL","ACTIVITY_STATUS_UNSUCCESSFUL","ACTIVITY_STATUS_PENDING","ACTIVITY_STATUS_CANCELLED","ACTIVITY_STATUS_CANCELLING","COMMUNICATION_NOTIFICATIONS","IFRAME_STATUS","CREATE_WINDOW","CLOSE_WINDOW","USER_LOGGED_IN","USER_LOGGED_OUT","COMMUNICATION_JRPC_METHODS","LOGOUT","WALLET_INSTANCE_ID","USER_INFO","SET_PROVIDER","TOPUP","OPENED_WINDOW","CLOSED_WINDOW","GET_PROVIDER_STATE","LOGIN_WITH_PRIVATE_KEY","PROVIDER_JRPC_METHODS","PROVIDER_NOTIFICATIONS","ACCOUNTS_CHANGED","CHAIN_CHANGED","UNLOCK_STATE_CHANGED","BROADCAST_CHANNELS","REDIRECT_CHANNEL","PROVIDER_CHANGE_CHANNEL","TRANSACTION_CHANNEL","MESSAGE_CHANNEL","WALLET_LOGOUT_CHANNEL","WALLET_SELECTED_ADDRESS_CHANNEL","WALLET_NETWORK_CHANGE_CHANNEL","WALLET_ACCOUNT_IMPORT_CHANNEL","BROADCAST_CHANNELS_MSGS","ACCOUNT_IMPORTED","SELECTED_ADDRESS_CHANGE","NETWORK_CHANGE","changeProvider","createAsyncMiddleware","method","next","response","topup","result","loginWithPrivateKey","mergeMiddleware","createChangeProviderMiddlewareMiddleware","createTopupMiddleware","createScaffoldMiddleware","getProviderState","createGenericJRPCMiddleware","buttonPosition","isIFrameFullScreen","apiKey","oauthModalVisibility","loginInProgress","dappMetadata","icon","initializeProvider","communicationMiddleware","createCommunicationMiddleware","communicationProvider","setCommunicationProvider","createSwappableProxy","params","windowId","LOGIN_PROVIDER","GOOGLE","FACEBOOK","REDDIT","DISCORD","TWITCH","APPLE","LINE","GITHUB","KAKAO","LINKEDIN","TWITTER","WEIBO","WECHAT","EMAIL_PASSWORDLESS","PAYMENT_PROVIDER","MOONPAY","WYRE","RAMPNETWORK","XANPOOL","MERCURYO","TRANSAK","getTxStatusText","txStatus","hex","i","randomId","Math","hexString","targetLength","String","concatSig","v","r","s","rSig","fromSigned","sSig","vSig","bufferToInt","rStr","padWithZeroes","toUnsigned","sStr","vStr","stripHexPrefix","intToHex","addHexPrefix","timeoutRef","window","formatSmallNumbers","currency","noTilde","finalNumber","BigNumber","number","Number","value","parseFloat","tilde","addressSlicer","sliceLength","address","significantDigits","perc","length_","input","depth","shift","roundedNumber","formatDate","inputDate","monthList","date","day","month","year","formatTime","time","transactionMatchesNetwork","transaction","hashMessage","bufferedMessage","Buffer","el","hashPersonalMessage","signMessage","privKey","msgSig","ecsign","rawMsgSig","intToBuffer","h","dualScreenLeft","dualScreenTop","document","systemZoom","left","top","features","w","broadcastChannelOptions","webWorkerSupport","getCustomDeviceInfo","navigator","brave","browser","handleRedirectParameters","hashParameters","hashUrl","hash","instanceParameters","queryParameters","JSON","decodeURIComponent","wallets","signAuthMessage","keyring","x","hashedMessage","rawMessageSig","RETRIABLE_ERRORS","fetchRes","data","body","originHttpHeaderKey","parsedUrl","payload","originDomain","serializedPayload","fetchParams","headers","Accept","fetchUrl","createFetchMiddleware","createFetchConfigFromReq","rpcTarget","maxAttempts","retryInterval","attempt","fetch","checkForHttpErrors","fetchBody","parseResponse","errMsg","isRetriable","phrase","timeout","callback","log","request","options","instanceId","bc","getMessageFromChannel","ev","reject","type","open","communicationWindowManager","closed","communicationEngine","url","href","writeInterval","close","dappStorageKey","getPopupFeatures","windowTimer","iClosedWindow","urlHashParams","localWindow","_setupTimer","timer","clearInterval","handleSelectedAddressChange","handleLogout","handleAccountImport","handleNetworkChange","setupStoreChannels","logoutChannel","importAccountChannel","walletAccountImportChannel","networkChangeChannel","selectedAddressChangeChannel","handle","closeListener","successExtraFn","handleWithHandshake","finalQueryParams","instanceParams","hashParams","queryParams","ACTIVITY_ACTION","ACCOUNT_CATEGORY","NORMAL","THRESHOLD","IMPORTED","DEFAULT_INTERVAL","DEFAULT_PREFERENCES","selectedCurrency","theme","locale","accountType","contacts","jwtToken","fetchedPastTx","pastTransactions","paymentTx","defaultPublicAddress","customTokens","customNfts","crashReport","userInfo","aggregateVerifier","email","profileImage","typeOfLogin","verifier","verifierId","identities","selectedAddress","lastErrorMessage","lastSuccessMessage","api","setIframeOrigin","iframeOrigin","getAddressState","setSelectedAddress","getUser","user","useAPIKey","createUser","userPayload","default_currency","verifier_id","post","storeUserLogin","bowser","specialBrowser","recordLoginPayload","os","os_version","browser_version","platform","hostname","setCrashReport","isEnabled","patch","enable_crash_reporter","setUserTheme","setUserLocale","setSelectedCurrency","addContact","deleteContact","remove","finalContacts","contact","revokeDiscord","resp","token","idToken","patchPastTx","postPastTx","getWalletOrders","getTopUpOrders","getBillBoardData","getMessageForSigning","public_address","publicAddress","getTwitterId","sendEmail","refreshJwt","messageToSign","signedMessage","signed_message","getDappList","init","updateState","currentState","cloneDeep","mergedState","Authorization","TransactionStatus","TRANSACTION_TYPES","CONTRACT_INTERACTION","DEPLOY_CONTRACT","STANDARD_TRANSACTION","STANDARD_PAYMENT_TRANSACTION","TX_EVENTS","TX_WARNING","TX_ERROR","TX_FAILED","TX_CONFIRMED","TX_DROPPED","TX_EXPIRED","TX_STATUS_UPDATE","TX_UNAPPROVED","getCurrentChainId","txHistoryLimit","transactions","unapprovedTxs","currentNetworkTxsList","getUnapprovedTxList","chainId","pickBy","getTransaction","updateTransaction","txId","txMeta","setTxStatusRejected","_deleteTransaction","setTxStatusUnapproved","setTxStatusApproved","setTxStatusSigned","setTxStatusSubmitted","setTxStatusDropped","setTxStatusExpired","setTxStatusConfirmed","setTxStatusFailed","isFinalState","status","clearUnapprovedTxs","omitBy","_addTransactionsToState","newTx","_setTransactionsToState","_deleteTransactions","targetTransactionIds","transactionId","_setTransactionStatus"],"mappings":"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","sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { SafeEventEmitter, JRPCEngine, createAsyncMiddleware, mergeMiddleware, createScaffoldMiddleware } from '@toruslabs/openlogin-jrpc';\nimport { serializeError, ethErrors } from 'eth-rpc-errors';\nimport getCreateRandomId from 'json-rpc-random-id';\nimport { BigNumber } from 'bignumber.js';\nimport { fromSigned, bufferToInt, toUnsigned, stripHexPrefix, addHexPrefix, hashPersonalMessage, ecsign, intToBuffer } from 'ethereumjs-util';\nimport log from 'loglevel';\nimport { BroadcastChannel } from '@toruslabs/broadcast-channel';\nimport { get, post, patch, remove } from '@toruslabs/http-helpers';\nimport bowser from 'bowser';\nimport { cloneDeep, pickBy, omitBy } from 'lodash';\n\nfunction ownKeys$3(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$3(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$3(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n/**\n * Controller class that provides configuration, state management, and subscriptions\n */\n\nclass BaseController extends SafeEventEmitter {\n  /**\n   * Default options used to configure this controller\n   */\n\n  /**\n   * Default state set on this controller\n   */\n\n  /**\n   * Determines if listeners are notified of state changes\n   */\n\n  /**\n   * Name of this controller used during composition\n   */\n\n  /**\n   * Creates a BaseController instance. Both initial state and initial\n   * configuration options are merged with defaults upon initialization.\n   *\n   * @param config - Initial options used to configure this controller\n   * @param state - Initial state to set on this controller\n   */\n  constructor(_ref) {\n    let {\n      config = {},\n      state = {}\n    } = _ref;\n    super(); // Use assign since generics can't be spread: https://git.io/vpRhY\n\n    _defineProperty(this, \"defaultConfig\", {});\n\n    _defineProperty(this, \"defaultState\", {});\n\n    _defineProperty(this, \"disabled\", false);\n\n    _defineProperty(this, \"name\", \"BaseController\");\n\n    _defineProperty(this, \"initialConfig\", void 0);\n\n    _defineProperty(this, \"initialState\", void 0);\n\n    _defineProperty(this, \"internalConfig\", this.defaultConfig);\n\n    _defineProperty(this, \"internalState\", this.defaultState);\n\n    this.initialState = state;\n    this.initialConfig = config;\n  }\n  /**\n   * Retrieves current controller configuration options\n   *\n   * @returns - Current configuration\n   */\n\n\n  get config() {\n    return this.internalConfig;\n  }\n  /**\n   * Retrieves current controller state\n   *\n   * @returns - Current state\n   */\n\n\n  get state() {\n    return this.internalState;\n  }\n  /**\n   * Updates controller configuration\n   *\n   * @param config - New configuration options\n   * @param overwrite - Overwrite config instead of merging\n   * @param fullUpdate - Boolean that defines if the update is partial or not\n   */\n\n\n  configure(config) {\n    let overwrite = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let fullUpdate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    if (fullUpdate) {\n      this.internalConfig = overwrite ? config : Object.assign(this.internalConfig, config);\n\n      for (const key in this.internalConfig) {\n        if (typeof this.internalConfig[key] !== \"undefined\") {\n          this[key] = this.internalConfig[key];\n        }\n      }\n    } else {\n      for (const key in config) {\n        /* istanbul ignore else */\n        if (typeof this.internalConfig[key] !== \"undefined\") {\n          this.internalConfig[key] = config[key];\n          this[key] = config[key];\n        }\n      }\n    }\n  }\n  /**\n   * Updates controller state\n   *\n   * @param state - New state\n   * @param overwrite - Overwrite state instead of merging\n   */\n\n\n  update(state) {\n    let overwrite = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    this.internalState = overwrite ? _objectSpread$3({}, state) : _objectSpread$3(_objectSpread$3({}, this.internalState), state);\n    this.emit(\"store\", this.internalState);\n  }\n  /**\n   * Enables the controller. This sets each config option as a member\n   * variable on this instance and triggers any defined setters. This\n   * also sets initial state and triggers any listeners.\n   *\n   * @returns - This controller instance\n   */\n\n\n  initialize() {\n    this.internalState = this.defaultState;\n    this.internalConfig = this.defaultConfig;\n    this.configure(this.initialConfig);\n    this.update(this.initialState);\n    return this;\n  }\n\n}\n\nconst sec = 1000;\n\nconst calculateSum = (accumulator, currentValue) => accumulator + currentValue;\n\nconst blockTrackerEvents = [\"sync\", \"latest\"];\nclass BaseBlockTracker extends BaseController {\n  constructor(_ref) {\n    let {\n      config = {},\n      state = {}\n    } = _ref;\n    super({\n      config,\n      state\n    }); // config\n\n    _defineProperty(this, \"name\", \"BaseBlockTracker\");\n\n    _defineProperty(this, \"_blockResetTimeout\", void 0);\n\n    this.defaultState = {\n      _currentBlock: {\n        idempotencyKey: \"\"\n      },\n      _isRunning: false\n    };\n    this.defaultConfig = {\n      blockResetDuration: 20 * sec\n    };\n    this.initialize(); // bind functions for internal use\n\n    this._onNewListener = this._onNewListener.bind(this);\n    this._onRemoveListener = this._onRemoveListener.bind(this);\n    this._resetCurrentBlock = this._resetCurrentBlock.bind(this); // listen for handler changes\n\n    this._setupInternalEvents();\n  }\n\n  isRunning() {\n    return this.state._isRunning;\n  }\n\n  getCurrentBlock() {\n    return this.state._currentBlock;\n  }\n\n  async getLatestBlock() {\n    // return if available\n    if (this.state._currentBlock) {\n      return this.state._currentBlock;\n    } // wait for a new latest block\n\n\n    const latestBlock = await new Promise(resolve => this.once(\"latest\", newState => {\n      if (newState._currentBlock) {\n        resolve(newState._currentBlock);\n      }\n    })); // return newly set current block\n\n    return latestBlock;\n  } // dont allow module consumer to remove our internal event listeners\n\n\n  removeAllListeners(eventName) {\n    if (eventName) {\n      super.removeAllListeners(eventName);\n    } else {\n      super.removeAllListeners();\n    } // re-add internal events\n\n\n    this._setupInternalEvents(); // trigger stop check just in case\n\n\n    this._onRemoveListener();\n\n    return this;\n  }\n  /**\n   * To be implemented in subclass.\n   */\n\n\n  _start() {// default behavior is noop\n  }\n  /**\n   * To be implemented in subclass.\n   */\n\n\n  _end() {// default behavior is noop\n  }\n\n  _newPotentialLatest(newBlock) {\n    const currentBlock = this.state._currentBlock; // only update if blok number is higher\n\n    if (currentBlock && newBlock.idempotencyKey === currentBlock.idempotencyKey) {\n      return;\n    }\n\n    this._setCurrentBlock(newBlock);\n  }\n\n  _setupInternalEvents() {\n    // first remove listeners for idempotency\n    this.removeListener(\"newListener\", this._onNewListener);\n    this.removeListener(\"removeListener\", this._onRemoveListener); // then add them\n\n    this.on(\"removeListener\", this._onRemoveListener);\n    this.on(\"newListener\", this._onNewListener);\n  }\n\n  _onNewListener() {\n    this._maybeStart();\n  }\n\n  _onRemoveListener() {\n    // `removeListener` is called *after* the listener is removed\n    if (this._getBlockTrackerEventCount() > 0) {\n      return;\n    }\n\n    this._maybeEnd();\n  }\n\n  _maybeStart() {\n    if (this.state._isRunning) {\n      return;\n    }\n\n    this.state._isRunning = true; // cancel setting latest block to stale\n\n    this._cancelBlockResetTimeout();\n\n    this._start();\n  }\n\n  _maybeEnd() {\n    if (!this.state._isRunning) {\n      return;\n    }\n\n    this.state._isRunning = false;\n\n    this._setupBlockResetTimeout();\n\n    this._end();\n  }\n\n  _getBlockTrackerEventCount() {\n    return blockTrackerEvents.map(eventName => this.listenerCount(eventName)).reduce(calculateSum);\n  }\n\n  _setCurrentBlock(newBlock) {\n    const oldBlock = this.state._currentBlock;\n    this.update({\n      _currentBlock: newBlock\n    });\n    this.emit(\"latest\", newBlock);\n    this.emit(\"sync\", {\n      oldBlock,\n      newBlock\n    });\n  }\n\n  _setupBlockResetTimeout() {\n    // clear any existing timeout\n    this._cancelBlockResetTimeout(); // clear latest block when stale\n\n\n    this._blockResetTimeout = setTimeout(this._resetCurrentBlock, this.config.blockResetDuration); // nodejs - dont hold process open\n\n    if (this._blockResetTimeout.unref) {\n      this._blockResetTimeout.unref();\n    }\n  }\n\n  _cancelBlockResetTimeout() {\n    if (this._blockResetTimeout) {\n      clearTimeout(this._blockResetTimeout);\n    }\n  }\n\n  _resetCurrentBlock() {\n    this.update({\n      _currentBlock: {\n        idempotencyKey: \"\"\n      }\n    });\n  }\n\n}\n\nconst filterNoop = () => true;\n\nconst internalEvents = [\"newListener\", \"removeListener\"];\n\nconst externalEventFilter = name => !internalEvents.includes(name);\n\nfunction getRawListeners(eventEmitter, name) {\n  // prefer native\n  return eventEmitter.rawListeners(name);\n}\n\nfunction createEventEmitterProxy(initialTarget, opts) {\n  // parse options\n  const finalOpts = opts || {};\n  let eventFilter = finalOpts.eventFilter || filterNoop;\n  if (typeof eventFilter === \"string\" && eventFilter === \"skipInternal\") eventFilter = externalEventFilter;\n  if (typeof eventFilter !== \"function\") throw new Error(\"createEventEmitterProxy - Invalid eventFilter\");\n  let target = initialTarget;\n\n  let setTarget = newTarget => {\n    const oldTarget = target;\n    target = newTarget;\n    oldTarget.eventNames().filter(eventFilter).forEach(name => {\n      getRawListeners(oldTarget, name).forEach(handler => newTarget.on(name, handler));\n    }); // remove old listeners\n\n    oldTarget.removeAllListeners();\n  };\n\n  const proxy = new Proxy({}, {\n    get: (_, name) => {\n      // override `setTarget` access\n      if (name === \"setTarget\") return setTarget;\n      return target[name];\n    },\n    set: (_, name, value) => {\n      // allow `setTarget` overrides\n      if (name === \"setTarget\") {\n        setTarget = value;\n        return true;\n      }\n\n      target[name] = value;\n      return true;\n    }\n  });\n  return proxy;\n}\n\nfunction createSwappableProxy(initialTarget) {\n  let target = initialTarget;\n\n  let setTarget = newTarget => {\n    target = newTarget;\n  };\n\n  const proxy = new Proxy({}, {\n    get: (_, name) => {\n      // override `setTarget` access\n      if (name === \"setTarget\") return setTarget;\n      return target[name];\n    },\n    set: (_, name, value) => {\n      // allow `setTarget` overrides\n      if (name === \"setTarget\") {\n        setTarget = value;\n        return true;\n      }\n\n      target[name] = value;\n      return true;\n    }\n  });\n  return proxy;\n}\n\nconst POLLING_INTERVAL = 600000;\nclass BaseCurrencyController extends BaseController {\n  constructor(_ref) {\n    let {\n      config = {},\n      state\n    } = _ref;\n    super({\n      config,\n      state\n    });\n    this.defaultState = {\n      currentCurrency: \"usd\",\n      conversionRate: 0,\n      conversionDate: \"N/A\",\n      nativeCurrency: \"ETH\"\n    };\n    this.defaultConfig = {\n      pollInterval: POLLING_INTERVAL\n    };\n    this.initialize();\n  } //\n  // PUBLIC METHODS\n  //\n\n\n  getNativeCurrency() {\n    return this.state.nativeCurrency;\n  }\n\n  setNativeCurrency(nativeCurrency) {\n    this.update({\n      nativeCurrency,\n      ticker: nativeCurrency\n    });\n  }\n\n  getCurrentCurrency() {\n    return this.state.currentCurrency;\n  }\n\n  setCurrentCurrency(currentCurrency) {\n    this.update({\n      currentCurrency\n    });\n  }\n  /**\n   * A getter for the conversionRate property\n   *\n   * @returns The conversion rate from ETH to the selected currency.\n   *\n   */\n\n\n  getConversionRate() {\n    return this.state.conversionRate;\n  }\n\n  setConversionRate(conversionRate) {\n    this.update({\n      conversionRate\n    });\n  }\n  /**\n   * A getter for the conversionDate property\n   *\n   * @returns The date at which the conversion rate was set. Expressed in milliseconds since midnight of\n   * January 1, 1970\n   *\n   */\n\n\n  getConversionDate() {\n    return this.state.conversionDate;\n  }\n\n  setConversionDate(conversionDate) {\n    this.update({\n      conversionDate\n    });\n  }\n\n}\n\nfunction ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nconst createRandomId = getCreateRandomId();\nfunction providerFromEngine(engine) {\n  const provider = new SafeEventEmitter(); // handle both rpc send methods\n\n  provider.sendAsync = async req => {\n    const res = await engine.handle(req);\n\n    if (res.error) {\n      var _res$error, _res$error2;\n\n      const err = serializeError(res.error, {\n        fallbackError: {\n          message: ((_res$error = res.error) === null || _res$error === void 0 ? void 0 : _res$error.message) || res.error.toString(),\n          code: ((_res$error2 = res.error) === null || _res$error2 === void 0 ? void 0 : _res$error2.code) || -32603\n        }\n      });\n      throw ethErrors.rpc.internal(err);\n    }\n\n    return res.result;\n  }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  provider.send = (req, callback) => {\n    if (typeof callback !== \"function\") {\n      throw new Error('Must provide callback to \"send\" method.');\n    }\n\n    engine.handle(req, callback);\n  }; // forward notifications\n\n\n  if (engine.on) {\n    engine.on(\"notification\", message => {\n      provider.emit(\"data\", null, message);\n    });\n  }\n\n  provider.request = async args => {\n    const req = _objectSpread$2(_objectSpread$2({}, args), {}, {\n      id: createRandomId(),\n      jsonrpc: \"2.0\"\n    });\n\n    const res = await provider.sendAsync(req);\n    return res;\n  };\n\n  return provider;\n}\nfunction providerFromMiddleware(middleware) {\n  const engine = new JRPCEngine();\n  engine.push(middleware);\n  const provider = providerFromEngine(engine);\n  return provider;\n}\nfunction providerAsMiddleware(provider) {\n  return async (req, res, _next, end) => {\n    // send request to provider\n    try {\n      const providerRes = await provider.sendAsync(req);\n      res.result = providerRes;\n      return end();\n    } catch (error) {\n      return end(error.message);\n    }\n  };\n}\n\nconst FEATURES_PROVIDER_CHANGE_WINDOW = {\n  height: 660,\n  width: 375\n};\nconst FEATURES_DEFAULT_WALLET_WINDOW = {\n  height: 740,\n  width: 1315\n};\nconst FEATURES_DEFAULT_POPUP_WINDOW = {\n  height: 700,\n  width: 1200\n};\nconst FEATURES_CONFIRM_WINDOW = {\n  height: 700,\n  width: 450\n};\nconst POPUP_LOADED = \"popup_loaded\";\nconst POPUP_RESULT = \"popup_result\";\nconst SETUP_COMPLETE = \"setup_complete\";\nconst ACTIVITY_ACTION_ALL = \"walletActivity.allTransactions\";\nconst ACTIVITY_ACTION_SEND = \"walletActivity.send\";\nconst ACTIVITY_ACTION_RECEIVE = \"walletActivity.receive\";\nconst ACTIVITY_ACTION_TOPUP = \"walletActivity.topup\";\nconst ACTIVITY_PERIOD_ALL = \"walletActivity.all\";\nconst ACTIVITY_PERIOD_WEEK_ONE = \"walletActivity.lastOneWeek\";\nconst ACTIVITY_PERIOD_MONTH_ONE = \"walletActivity.lastOneMonth\";\nconst ACTIVITY_PERIOD_MONTH_SIX = \"walletActivity.lastSixMonts\";\nconst ACTIVITY_STATUS_SUCCESSFUL = \"walletActivity.successful\";\nconst ACTIVITY_STATUS_UNSUCCESSFUL = \"walletActivity.unsuccessful\";\nconst ACTIVITY_STATUS_PENDING = \"walletActivity.pending\";\nconst ACTIVITY_STATUS_CANCELLED = \"walletActivity.cancelled\";\nconst ACTIVITY_STATUS_CANCELLING = \"walletActivity.cancelling\";\nconst COMMUNICATION_NOTIFICATIONS = {\n  IFRAME_STATUS: \"iframe_status\",\n  // Tell embed to create the window\n  CREATE_WINDOW: \"create_window\",\n  // Tell embed to close the window\n  CLOSE_WINDOW: \"close_window\",\n  USER_LOGGED_IN: \"user_logged_in\",\n  USER_LOGGED_OUT: \"user_logged_out\"\n};\nconst COMMUNICATION_JRPC_METHODS = {\n  LOGOUT: \"logout\",\n  WALLET_INSTANCE_ID: \"wallet_instance_id\",\n  USER_INFO: \"user_info\",\n  SET_PROVIDER: \"set_provider\",\n  TOPUP: \"topup\",\n  IFRAME_STATUS: \"iframe_status\",\n  // embed has opened the window as requested\n  OPENED_WINDOW: \"opened_window\",\n  // user has closed the window from embed's side\n  CLOSED_WINDOW: \"closed_window\",\n  GET_PROVIDER_STATE: \"get_provider_state\",\n  LOGIN_WITH_PRIVATE_KEY: \"login_with_private_key\"\n};\nconst PROVIDER_JRPC_METHODS = {\n  GET_PROVIDER_STATE: \"wallet_get_provider_state\"\n};\nconst PROVIDER_NOTIFICATIONS = {\n  ACCOUNTS_CHANGED: \"wallet_accounts_changed\",\n  CHAIN_CHANGED: \"wallet_chain_changed\",\n  UNLOCK_STATE_CHANGED: \"wallet_unlock_state_changed\"\n};\nconst BROADCAST_CHANNELS = {\n  REDIRECT_CHANNEL: \"redirect_channel\",\n  PROVIDER_CHANGE_CHANNEL: \"torus_provider_change_channel\",\n  TRANSACTION_CHANNEL: \"torus_channel\",\n  MESSAGE_CHANNEL: \"torus_message_channel\",\n  WALLET_LOGOUT_CHANNEL: \"wallet_logout_channel\",\n  WALLET_SELECTED_ADDRESS_CHANNEL: \"wallet_selected_address_channel\",\n  WALLET_NETWORK_CHANGE_CHANNEL: \"wallet_network_change_channel\",\n  WALLET_ACCOUNT_IMPORT_CHANNEL: \"wallet_account_import_channel\"\n};\nconst BROADCAST_CHANNELS_MSGS = {\n  LOGOUT: \"logout\",\n  ACCOUNT_IMPORTED: \"account_imported\",\n  SELECTED_ADDRESS_CHANGE: \"selected_address_change\",\n  NETWORK_CHANGE: \"network_change\"\n};\n\nfunction createChangeProviderMiddlewareMiddleware(_ref) {\n  let {\n    changeProvider\n  } = _ref;\n  return createAsyncMiddleware(async (request, response, next) => {\n    const {\n      method\n    } = request;\n    if (method !== COMMUNICATION_JRPC_METHODS.SET_PROVIDER) return next();\n    if (!changeProvider) throw new Error(\"CommunicationMiddleware - opts.changeProvider not provided\");\n    response.result = await changeProvider(request);\n  });\n}\nfunction createTopupMiddleware(_ref2) {\n  let {\n    topup\n  } = _ref2;\n  return createAsyncMiddleware(async (request, response, next) => {\n    const {\n      method\n    } = request;\n    if (method !== COMMUNICATION_JRPC_METHODS.TOPUP) return next();\n    if (!topup) throw new Error(\"CommunicationMiddleware - opts.topup not provided\");\n    response.result = await topup(request);\n  });\n}\nfunction createGenericJRPCMiddleware(targetMethod, handler) {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const {\n      method\n    } = request;\n    if (method !== targetMethod) return next();\n    if (!handler) throw new Error(\"CommunicationMiddleware - \".concat(targetMethod, \" not provided\"));\n    const result = await handler(request);\n\n    if (!result) {\n      return next();\n    }\n\n    response.result = result;\n    return undefined;\n  });\n}\nfunction createCommunicationMiddleware(providerHandlers) {\n  const {\n    getUserInfo,\n    getWalletInstanceId,\n    topup,\n    logout,\n    changeProvider,\n    setIFrameStatus,\n    handleWindowRpc,\n    getProviderState,\n    loginWithPrivateKey\n  } = providerHandlers;\n  return mergeMiddleware([createChangeProviderMiddlewareMiddleware({\n    changeProvider\n  }), createTopupMiddleware({\n    topup\n  }), createScaffoldMiddleware({\n    [COMMUNICATION_JRPC_METHODS.LOGOUT]: logout,\n    [COMMUNICATION_JRPC_METHODS.WALLET_INSTANCE_ID]: getWalletInstanceId,\n    [COMMUNICATION_JRPC_METHODS.USER_INFO]: getUserInfo,\n    [COMMUNICATION_JRPC_METHODS.IFRAME_STATUS]: setIFrameStatus,\n    // Do this in the orchestrator because communicationWindowManager needs to be passed into PopupHandlers\n    [COMMUNICATION_JRPC_METHODS.OPENED_WINDOW]: handleWindowRpc,\n    [COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW]: handleWindowRpc,\n    [COMMUNICATION_JRPC_METHODS.GET_PROVIDER_STATE]: getProviderState\n  }), createGenericJRPCMiddleware(COMMUNICATION_JRPC_METHODS.LOGIN_WITH_PRIVATE_KEY, loginWithPrivateKey)]);\n}\n\nclass BaseEmbedController extends BaseController {\n  constructor(_ref) {\n    let {\n      config = {},\n      state\n    } = _ref;\n    super({\n      config,\n      state\n    });\n\n    _defineProperty(this, \"_communicationProviderProxy\", void 0);\n\n    this.defaultState = {\n      buttonPosition: \"bottom-right\",\n      isIFrameFullScreen: true,\n      apiKey: \"torus-default\",\n      oauthModalVisibility: false,\n      loginInProgress: false,\n      dappMetadata: {\n        name: \"\",\n        icon: \"\"\n      }\n    };\n    this.initialize();\n  }\n  /**\n   * Called by orchestrator once while initializing the class\n   * @param handlers - JRPC handlers for provider\n   * @returns - provider - Returns the providerProxy\n   */\n\n\n  initializeProvider(handlers) {\n    const engine = new JRPCEngine();\n    const communicationMiddleware = createCommunicationMiddleware(handlers);\n    engine.push(communicationMiddleware);\n    const communicationProvider = providerFromEngine(engine);\n    this.setCommunicationProvider(communicationProvider);\n  }\n\n  setCommunicationProvider(communicationProvider) {\n    if (this._communicationProviderProxy) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      this._communicationProviderProxy.setTarget(communicationProvider);\n    } else {\n      this._communicationProviderProxy = createSwappableProxy(communicationProvider);\n    }\n  }\n\n}\n\nclass CommunicationWindowManager extends SafeEventEmitter {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"handleWindowRpc\", (request, response, next, end) => {\n      const {\n        method,\n        params\n      } = request;\n\n      if (method === COMMUNICATION_JRPC_METHODS.OPENED_WINDOW) {\n        const {\n          windowId\n        } = params; // I've been informed that a window has been opened\n\n        this.emit(\"\".concat(windowId, \":opened\"));\n        response.result = true;\n        end();\n      } else if (method === COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW) {\n        const {\n          windowId\n        } = params; // I've been informed that a window has been closed\n\n        this.emit(\"\".concat(windowId, \":closed\"));\n        response.result = true;\n        end();\n      } else {\n        next();\n      }\n    });\n  }\n\n}\n\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\"\n};\nconst PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\"\n};\n\nconst getTxStatusText = txStatus => {\n  switch (txStatus) {\n    case \"rejected\":\n    case \"unapproved\":\n    case \"failed\":\n      return ACTIVITY_STATUS_UNSUCCESSFUL;\n\n    case \"confirmed\":\n      return ACTIVITY_STATUS_SUCCESSFUL;\n\n    case \"submitted\":\n      return ACTIVITY_STATUS_PENDING;\n\n    case \"cancelled\":\n      return ACTIVITY_STATUS_CANCELLED;\n\n    default:\n      return \"\";\n  }\n};\n\n/**\n * General utility functions\n */\n\nfunction intToHex(i) {\n  const hex = i.toString(16);\n  return \"0x\".concat(hex);\n}\n/**\n * Returns a random number. Don't use for cryptographic purposes.\n * @returns a random number\n */\n\nconst randomId = () => Math.random().toString(36).slice(2);\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\n\nfunction padWithZeroes(hexString, targetLength) {\n  if (hexString !== \"\" && !/^[a-f0-9]+$/iu.test(hexString)) {\n    throw new Error(\"Expected an unprefixed hex string. Received: \".concat(hexString));\n  }\n\n  if (targetLength < 0) {\n    throw new Error(\"Expected a non-negative integer target length. Received: \".concat(targetLength));\n  }\n\n  return String.prototype.padStart.call(hexString, targetLength, \"0\");\n}\n/**\n * Concatenate an extended ECDSA signature into a hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature.\n */\n\nfunction concatSig(v, r, s) {\n  const rSig = fromSigned(r);\n  const sSig = fromSigned(s);\n  const vSig = bufferToInt(v);\n  const rStr = padWithZeroes(toUnsigned(rSig).toString(\"hex\"), 64);\n  const sStr = padWithZeroes(toUnsigned(sSig).toString(\"hex\"), 64);\n  const vStr = stripHexPrefix(intToHex(vSig));\n  return addHexPrefix(rStr.concat(sStr, vStr));\n}\nfunction timeout$1(duration) {\n  return new Promise(resolve => {\n    const timeoutRef = window.setTimeout(() => {\n      resolve();\n      window.clearTimeout(timeoutRef);\n    }, duration);\n  });\n}\n/**\n * Text/number formatting utilities\n */\n\nconst formatSmallNumbers = function (number) {\n  let currency = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"usd\";\n  let noTilde = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  const finalNumber = BigNumber.isBigNumber(number) ? number.toNumber() : number;\n  if (!Number.isFinite(finalNumber)) return \"\";\n  const value = currency.toLowerCase() === \"usd\" ? parseFloat(Number(finalNumber).toFixed(2)) : parseFloat(Number(finalNumber).toFixed(5));\n  const tilde = value > 0 ? \"~ \" : \"\";\n  return \"\".concat(currency.toLowerCase() === \"usd\" || noTilde ? \"\" : tilde).concat(Number(value), \" \").concat(currency.toUpperCase());\n};\nconst addressSlicer = function (address) {\n  let sliceLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n\n  if (address.length < 11) {\n    return address;\n  }\n\n  if (typeof address !== \"string\") return \"\";\n  return \"\".concat(address.slice(0, sliceLength), \"...\").concat(address.slice(-sliceLength));\n};\nconst significantDigits = function (number) {\n  let perc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  let length_ = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;\n  let input = !BigNumber.isBigNumber(number) ? new BigNumber(number) : number;\n  if (input.isZero()) return input;\n\n  if (perc) {\n    input = input.times(new BigNumber(100));\n  }\n\n  let depth;\n\n  if (input.gte(new BigNumber(1))) {\n    depth = length_;\n  } else {\n    depth = length_ - 1 + Math.ceil(Math.log10(new BigNumber(\"1\").div(input).toNumber()));\n  }\n\n  const shift = new BigNumber(10).pow(new BigNumber(depth));\n  const roundedNumber = Math.round(shift.times(input).toNumber()) / shift.toNumber();\n  return roundedNumber;\n};\nconst formatDate = inputDate => {\n  const monthList = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  const date = new Date(inputDate);\n  const day = date.getDate();\n  const month = monthList[date.getMonth()];\n  const year = date.getFullYear();\n  return \"\".concat(day, \" \").concat(month, \" \").concat(year);\n};\nconst formatTime = time => {\n  return new Date(time).toTimeString().slice(0, 8);\n};\n/**\n * Network utilities\n */\n\nconst transactionMatchesNetwork = (transaction, chainId) => {\n  if (typeof transaction.chainId !== \"undefined\") {\n    return transaction.chainId === chainId;\n  }\n\n  return false;\n};\n/**\n * Signing utils\n */\n\nconst hashMessage = message => {\n  const bufferedMessage = Buffer.from(message, \"utf8\");\n  const el = hashPersonalMessage(bufferedMessage);\n  return el;\n};\nconst signMessage = (privateKey, data) => {\n  const privKey = Buffer.from(privateKey, \"hex\");\n  const message = stripHexPrefix(data);\n  const msgSig = ecsign(Buffer.from(message, \"hex\"), privKey);\n  const rawMsgSig = concatSig(intToBuffer(msgSig.v), msgSig.r, msgSig.s);\n  return rawMsgSig;\n};\n/**\n * popup handler utils\n */\n\nfunction getPopupFeatures(_ref) {\n  let {\n    width: w,\n    height: h\n  } = _ref;\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = \"titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=\".concat(h / systemZoom, \",width=\").concat(w / systemZoom, \",top=\").concat(top, \",left=\").concat(left);\n  return features;\n}\nconst broadcastChannelOptions = {\n  // type: 'localstorage', // (optional) enforce a type, oneOf['native', 'idb', 'localstorage', 'node']\n  webWorkerSupport: false // (optional) set this to false if you know that your channel will never be used in a WebWorker (increases performance)\n\n};\nfunction getCustomDeviceInfo() {\n  var _navigator;\n\n  if ((_navigator = navigator) !== null && _navigator !== void 0 && _navigator.brave) {\n    return {\n      browser: \"Brave\"\n    };\n  }\n}\nclass UserError extends Error {}\nconst handleRedirectParameters = (hash, queryParameters) => {\n  const hashParameters = {};\n  const hashUrl = new URL(\"\".concat(window.location.origin, \"/?\").concat(hash.slice(1)));\n  hashUrl.searchParams.forEach((value, key) => {\n    hashParameters[key] = value;\n  });\n  let instanceParameters = {};\n  let error = \"\";\n\n  if (!queryParameters.windowId) {\n    if (Object.keys(hashParameters).length > 0 && hashParameters.state) {\n      instanceParameters = JSON.parse(window.atob(decodeURIComponent(decodeURIComponent(hashParameters.state)))) || {};\n      error = hashParameters.error_description || hashParameters.error || error;\n    } else if (Object.keys(queryParameters).length > 0 && queryParameters.state) {\n      instanceParameters = JSON.parse(window.atob(decodeURIComponent(decodeURIComponent(queryParameters.state)))) || {};\n      if (queryParameters.error) error = queryParameters.error;\n    }\n  }\n\n  return {\n    error,\n    instanceParameters,\n    hashParameters\n  };\n};\n\nclass BaseKeyringController extends BaseController {\n  constructor(_ref) {\n    var _state$wallets;\n\n    let {\n      config = {},\n      state\n    } = _ref;\n    super({\n      config,\n      state\n    });\n    this.defaultState = {\n      wallets: (_state$wallets = state.wallets) !== null && _state$wallets !== void 0 ? _state$wallets : []\n    };\n    this.initialize();\n  } // for signing auth message\n\n\n  signAuthMessage(address, message) {\n    const keyring = this.state.wallets.find(x => x.address === address);\n\n    if (!keyring) {\n      throw new Error(\"key does not exist\");\n    }\n\n    const hashedMessage = hashMessage(message).toString(\"hex\");\n    const rawMessageSig = signMessage(keyring.privateKey, hashedMessage);\n    return rawMessageSig;\n  }\n\n}\n\nconst RETRIABLE_ERRORS = [// ignore server overload errors\n\"Gateway timeout\", \"ETIMEDOUT\", // ignore server sent html error pages\n// or truncated json responses\n\"failed to parse response body\", // ignore errors where http req failed to establish\n\"Failed to fetch\"];\n\nfunction checkForHttpErrors(fetchRes) {\n  // check for errors\n  switch (fetchRes.status) {\n    case 405:\n      throw ethErrors.rpc.methodNotFound();\n\n    case 418:\n      throw ethErrors.rpc.internal({\n        message: \"Request is being rate limited.\"\n      });\n\n    case 503:\n    case 504:\n      throw ethErrors.rpc.internal({\n        message: \"Gateway timeout. The request took too long to process.\" + \"This can happen when querying over too wide a block range.\"\n      });\n  }\n}\n\nfunction timeout(duration) {\n  return new Promise(resolve => setTimeout(resolve, duration));\n}\n\nfunction parseResponse(fetchRes, body) {\n  // check for error code\n  if (fetchRes.status !== 200) {\n    throw ethErrors.rpc.internal({\n      message: \"Non-200 status code: '\".concat(fetchRes.status, \"'\"),\n      data: body\n    });\n  } // check for rpc error\n\n\n  if (body.error) {\n    throw ethErrors.rpc.internal({\n      data: body.error\n    });\n  } // return successful result\n\n\n  return body.result;\n}\n\nfunction createFetchConfigFromReq(_ref) {\n  let {\n    req,\n    rpcTarget,\n    originHttpHeaderKey\n  } = _ref;\n  const parsedUrl = new URL(rpcTarget); // prepare payload\n  // copy only canonical json rpc properties\n\n  const payload = {\n    id: req.id,\n    jsonrpc: req.jsonrpc,\n    method: req.method,\n    params: req.params\n  }; // extract 'origin' parameter from request\n\n  const originDomain = req.origin; // serialize request body\n\n  const serializedPayload = JSON.stringify(payload); // configure fetch params\n\n  const fetchParams = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: serializedPayload\n  }; // optional: add request origin as header\n\n  if (originHttpHeaderKey && originDomain) {\n    fetchParams.headers[originHttpHeaderKey] = originDomain;\n  }\n\n  return {\n    fetchUrl: parsedUrl.href,\n    fetchParams\n  };\n}\nfunction createFetchMiddleware(_ref2) {\n  let {\n    rpcTarget,\n    originHttpHeaderKey\n  } = _ref2;\n  return createAsyncMiddleware(async (req, res, _next) => {\n    const {\n      fetchUrl,\n      fetchParams\n    } = createFetchConfigFromReq({\n      req,\n      rpcTarget,\n      originHttpHeaderKey\n    }); // attempt request multiple times\n\n    const maxAttempts = 5;\n    const retryInterval = 1000;\n\n    for (let attempt = 0; attempt < maxAttempts; attempt++) {\n      try {\n        const fetchRes = await fetch(fetchUrl, fetchParams); // check for http errrors\n\n        checkForHttpErrors(fetchRes); // parse response body\n\n        const fetchBody = await fetchRes.json();\n        const result = parseResponse(fetchRes, fetchBody); // set result and exit retry loop\n\n        res.result = result;\n        return;\n      } catch (err) {\n        const errMsg = err.toString();\n        const isRetriable = RETRIABLE_ERRORS.some(phrase => errMsg.includes(phrase)); // re-throw error if not retriable\n\n        if (!isRetriable) {\n          throw err;\n        }\n      } // delay before retrying\n\n\n      await timeout(retryInterval);\n    }\n  });\n}\n\nfunction createLoggerMiddleware(options) {\n  return function loggerMiddleware(request, response, next) {\n    next(callback => {\n      if (response.error) {\n        log.warn(\"Error in RPC response:\\n\", response);\n      }\n\n      if (request.isTorusInternal) return;\n      log.info(\"RPC (\".concat(options.origin, \"):\"), request, \"->\", response);\n      callback();\n    });\n  };\n}\n\nfunction createOriginMiddleware(options) {\n  return function originMiddleware(request, _, next) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    request.origin = options.origin;\n    next();\n  };\n}\n\nclass BroadcastChannelHandler {\n  constructor(channelPrefix) {\n    _defineProperty(this, \"bc\", void 0);\n\n    _defineProperty(this, \"channel\", void 0);\n\n    const queryParameters = new URLSearchParams(window.location.search);\n    const instanceId = queryParameters.get(\"instanceId\");\n    this.channel = \"\".concat(channelPrefix, \"_\").concat(instanceId);\n    this.bc = new BroadcastChannel(this.channel, broadcastChannelOptions);\n  }\n\n  getMessageFromChannel() {\n    return new Promise((resolve, reject) => {\n      this.bc.addEventListener(\"message\", async ev => {\n        this.bc.close();\n\n        if (ev.error) {\n          reject(ev.error);\n        } else {\n          resolve(ev.data);\n        }\n      });\n      this.bc.postMessage({\n        data: {\n          type: POPUP_LOADED\n        }\n      });\n    });\n  }\n\n}\n\nclass StreamWindow extends BaseController {\n  // if window has been closed by users\n  constructor(_ref) {\n    let {\n      config,\n      state = {}\n    } = _ref;\n    super({\n      config,\n      state\n    });\n\n    _defineProperty(this, \"closed\", false);\n\n    this.initialize();\n  }\n\n  async open() {\n    return new Promise((resolve, reject) => {\n      const {\n        communicationEngine,\n        communicationWindowManager\n      } = this.config;\n      communicationWindowManager.once(\"\".concat(this.state.windowId, \":closed\"), () => {\n        this.closed = true;\n      }); // Window is not open yet\n\n      if (!this.state.windowId) {\n        this.update({\n          windowId: randomId()\n        });\n        communicationWindowManager.once(\"\".concat(this.state.windowId, \":opened\"), () => {\n          resolve(this);\n        }); // Tell the other party to create a window by prompting the user to click on something\n\n        communicationEngine.emit(\"notification\", {\n          method: COMMUNICATION_NOTIFICATIONS.CREATE_WINDOW,\n          params: {\n            windowId: this.state.windowId,\n            url: this.state.url.href\n          }\n        });\n      } else {\n        // Send this window with `windowId` the url to open via bc\n        const bc = new BroadcastChannel(this.state.windowId, broadcastChannelOptions);\n        let writeInterval = null;\n        bc.addEventListener(\"message\", async ev => {\n          try {\n            log.info(ev, \"receiving data on channel: \".concat(bc.name));\n            const {\n              error\n            } = ev;\n\n            if (error) {\n              // Popup says some error. so, we say it's not really opened\n              reject(new Error(error));\n              return;\n            }\n\n            const {\n              message\n            } = ev.data;\n\n            if (message === POPUP_LOADED) {\n              if (writeInterval) window.clearInterval(writeInterval);\n              await bc.postMessage({\n                data: {\n                  url: this.state.url.href,\n                  message: \"\" // No need of a msg\n\n                }\n              });\n              resolve(this);\n              bc.close();\n            }\n          } catch (error) {\n            reject(error);\n            bc.close(); // Something went wrong. so, we close that window\n\n            this.close();\n          }\n        }); // We don't know if the other end is ready to receive this msg. So, we keep writing until it receives and sends back something\n\n        writeInterval = window.setInterval(() => {\n          bc.postMessage({\n            data: {\n              message: SETUP_COMPLETE\n            }\n          });\n        }, bc.type === \"server\" ? 1000 : 200);\n      }\n    });\n  }\n\n  close() {\n    const {\n      communicationEngine\n    } = this.config;\n    communicationEngine.emit(\"notification\", {\n      method: COMMUNICATION_NOTIFICATIONS.CLOSE_WINDOW,\n      params: {\n        windowId: this.state.windowId\n      }\n    });\n  }\n\n}\n\n/*\nScenarios:\n1. Open a normal popup window and no communication with it - Use PopupHandler\n2. Open a popup window and communicate with it - Use PopupWithBcHandler (can initiate communication by waiting for window to open or not)\n\n3. If window is already opened, pass in windowId to the popup handler.\n   This will establish communication with the popup window and sends it a new url to redirect to\n\n\nIf you're trying to open a window and it gets blocked (happens if you're in iframe or delay b/w click and opening window),\nStreamWindow is invoked and it writes in a channel to display a message to the user\n\nOnce user clicks on that modal/dialog, we pre-open the window and pass in the windowId (goes to 3)\n*/\n\n/**\n * Handles popup window management.\n * For broadcast channel communication, use url with `instanceId` coded into state parameter.\n * This state parameter will be passed across redirects according to OAuth spec.\n */\n\nclass PopupHandler extends BaseController {\n  constructor(_ref) {\n    let {\n      config,\n      state\n    } = _ref;\n    super({\n      config,\n      state\n    }); // this.id = randomId()\n    // Add in dapp storage key to all popups as a hash parameter\n\n    this.defaultConfig = {\n      dappStorageKey: \"\",\n      features: getPopupFeatures(FEATURES_DEFAULT_POPUP_WINDOW),\n      target: \"_blank\",\n      communicationEngine: null,\n      communicationWindowManager: null\n    };\n    this.defaultState = {\n      windowTimer: null,\n      window: null,\n      iClosedWindow: false,\n      windowId: \"\",\n      url: state.url\n    };\n    this.initialize();\n\n    this._setupTimer();\n  }\n\n  async open() {\n    // if window is already open\n    const {\n      target,\n      features,\n      dappStorageKey,\n      communicationEngine,\n      communicationWindowManager\n    } = this.config;\n    const {\n      windowId,\n      url\n    } = this.state;\n\n    if (dappStorageKey) {\n      const urlHashParams = new URLSearchParams(url.hash.slice(1));\n      urlHashParams.append(\"dappStorageKey\", dappStorageKey);\n      url.hash = urlHashParams.toString();\n      this.update({\n        url\n      });\n    } // No window has been pre-opened\n\n\n    if (!windowId) {\n      // try to open a window first\n      let localWindow = window.open(url.href, target, features);\n\n      if (!localWindow) {\n        // if it's blocked, open StreamWindow\n        localWindow = new StreamWindow({\n          config: {\n            communicationEngine,\n            communicationWindowManager\n          },\n          state: {\n            url\n          }\n        });\n        localWindow.open();\n      }\n\n      this.update({\n        window: localWindow\n      });\n      return;\n    } // A window has been pre-opened with a query parameter `windowId`\n\n\n    const localWindow = new StreamWindow({\n      config: {\n        communicationEngine,\n        communicationWindowManager\n      },\n      state: {\n        url,\n        windowId\n      }\n    });\n    this.update({\n      window: localWindow\n    });\n    await localWindow.open();\n  }\n\n  close() {\n    this.update({\n      iClosedWindow: true\n    });\n    const {\n      window\n    } = this.state;\n    if (window) window.close();\n  }\n\n  _setupTimer() {\n    const timer = window.setInterval(() => {\n      const {\n        window,\n        windowTimer,\n        iClosedWindow\n      } = this.state;\n\n      if (window && window.closed) {\n        if (windowTimer) clearInterval(windowTimer);\n\n        if (!iClosedWindow) {\n          this.emit(\"close\");\n        }\n\n        this.update({\n          iClosedWindow: false,\n          window: null\n        });\n      }\n\n      if (window === null && windowTimer) clearInterval(windowTimer);\n    }, 500);\n    this.update({\n      windowTimer: timer\n    });\n  }\n\n}\n\nclass PopupStoreChannel {\n  constructor(_ref) {\n    let {\n      instanceId,\n      handleLogout,\n      handleAccountImport,\n      handleNetworkChange,\n      handleSelectedAddressChange\n    } = _ref;\n\n    _defineProperty(this, \"handleLogout\", void 0);\n\n    _defineProperty(this, \"handleAccountImport\", void 0);\n\n    _defineProperty(this, \"handleNetworkChange\", void 0);\n\n    _defineProperty(this, \"handleSelectedAddressChange\", void 0);\n\n    _defineProperty(this, \"instanceId\", void 0);\n\n    this.instanceId = instanceId;\n    this.handleLogout = handleLogout;\n    this.handleAccountImport = handleAccountImport;\n    this.handleNetworkChange = handleNetworkChange;\n    this.handleSelectedAddressChange = handleSelectedAddressChange;\n  }\n\n  setupStoreChannels() {\n    this.logoutChannel();\n    this.importAccountChannel();\n    this.networkChangeChannel();\n    this.selectedAddressChangeChannel();\n  }\n\n  logoutChannel() {\n    const logoutChannel = new BroadcastChannel(\"\".concat(BROADCAST_CHANNELS.WALLET_LOGOUT_CHANNEL, \"_\").concat(this.instanceId), broadcastChannelOptions);\n    logoutChannel.addEventListener(\"message\", ev => {\n      var _ev$data;\n\n      log.info(\"received logout message\", ev);\n\n      if (!ev.error && ((_ev$data = ev.data) === null || _ev$data === void 0 ? void 0 : _ev$data.type) === BROADCAST_CHANNELS_MSGS.LOGOUT) {\n        log.info(\"Logging Out\");\n        this.handleLogout();\n      }\n    });\n  }\n\n  importAccountChannel() {\n    const walletAccountImportChannel = new BroadcastChannel(\"\".concat(BROADCAST_CHANNELS.WALLET_ACCOUNT_IMPORT_CHANNEL, \"_\").concat(this.instanceId), broadcastChannelOptions);\n    walletAccountImportChannel.addEventListener(\"message\", ev => {\n      var _ev$data2;\n\n      if (!ev.error && ((_ev$data2 = ev.data) === null || _ev$data2 === void 0 ? void 0 : _ev$data2.type) === BROADCAST_CHANNELS_MSGS.ACCOUNT_IMPORTED) {\n        var _ev$data3;\n\n        this.handleAccountImport((_ev$data3 = ev.data) === null || _ev$data3 === void 0 ? void 0 : _ev$data3.privKey);\n      }\n    });\n  }\n\n  networkChangeChannel() {\n    const walletAccountImportChannel = new BroadcastChannel(\"\".concat(BROADCAST_CHANNELS.WALLET_NETWORK_CHANGE_CHANNEL, \"_\").concat(this.instanceId), broadcastChannelOptions);\n    walletAccountImportChannel.addEventListener(\"message\", ev => {\n      var _ev$data4;\n\n      if (!ev.error && ((_ev$data4 = ev.data) === null || _ev$data4 === void 0 ? void 0 : _ev$data4.type) === BROADCAST_CHANNELS_MSGS.NETWORK_CHANGE) {\n        var _ev$data5;\n\n        this.handleNetworkChange((_ev$data5 = ev.data) === null || _ev$data5 === void 0 ? void 0 : _ev$data5.network);\n      }\n    });\n  }\n\n  selectedAddressChangeChannel() {\n    const walletAccountImportChannel = new BroadcastChannel(\"\".concat(BROADCAST_CHANNELS.WALLET_SELECTED_ADDRESS_CHANNEL, \"_\").concat(this.instanceId), broadcastChannelOptions);\n    walletAccountImportChannel.addEventListener(\"message\", ev => {\n      var _ev$data6;\n\n      if (!ev.error && ((_ev$data6 = ev.data) === null || _ev$data6 === void 0 ? void 0 : _ev$data6.type) === BROADCAST_CHANNELS_MSGS.SELECTED_ADDRESS_CHANGE) {\n        var _ev$data7;\n\n        this.handleSelectedAddressChange((_ev$data7 = ev.data) === null || _ev$data7 === void 0 ? void 0 : _ev$data7.selectedAddress);\n      }\n    });\n  }\n\n}\n\n/**\n * PopupWithBcHandler is a PopupHandler which uses broadcast channel to communicate with the popup window.\n */\n\nclass PopupWithBcHandler extends PopupHandler {\n  constructor(_ref) {\n    let {\n      config,\n      state,\n      instanceId\n    } = _ref;\n    super({\n      config,\n      state\n    });\n\n    _defineProperty(this, \"bc\", void 0);\n\n    this.bc = new BroadcastChannel(instanceId, broadcastChannelOptions);\n  }\n  /**\n   * Receives the data from popup window and closes the window\n   * @param successExtraFn - Extra function to be called after the data is received\n   * @returns The data to be received\n   */\n\n\n  handle(successExtraFn) {\n    return new Promise((resolve, reject) => {\n      const closeListener = () => {\n        this.bc.close();\n        reject(new UserError(\"user closed popup\"));\n        this.removeListener(\"close\", closeListener);\n      };\n\n      this.on(\"close\", closeListener);\n      this.bc.addEventListener(\"message\", async ev => {\n        log.info(ev, \"receiving data on channel: \".concat(this.bc.name));\n\n        try {\n          const {\n            error,\n            data\n          } = ev;\n\n          if (error) {\n            reject(new Error(error));\n            return;\n          }\n\n          if (successExtraFn) await successExtraFn.call(this, data);\n          resolve(data);\n        } catch (error) {\n          reject(error);\n        } finally {\n          this.bc.close();\n          this.close();\n        }\n      });\n      this.open().then(() => {\n        log.info(\"opened window \".concat(this.bc.name)); // Opened window. yay.  let the bc events do their job\n\n        return undefined;\n      }).catch(err => {\n        log.error(err, \"something went wrong while opening window\");\n        reject(err);\n      });\n    });\n  }\n  /**\n   * Use this if we have to send large payloads which don't fit in query/hash params.\n   * Waits for ack that popup window is ready to receive data.\n   * Receives the data from popup window and closes the window\n   * @param payload - The data to be sent to the popup window once we have ack that window is ready to receive data\n   * @param successExtraFn - Extra function to be called after the data is received\n   * @returns The data to be received\n   */\n\n\n  handleWithHandshake(payload, successExtraFn) {\n    return new Promise((resolve, reject) => {\n      const closeListener = () => {\n        this.bc.close();\n        reject(new UserError(\"user closed popup\"));\n        this.removeListener(\"close\", closeListener);\n      };\n\n      this.on(\"close\", closeListener);\n      this.bc.addEventListener(\"message\", async ev => {\n        try {\n          log.info(ev, \"receiving data on channel: \".concat(this.bc.name));\n          const {\n            error,\n            data\n          } = ev;\n\n          if (error) {\n            reject(new Error(error));\n            return;\n          } // Do handshake\n\n\n          const {\n            type = \"\"\n          } = data;\n\n          if (type === POPUP_LOADED) {\n            // Hack with generic to use the same type for both send and receive\n            await this.bc.postMessage({\n              data: payload\n            });\n          } else if (type === POPUP_RESULT) {\n            if (successExtraFn) await successExtraFn.call(this, data);\n            resolve(data); // Must only close the bc after result is done\n\n            this.bc.close();\n            this.close();\n          }\n        } catch (error) {\n          reject(error);\n          this.bc.close();\n          this.close();\n        }\n      });\n      this.open().then(() => {\n        log.info(\"opened window \".concat(this.bc.name)); // Opened window. yay.  let the bc events do their job\n\n        return undefined;\n      }).catch(err => {\n        log.error(err, \"something went wrong while opening window\");\n        reject(err);\n      });\n    });\n  }\n\n}\n\nclass RedirectHandler {\n  constructor() {\n    _defineProperty(this, \"error\", void 0);\n\n    _defineProperty(this, \"finalQueryParams\", {});\n\n    _defineProperty(this, \"instanceParameters\", void 0);\n\n    _defineProperty(this, \"hashParameters\", void 0);\n\n    const {\n      hash\n    } = window.location;\n    const queryParameters = new URLSearchParams(window.location.search);\n    queryParameters.forEach((value, key) => {\n      this.finalQueryParams[key] = value;\n    });\n    const {\n      error,\n      instanceParameters,\n      hashParameters\n    } = handleRedirectParameters(hash, this.finalQueryParams);\n    this.error = error;\n    this.instanceParameters = instanceParameters;\n    this.hashParameters = hashParameters;\n  }\n\n  async handle() {\n    return new Promise((resolve, reject) => {\n      const {\n        finalQueryParams,\n        instanceParameters,\n        hashParameters,\n        error\n      } = this;\n      let bc;\n\n      try {\n        if (!finalQueryParams.windowId) {\n          bc = new BroadcastChannel(\"\".concat(BROADCAST_CHANNELS.REDIRECT_CHANNEL, \"_\").concat(instanceParameters.instanceId), broadcastChannelOptions);\n          bc.addEventListener(\"message\", async ev => {\n            if (ev.error) {\n              reject(ev.error);\n              window.close();\n            } else {\n              resolve();\n              bc.close();\n              log.info(\"posted\", {\n                finalQueryParams,\n                hashParameters,\n                instanceParameters\n              });\n            }\n          });\n          bc.postMessage({\n            data: {\n              instanceParams: instanceParameters,\n              hashParams: hashParameters,\n              queryParams: finalQueryParams\n            },\n            error\n          });\n          setTimeout(() => {\n            resolve();\n            window.location.href = window.location.origin + window.location.search + window.location.hash;\n          }, 5000);\n        } else {\n          bc = new BroadcastChannel(\"\".concat(finalQueryParams.windowId), broadcastChannelOptions);\n          bc.addEventListener(\"message\", async ev => {\n            const {\n              url,\n              message\n            } = ev.data;\n\n            if (url) {\n              resolve();\n              window.location.href = url;\n            } else if (message === SETUP_COMPLETE) {\n              await bc.postMessage({\n                data: {\n                  windowId: finalQueryParams.windowId,\n                  message: POPUP_LOADED\n                }\n              });\n            }\n\n            if (ev.error && ev.error !== \"\") {\n              log.error(ev.error);\n              resolve();\n              bc.close();\n            }\n          });\n        }\n      } catch (err) {\n        log.info(err, \"something went wrong\");\n        reject(err);\n        if (bc) bc.close();\n        window.close();\n      }\n    });\n  }\n\n}\n\nconst ACTIVITY_ACTION = {\n  ACTIVITY_ACTION_ALL: \"walletActivity.allTransactions\",\n  ACTIVITY_ACTION_SEND: \"walletActivity.send\",\n  ACTIVITY_ACTION_RECEIVE: \"walletActivity.receive\",\n  ACTIVITY_ACTION_TOPUP: \"walletActivity.topup\"\n};\nconst ACCOUNT_CATEGORY = {\n  NORMAL: \"normal\",\n  THRESHOLD: \"threshold\",\n  IMPORTED: \"imported\"\n};\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nconst DEFAULT_INTERVAL = 180 * 1000;\nconst DEFAULT_PREFERENCES = {\n  selectedCurrency: \"USD\",\n  theme: \"dark\",\n  locale: \"en-US\",\n  accountType: ACCOUNT_CATEGORY.NORMAL,\n  contacts: [],\n  jwtToken: \"\",\n  fetchedPastTx: [],\n  pastTransactions: [],\n  paymentTx: [],\n  defaultPublicAddress: \"\",\n  customTokens: [],\n  customNfts: [],\n  crashReport: true,\n  userInfo: {\n    aggregateVerifier: \"\",\n    email: \"\",\n    name: \"\",\n    profileImage: \"\",\n    typeOfLogin: LOGIN_PROVIDER.GOOGLE,\n    verifier: \"\",\n    verifierId: \"\"\n  }\n};\n/**\n * Controller that stores shared settings and exposes convenience methods\n */\n\nclass BasePreferencesController extends BaseController {\n  /**\n   * Name of this controller used during composition\n   */\n\n  /**\n   * Creates a PreferencesController instance\n   *\n   * @param config - Initial options used to configure this controller\n   * @param state - Initial state to set on this controller\n   */\n  constructor(_ref) {\n    let {\n      config,\n      state,\n      defaultPreferences,\n      signAuthMessage\n    } = _ref;\n    super({\n      config,\n      state\n    });\n\n    _defineProperty(this, \"name\", \"PreferencesController\");\n\n    _defineProperty(this, \"iframeOrigin\", void 0);\n\n    _defineProperty(this, \"signAuthMessage\", void 0);\n\n    _defineProperty(this, \"defaultPreferences\", void 0);\n\n    if (!config.api) {\n      throw new Error(\"PreferencesController - no api specified in config.\");\n    }\n\n    this.defaultState = {\n      identities: {},\n      selectedAddress: \"\",\n      lastErrorMessage: \"\",\n      lastSuccessMessage: \"\"\n    };\n    this.defaultConfig = {\n      api: config.api,\n      pollInterval: DEFAULT_INTERVAL\n    };\n    this.initialize();\n    this.defaultPreferences = _objectSpread$1(_objectSpread$1({}, DEFAULT_PREFERENCES), defaultPreferences);\n    this.signAuthMessage = signAuthMessage;\n  }\n\n  setIframeOrigin(origin) {\n    this.iframeOrigin = origin;\n  }\n\n  getAddressState(address) {\n    const selectedAddress = address || this.state.selectedAddress;\n    return this.state.identities[selectedAddress];\n  }\n  /**\n   * Sets selected address\n   *\n   * @param selectedAddress - casper account hash\n   */\n\n\n  setSelectedAddress(selectedAddress) {\n    this.update({\n      selectedAddress\n    });\n  }\n\n  async getUser(address) {\n    const user = await get(\"\".concat(this.config.api, \"/user?fetchTx=false\"), this.headers(address), {\n      useAPIKey: true\n    });\n    return user.data;\n  }\n\n  async createUser(params) {\n    const {\n      selectedCurrency,\n      theme,\n      verifier,\n      verifierId,\n      locale,\n      address\n    } = params;\n    const userPayload = {\n      default_currency: selectedCurrency,\n      theme,\n      verifier,\n      verifier_id: verifierId,\n      locale\n    };\n    await post(\"\".concat(this.config.api, \"/user\"), userPayload, this.headers(address), {\n      useAPIKey: true\n    });\n    this.updateState({\n      theme,\n      defaultPublicAddress: address,\n      selectedCurrency,\n      locale\n    }, address);\n  }\n\n  async storeUserLogin(params) {\n    const {\n      verifierId,\n      verifier,\n      options,\n      address\n    } = params;\n\n    if (!options.rehydrate) {\n      const browser = bowser.getParser(window.navigator.userAgent);\n      const specialBrowser = getCustomDeviceInfo();\n      const recordLoginPayload = {\n        os: browser.getOSName(),\n        os_version: browser.getOSVersion() || \"unidentified\",\n        browser: (specialBrowser === null || specialBrowser === void 0 ? void 0 : specialBrowser.browser) || browser.getBrowserName() || \"unidentified\",\n        browser_version: browser.getBrowserVersion() || \"unidentified\",\n        platform: browser.getPlatform().type || \"desktop\",\n        hostname: this.iframeOrigin,\n        verifier,\n        verifier_id: verifierId\n      };\n      await post(\"\".concat(this.config.api, \"/user/recordLogin\"), recordLoginPayload, this.headers(address), {\n        useAPIKey: true\n      });\n    }\n  }\n\n  async setCrashReport(isEnabled) {\n    var _this$getAddressState;\n\n    if (isEnabled === ((_this$getAddressState = this.getAddressState()) === null || _this$getAddressState === void 0 ? void 0 : _this$getAddressState.crashReport)) return true;\n\n    try {\n      await patch(\"\".concat(this.config.api, \"/user\"), {\n        enable_crash_reporter: isEnabled\n      }, this.headers(), {\n        useAPIKey: true\n      });\n      this.updateState({\n        crashReport: isEnabled\n      });\n      return true;\n    } catch (error) {\n      log.error(error);\n      return false;\n    }\n  }\n\n  async setUserTheme(theme) {\n    var _this$getAddressState2;\n\n    if (theme === ((_this$getAddressState2 = this.getAddressState()) === null || _this$getAddressState2 === void 0 ? void 0 : _this$getAddressState2.theme)) return true;\n\n    try {\n      await patch(\"\".concat(this.config.api, \"/user\"), {\n        theme\n      }, this.headers(), {\n        useAPIKey: true\n      });\n      this.updateState({\n        theme\n      });\n      return true;\n    } catch (error) {\n      log.error(error);\n      return false;\n    }\n  }\n\n  async setUserLocale(locale) {\n    var _this$getAddressState3;\n\n    if (locale === ((_this$getAddressState3 = this.getAddressState()) === null || _this$getAddressState3 === void 0 ? void 0 : _this$getAddressState3.locale)) return;\n\n    try {\n      await patch(\"\".concat(this.config.api, \"/user\"), {\n        locale\n      }, this.headers(), {\n        useAPIKey: true\n      });\n      this.updateState({\n        locale\n      });\n      return true;\n    } catch (error) {\n      log.error(\"unable to set locale\", error);\n      return false;\n    }\n  }\n\n  async setSelectedCurrency(payload) {\n    var _this$getAddressState4;\n\n    if (payload.selectedCurrency === ((_this$getAddressState4 = this.getAddressState()) === null || _this$getAddressState4 === void 0 ? void 0 : _this$getAddressState4.selectedCurrency)) return true;\n\n    try {\n      await patch(\"\".concat(this.config.api, \"/user\"), {\n        default_currency: payload.selectedCurrency\n      }, this.headers(), {\n        useAPIKey: true\n      });\n      this.updateState({\n        selectedCurrency: payload.selectedCurrency\n      });\n      return true;\n    } catch (error) {\n      log.error(error);\n      return false;\n    }\n  }\n\n  async addContact(contact) {\n    try {\n      var _this$getAddressState5;\n\n      const response = await post(\"\".concat(this.config.api, \"/contact\"), contact, this.headers(), {\n        useAPIKey: true\n      });\n      this.updateState({\n        contacts: [...(((_this$getAddressState5 = this.getAddressState()) === null || _this$getAddressState5 === void 0 ? void 0 : _this$getAddressState5.contacts) || []), response.data]\n      });\n      return true;\n    } catch (error) {\n      log.error(\"unable to add contact\", error);\n      return false;\n    }\n  }\n\n  async deleteContact(contactId) {\n    try {\n      var _this$getAddressState6;\n\n      const response = await remove(\"\".concat(this.config.api, \"/contact/\").concat(contactId), {}, this.headers(), {\n        useAPIKey: true\n      });\n      const finalContacts = (_this$getAddressState6 = this.getAddressState()) === null || _this$getAddressState6 === void 0 ? void 0 : _this$getAddressState6.contacts.filter(contact => contact.id !== response.data.id);\n      if (finalContacts) this.updateState({\n        contacts: [...finalContacts]\n      });\n      return true;\n    } catch (error) {\n      log.error(\"unable to delete contact\", error);\n      return false;\n    }\n  }\n\n  async revokeDiscord(idToken) {\n    try {\n      const resp = await post(\"\".concat(this.config.api, \"/revoke/discord\"), {\n        token: idToken\n      }, this.headers(), {\n        useAPIKey: true\n      });\n      log.info(resp);\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  async patchPastTx(body, address) {\n    try {\n      const response = await patch(\"\".concat(this.config.api, \"/transaction\"), body, this.headers(address), {\n        useAPIKey: true\n      });\n      log.info(\"successfully patched\", response);\n    } catch (error) {\n      log.error(\"unable to patch tx\", error);\n    }\n  }\n\n  async postPastTx(tx, address) {\n    try {\n      const response = await post(\"\".concat(this.config.api, \"/transaction\"), tx, this.headers(address), {\n        useAPIKey: true\n      });\n      log.info(\"successfully posted tx\", response);\n      return response;\n    } catch (error) {\n      log.error(error, \"unable to insert transaction\");\n    }\n  }\n\n  async getWalletOrders(address) {\n    try {\n      const response = await get(\"\".concat(this.config.api, \"/transaction\"), this.headers(address), {\n        useAPIKey: true\n      });\n      return response.success ? response.data ? response.data : [] : [];\n    } catch (error) {\n      log.error(\"unable to get wallet orders tx\", error);\n      return [];\n    }\n  }\n\n  async getTopUpOrders(address) {\n    try {\n      const response = await get(\"\".concat(this.config.commonApiHost, \"/transaction\"), this.headers(address), {\n        useAPIKey: true\n      });\n      return response.data || [];\n    } catch (error) {\n      log.error(\"unable to fetch past Top up orders\", error);\n    }\n  }\n\n  async getBillBoardData() {\n    try {\n      const response = await get(\"\".concat(this.config.api, \"/billboard\"), this.headers(), {\n        useAPIKey: true\n      });\n      return response.success ? response.data : [];\n    } catch (error) {\n      log.error(\"unable to get billboard data\", error);\n      return [];\n    }\n  }\n\n  async getMessageForSigning(publicAddress) {\n    const response = await post(\"\".concat(this.config.api, \"/auth/message\"), {\n      public_address: publicAddress\n    }, {}, {\n      useAPIKey: true\n    });\n    return response.message;\n  }\n\n  async getTwitterId(payload) {\n    const res = await get(\"\".concat(this.config.api, \"/twitter?screen_name=\").concat(payload.nick), this.headers(), {\n      useAPIKey: true\n    });\n    return \"\".concat(payload.typeOfLogin.toLowerCase(), \"|\").concat(res.data.toString());\n  }\n\n  async sendEmail(payload) {\n    return post(\"\".concat(this.config.api, \"/transaction/sendemail\"), payload.emailObject, this.headers(), {\n      useAPIKey: true\n    });\n  }\n\n  async refreshJwt() {\n    const address = this.state.selectedAddress;\n    const messageToSign = await this.getMessageForSigning(address);\n    if (!messageToSign.startsWith(this.config.signInPrefix)) throw new Error(\"Cannot sign on invalid message\");\n    const signedMessage = this.signAuthMessage(address, messageToSign);\n    const response = await post(\"\".concat(this.config.api, \"/auth/verify\"), {\n      public_address: address,\n      signed_message: signedMessage\n    }, {}, {\n      useAPIKey: true\n    });\n    this.updateState({\n      jwtToken: response.token\n    }, address);\n  }\n\n  async getDappList() {\n    try {\n      const response = await get(\"\".concat(this.config.api, \"/dapps\"), this.headers(), {\n        useAPIKey: true\n      });\n      return response.success ? response.data : [];\n    } catch (error) {\n      log.error(\"unable to get billboard data\", error);\n      return [];\n    }\n  }\n\n  async init(address, userInfo, jwtToken) {\n    let response = {\n      token: jwtToken\n    };\n    if (this.getAddressState(address)) return;\n\n    if (!jwtToken) {\n      const messageToSign = await this.getMessageForSigning(address);\n      if (!messageToSign.startsWith(this.config.signInPrefix)) throw new Error(\"Cannot sign on invalid message\");\n      const signedMessage = this.signAuthMessage(address, messageToSign);\n      response = await post(\"\".concat(this.config.api, \"/auth/verify\"), {\n        public_address: address,\n        signed_message: signedMessage\n      }, {}, {\n        useAPIKey: true\n      });\n    }\n\n    this.updateState({\n      jwtToken: response.token,\n      userInfo\n    }, address);\n  }\n\n  updateState(preferences, address) {\n    const selectedAddress = address || this.state.selectedAddress;\n    const currentState = this.getAddressState(selectedAddress) || cloneDeep(this.defaultPreferences);\n\n    const mergedState = _objectSpread$1(_objectSpread$1({}, currentState), preferences);\n\n    this.update({\n      identities: _objectSpread$1(_objectSpread$1({}, this.state.identities), {}, {\n        [selectedAddress]: mergedState\n      })\n    });\n    return mergedState;\n  }\n\n  headers(address) {\n    var _this$getAddressState7;\n\n    const selectedAddress = address || this.state.selectedAddress;\n    return {\n      headers: {\n        Authorization: \"Bearer \".concat(((_this$getAddressState7 = this.getAddressState(selectedAddress)) === null || _this$getAddressState7 === void 0 ? void 0 : _this$getAddressState7.jwtToken) || \"\"),\n        \"Content-Type\": \"application/json; charset=utf-8\"\n      }\n    };\n  }\n\n}\n\n/**\n * The status of the transaction. Each status represents the state of the transaction internally\n * in the wallet. Some of these correspond with the state of the transaction on the network, but\n * some are wallet-specific.\n */\nvar TransactionStatus;\n\n(function (TransactionStatus) {\n  TransactionStatus[\"approved\"] = \"approved\";\n  TransactionStatus[\"cancelled\"] = \"cancelled\";\n  TransactionStatus[\"confirmed\"] = \"confirmed\";\n  TransactionStatus[\"failed\"] = \"failed\";\n  TransactionStatus[\"finalized\"] = \"finalized\";\n  TransactionStatus[\"processed\"] = \"processed\";\n  TransactionStatus[\"rejected\"] = \"rejected\";\n  TransactionStatus[\"signed\"] = \"signed\";\n  TransactionStatus[\"submitted\"] = \"submitted\";\n  TransactionStatus[\"unapproved\"] = \"unapproved\";\n  TransactionStatus[\"dropped\"] = \"dropped\";\n  TransactionStatus[\"expired\"] = \"expired\";\n})(TransactionStatus || (TransactionStatus = {}));\n\nconst TRANSACTION_TYPES = {\n  CONTRACT_INTERACTION: \"contractInteraction\",\n  DEPLOY_CONTRACT: \"contractDeployment\",\n  STANDARD_TRANSACTION: \"transaction\",\n  STANDARD_PAYMENT_TRANSACTION: \"payment_transaction\" // specific to chains like solana and casper\n\n};\nconst TX_EVENTS = {\n  TX_WARNING: \"tx:warning\",\n  TX_ERROR: \"tx:error\",\n  TX_FAILED: \"tx:failed\",\n  TX_CONFIRMED: \"tx:confirmed\",\n  TX_DROPPED: \"tx:dropped\",\n  TX_EXPIRED: \"tx:expired\",\n  TX_STATUS_UPDATE: \"tx:status_update\",\n  TX_UNAPPROVED: \"tx:unapproved\"\n};\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass BaseTransactionStateManager extends BaseController {\n  constructor(_ref) {\n    let {\n      config,\n      state,\n      getCurrentChainId\n    } = _ref;\n    super({\n      config,\n      state\n    });\n\n    _defineProperty(this, \"getCurrentChainId\", void 0);\n\n    this.defaultConfig = {\n      txHistoryLimit: 40\n    };\n    this.defaultState = {\n      transactions: {},\n      unapprovedTxs: {},\n      currentNetworkTxsList: []\n    };\n    this.initialize();\n    this.getCurrentChainId = getCurrentChainId;\n  }\n\n  getUnapprovedTxList() {\n    const chainId = this.getCurrentChainId();\n    return pickBy(this.state.transactions, transaction => transaction.status === TransactionStatus.unapproved && transactionMatchesNetwork(transaction, chainId));\n  }\n\n  getTransaction(txId) {\n    const {\n      transactions\n    } = this.state;\n    return transactions[txId];\n  }\n\n  updateTransaction(txMeta) {\n    // commit txMeta to state\n    const txId = txMeta.id;\n    txMeta.updated_at = new Date().toISOString();\n    this.update({\n      transactions: _objectSpread(_objectSpread({}, this.state.transactions), {}, {\n        [txId]: txMeta\n      })\n    });\n  }\n\n  setTxStatusRejected(txId) {\n    this._setTransactionStatus(txId, TransactionStatus.rejected);\n\n    this._deleteTransaction(txId);\n  }\n  /**\n   * The implementing controller can override this functionality and add custom logic + call super.()\n   */\n\n\n  setTxStatusUnapproved(txId) {\n    this._setTransactionStatus(txId, TransactionStatus.unapproved);\n  }\n\n  setTxStatusApproved(txId) {\n    this._setTransactionStatus(txId, TransactionStatus.approved);\n  }\n\n  setTxStatusSigned(txId) {\n    this._setTransactionStatus(txId, TransactionStatus.signed);\n  }\n\n  setTxStatusSubmitted(txId) {\n    this._setTransactionStatus(txId, TransactionStatus.submitted);\n  }\n\n  setTxStatusDropped(txId) {\n    this._setTransactionStatus(txId, TransactionStatus.dropped);\n  }\n\n  setTxStatusExpired(txId) {\n    this._setTransactionStatus(txId, TransactionStatus.expired);\n  }\n\n  setTxStatusConfirmed(txId) {\n    this._setTransactionStatus(txId, TransactionStatus.confirmed);\n  }\n\n  setTxStatusFailed(txId, error_) {\n    const error = !error_ ? new Error(\"Internal torus failure\") : error_;\n    const txMeta = this.getTransaction(txId);\n    txMeta.error = error;\n    this.updateTransaction(txMeta);\n\n    this._setTransactionStatus(txId, TransactionStatus.failed);\n  }\n  /**\n   * Method to determine if the transaction is in a final state\n   * @param status - Transaction status\n   * @returns boolean if the transaction is in a final state\n   */\n\n\n  isFinalState(status) {\n    return status === TransactionStatus.rejected || status === TransactionStatus.submitted || status === TransactionStatus.confirmed || status === TransactionStatus.failed || status === TransactionStatus.cancelled || status === TransactionStatus.expired;\n  }\n  /**\n   * Filters out the unapproved transactions from state\n   */\n\n\n  clearUnapprovedTxs() {\n    this.update({\n      transactions: omitBy(this.state.transactions, transaction => transaction.status === TransactionStatus.unapproved)\n    });\n  }\n  /**\n   * will append new transactions to old txns.\n   */\n\n\n  _addTransactionsToState(transactions) {\n    this.update({\n      transactions: transactions.reduce((result, newTx) => {\n        result[newTx.id] = newTx;\n        return result;\n      }, this.state.transactions)\n    });\n  }\n  /**\n   * will set new txns, override existing if any in state.\n   */\n\n\n  _setTransactionsToState(transactions) {\n    this.update({\n      transactions: transactions.reduce((result, newTx) => {\n        result[newTx.id] = newTx;\n        return result;\n      }, {})\n    });\n  }\n\n  _deleteTransaction(targetTransactionId) {\n    const {\n      transactions\n    } = this.state;\n    delete transactions[targetTransactionId];\n    this.update({\n      transactions\n    });\n  }\n\n  _deleteTransactions(targetTransactionIds) {\n    const {\n      transactions\n    } = this.state;\n    targetTransactionIds.forEach(transactionId => {\n      delete transactions[transactionId];\n    });\n    this.update({\n      transactions\n    });\n  }\n\n  _setTransactionStatus(txId, status) {\n    const txMeta = this.getTransaction(txId);\n\n    if (!txMeta) {\n      return;\n    }\n\n    txMeta.status = status; // only updating status so no validation required on txn.\n\n    this.updateTransaction(txMeta);\n    this.emit(TX_EVENTS.TX_STATUS_UPDATE, {\n      txId,\n      status\n    });\n\n    if (this.isFinalState(status)) {\n      this.emit(\"\".concat(txMeta.id, \":finished\"), txMeta);\n    } else {\n      this.emit(\"\".concat(txMeta.id, \":\").concat(status), txId);\n    }\n  }\n\n}\n\nexport { ACCOUNT_CATEGORY, ACTIVITY_ACTION, ACTIVITY_ACTION_ALL, ACTIVITY_ACTION_RECEIVE, ACTIVITY_ACTION_SEND, ACTIVITY_ACTION_TOPUP, ACTIVITY_PERIOD_ALL, ACTIVITY_PERIOD_MONTH_ONE, ACTIVITY_PERIOD_MONTH_SIX, ACTIVITY_PERIOD_WEEK_ONE, ACTIVITY_STATUS_CANCELLED, ACTIVITY_STATUS_CANCELLING, ACTIVITY_STATUS_PENDING, ACTIVITY_STATUS_SUCCESSFUL, ACTIVITY_STATUS_UNSUCCESSFUL, BROADCAST_CHANNELS, BROADCAST_CHANNELS_MSGS, BaseBlockTracker, BaseController, BaseCurrencyController, BaseEmbedController, BaseKeyringController, BasePreferencesController, BaseTransactionStateManager, BroadcastChannelHandler, COMMUNICATION_JRPC_METHODS, COMMUNICATION_NOTIFICATIONS, CommunicationWindowManager, DEFAULT_PREFERENCES, FEATURES_CONFIRM_WINDOW, FEATURES_DEFAULT_POPUP_WINDOW, FEATURES_DEFAULT_WALLET_WINDOW, FEATURES_PROVIDER_CHANGE_WINDOW, LOGIN_PROVIDER, PAYMENT_PROVIDER, POPUP_LOADED, POPUP_RESULT, PROVIDER_JRPC_METHODS, PROVIDER_NOTIFICATIONS, PopupHandler, PopupStoreChannel, PopupWithBcHandler, RedirectHandler, SETUP_COMPLETE, StreamWindow, TRANSACTION_TYPES, TX_EVENTS, TransactionStatus, UserError, addressSlicer, broadcastChannelOptions, concatSig, createChangeProviderMiddlewareMiddleware, createCommunicationMiddleware, createEventEmitterProxy, createFetchConfigFromReq, createFetchMiddleware, createGenericJRPCMiddleware, createLoggerMiddleware, createOriginMiddleware, createRandomId, createSwappableProxy, createTopupMiddleware, formatDate, formatSmallNumbers, formatTime, getCustomDeviceInfo, getPopupFeatures, getTxStatusText, handleRedirectParameters, hashMessage, intToHex, padWithZeroes, providerAsMiddleware, providerFromEngine, providerFromMiddleware, randomId, signMessage, significantDigits, timeout$1 as timeout, transactionMatchesNetwork };\n//# sourceMappingURL=baseControllers.esm.js.map\n"]},"metadata":{},"sourceType":"module"}