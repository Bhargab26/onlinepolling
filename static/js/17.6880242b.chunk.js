(this["webpackJsonptwitter-clone"]=this["webpackJsonptwitter-clone"]||[]).push([[17],{1604:function(e,t,n){"use strict";n.r(t),n.d(t,"OpenloginAdapter",(function(){return y})),n.d(t,"getOpenloginDefaultOptions",(function(){return C}));var i=n(1),r=n(11),a=n(6),o=n(7),c=n(12),s=n(45),h=n(35),u=n(9),l=n(10),p=n(93),d=n(13),g=n(14),f=n.n(g),v=n(140),b=n.n(v),O=n(29),j=n.n(O),C=function(e,t){return{adapterSettings:{network:p.b.MAINNET,clientId:"",uxMode:p.c.POPUP},chainConfig:e?Object(d.m)(e,t):void 0,loginSettings:{relogin:!0}}};function N(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function w(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?N(Object(n),!0).forEach((function(t){f()(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):N(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var y=function(e){Object(u.a)(g,e);var t=Object(l.a)(g);function g(e){var n,i,r,o;Object(a.a)(this,g),n=t.call(this),f()(Object(c.a)(n),"name",d.i.OPENLOGIN),f()(Object(c.a)(n),"adapterNamespace",d.c.MULTICHAIN),f()(Object(c.a)(n),"type",d.a.IN_APP),f()(Object(c.a)(n),"openloginInstance",null),f()(Object(c.a)(n),"status",d.d.NOT_READY),f()(Object(c.a)(n),"currentChainNamespace",d.f.EIP155),f()(Object(c.a)(n),"openloginOptions",void 0),f()(Object(c.a)(n),"loginSettings",{}),f()(Object(c.a)(n),"privKeyProvider",null),j.a.debug("const openlogin adapter",e);var s=C(null===(i=e.chainConfig)||void 0===i?void 0:i.chainNamespace,null===(r=e.chainConfig)||void 0===r?void 0:r.chainId);if(n.openloginOptions=w(w({clientId:"",network:p.b.MAINNET},s.adapterSettings),e.adapterSettings||{}),n.loginSettings=w(w({},s.loginSettings),e.loginSettings),null!==(o=e.chainConfig)&&void 0!==o&&o.chainNamespace){var h;n.currentChainNamespace=null===(h=e.chainConfig)||void 0===h?void 0:h.chainNamespace;var u=s.chainConfig?s.chainConfig:{};if(n.chainConfig=w(w({},u),null===e||void 0===e?void 0:e.chainConfig),j.a.debug("const openlogin chainConfig",n.chainConfig),!n.chainConfig.rpcTarget)throw d.j.invalidParams("rpcTarget is required in chainConfig")}return n}return Object(o.a)(g,[{key:"chainConfigProxy",get:function(){return this.chainConfig?w({},this.chainConfig):null}},{key:"provider",get:function(){var e;return(null===(e=this.privKeyProvider)||void 0===e?void 0:e.provider)||null},set:function(e){throw new Error("Not implemented")}},{key:"init",value:function(){var e=Object(r.a)(Object(i.a)().mark((function e(t){var n,r,a;return Object(i.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(Object(s.a)(Object(h.a)(g.prototype),"checkInitializationRequirements",this).call(this),null!==(n=this.openloginOptions)&&void 0!==n&&n.clientId){e.next=3;break}throw d.j.invalidParams("clientId is required before openlogin's initialization");case 3:if(this.chainConfig){e.next=5;break}throw d.j.invalidParams("chainConfig is required before initialization");case 5:return this.openloginInstance=new p.d(this.openloginOptions),r=Object(p.e)(),a=!0,Object.keys(r).length>0&&r.result&&(a=!0),e.next=11,this.openloginInstance.init();case 11:if(this.status=d.d.READY,this.emit(d.b.READY,d.i.OPENLOGIN),e.prev=13,!this.openloginInstance.privKey||!t.autoConnect&&!a){e.next=17;break}return e.next=17,this.connect();case 17:e.next=23;break;case 19:e.prev=19,e.t0=e.catch(13),j.a.error("Failed to connect with cached openlogin provider",e.t0),this.emit("ERRORED",e.t0);case 23:case"end":return e.stop()}}),e,this,[[13,19]])})));return function(t){return e.apply(this,arguments)}}()},{key:"connect",value:function(){var e=Object(r.a)(Object(i.a)().mark((function e(t){return Object(i.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return Object(s.a)(Object(h.a)(g.prototype),"checkConnectionRequirements",this).call(this),this.status=d.d.CONNECTING,this.emit(d.b.CONNECTING,w(w({},t),{},{adapter:d.i.OPENLOGIN})),e.prev=3,e.next=6,this.connectWithProvider(t);case 6:return e.abrupt("return",this.provider);case 9:if(e.prev=9,e.t0=e.catch(3),j.a.error("Failed to connect with openlogin provider",e.t0),this.status=d.d.READY,this.emit(d.b.ERRORED,e.t0),null===e.t0||void 0===e.t0||!e.t0.message.includes("user closed popup")){e.next=16;break}throw d.k.popupClosed();case 16:throw d.k.connectionError("Failed to login with openlogin");case 17:case"end":return e.stop()}}),e,this,[[3,9]])})));return function(t){return e.apply(this,arguments)}}()},{key:"disconnect",value:function(){var e=Object(r.a)(Object(i.a)().mark((function e(){var t,n=arguments;return Object(i.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t=n.length>0&&void 0!==n[0]?n[0]:{cleanup:!1},this.status===d.d.CONNECTED){e.next=3;break}throw d.k.notConnectedError("Not connected with wallet");case 3:if(this.openloginInstance){e.next=5;break}throw d.j.notReady("openloginInstance is not ready");case 5:return e.next=7,this.openloginInstance.logout();case 7:t.cleanup?(this.status=d.d.NOT_READY,this.openloginInstance=null,this.privKeyProvider=null):this.status=d.d.READY,this.emit(d.b.DISCONNECTED);case 9:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}()},{key:"getUserInfo",value:function(){var e=Object(r.a)(Object(i.a)().mark((function e(){var t;return Object(i.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(this.status===d.d.CONNECTED){e.next=2;break}throw d.k.notConnectedError("Not connected with wallet");case 2:if(this.openloginInstance){e.next=4;break}throw d.j.notReady("openloginInstance is not ready");case 4:return e.next=6,this.openloginInstance.getUserInfo();case 6:return t=e.sent,e.abrupt("return",t);case 8:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}()},{key:"setAdapterSettings",value:function(e){if(this.status!==d.d.READY){var t=C();this.openloginOptions=w(w(w({},t.adapterSettings),this.openloginOptions||{}),e)}}},{key:"setChainConfig",value:function(e){Object(s.a)(Object(h.a)(g.prototype),"setChainConfig",this).call(this,e),this.currentChainNamespace=e.chainNamespace}},{key:"connectWithProvider",value:function(){var e=Object(r.a)(Object(i.a)().mark((function e(t){var r,a,o,c,s,h,u;return Object(i.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(this.chainConfig){e.next=2;break}throw d.j.invalidParams("chainConfig is required before initialization");case 2:if(this.openloginInstance){e.next=4;break}throw d.j.notReady("openloginInstance is not ready");case 4:if(this.currentChainNamespace!==d.f.SOLANA){e.next=12;break}return e.next=7,Promise.all([n.e(0),n.e(1),n.e(2),n.e(3),n.e(11)]).then(n.bind(null,1408));case 7:r=e.sent,a=r.SolanaPrivateKeyProvider,this.privKeyProvider=new a({config:{chainConfig:this.chainConfig}}),e.next=21;break;case 12:if(this.currentChainNamespace!==d.f.EIP155){e.next=20;break}return e.next=15,Promise.all([n.e(0),n.e(1),n.e(4),n.e(14)]).then(n.bind(null,1433));case 15:o=e.sent,c=o.EthereumPrivateKeyProvider,this.privKeyProvider=new c({config:{chainConfig:this.chainConfig}}),e.next=21;break;case 20:throw new Error("Invalid chainNamespace: ".concat(this.currentChainNamespace," found while connecting to wallet"));case 21:if(this.openloginInstance.privKey||!t){e.next=24;break}return e.next=24,this.openloginInstance.login(b()(this.loginSettings,{loginProvider:t.loginProvider},{extraLoginOptions:{login_hint:null===t||void 0===t?void 0:t.login_hint}}));case 24:if(!(s=this.openloginInstance.privKey)){e.next=36;break}if(this.currentChainNamespace!==d.f.SOLANA){e.next=32;break}return e.next=29,Promise.all([n.e(2),n.e(15)]).then(n.bind(null,1596));case 29:h=e.sent,u=h.getED25519Key,s=u(s).sk.toString("hex");case 32:return e.next=34,this.privKeyProvider.setupProvider(s);case 34:this.status=d.d.CONNECTED,this.emit(d.b.CONNECTED,{adapter:d.i.OPENLOGIN,reconnected:!t});case 36:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}()}]),g}(d.e)}}]);
//# sourceMappingURL=17.6880242b.chunk.js.map