{"version":3,"sources":["../node_modules/bs58/index.js","../../src/rpc/solanaRpcMiddlewares.ts","../../src/providers/injectedProviders/injectedProviderProxy.ts","../../src/providers/injectedProviders/phantom/providerHandlers.ts","../../src/providers/injectedProviders/phantom/phantomInjectedProvider.ts","../../src/providers/injectedProviders/torus/providerHandlers.ts","../../src/providers/injectedProviders/torus/torusInjectedProvider.ts","../../src/rpc/JrpcClient.ts","../../src/providers/privateKeyProvider/solanaPrivateKeyUtils.ts","../../src/providers/privateKeyProvider/solanaPrivateKeyProvider.ts","../../src/solanaWallet.ts","../../src/Layout.ts","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../src/utils.ts","../../src/error.ts","../../src/struct.ts","../../src/structs/utilities.ts","../../src/structs/types.ts","../node_modules/@babel/runtime/helpers/esm/toArray.js","../../src/structs/coercions.ts","../../src/util/to-buffer.ts","../../node_modules/minimalistic-assert/index.js","../../node_modules/inherits/inherits_browser.js","../../node_modules/hash.js/lib/hash/utils.js","../../node_modules/hash.js/lib/hash/common.js","../../node_modules/hash.js/lib/hash/sha/common.js","../../node_modules/hash.js/lib/hash/sha/1.js","../../node_modules/hash.js/lib/hash/sha/256.js","../../node_modules/hash.js/lib/hash/sha/224.js","../../node_modules/hash.js/lib/hash/sha/512.js","../../node_modules/hash.js/lib/hash/sha/384.js","../../node_modules/hash.js/lib/hash/sha.js","../../node_modules/hash.js/lib/hash/ripemd.js","../../node_modules/hash.js/lib/hash/hmac.js","../../node_modules/hash.js/lib/hash.js","../../node_modules/@ethersproject/logger/lib.esm/index.js","../../node_modules/@ethersproject/logger/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/index.js","../../node_modules/@ethersproject/sha2/lib.esm/sha2.js","../../node_modules/@ethersproject/sha2/lib.esm/_version.js","../../src/util/borsh-schema.ts","../../src/publickey.ts","../../src/bpf-loader-deprecated.ts","../../src/transaction-constants.ts","../../src/layout.ts","../../src/util/shortvec-encoding.ts","../../src/message.ts","../../src/transaction.ts","../../src/util/assert.ts","../../src/sysvar.ts","../../src/util/send-and-confirm-transaction.ts","../../src/util/sleep.ts","../../src/instruction.ts","../../src/fee-calculator.ts","../../src/util/bigint.ts","../../src/nonce-account.ts","../../src/system-program.ts","../../src/loader.ts","../../src/bpf-loader.ts","../../src/compute-budget.ts","../../node_modules/fast-stable-stringify/index.js","../../src/errors.ts","../../src/__forks__/browser/fetch-impl.ts","../../src/util/tx-expiry-custom-errors.ts","../../src/connection.ts","../../src/keypair.ts","../../src/ed25519-program.ts","../../src/stake-program.ts","../../src/secp256k1-program.ts","../../src/validator-info.ts","../../src/vote-account.ts","../../src/vote-program.ts","../node_modules/@solana/web3.js/node_modules/tweetnacl/nacl-fast.js","../node_modules/@solana/web3.js/node_modules/bn.js/lib/bn.js","../node_modules/base-x/src/index.js","../node_modules/borsh/lib/index.js","../node_modules/borsh/node_modules/bn.js/lib/bn.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../node_modules/bigint-buffer/dist/browser.js","../node_modules/rpc-websockets/dist/index.browser.js","../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../node_modules/rpc-websockets/dist/lib/client.js","../node_modules/jayson/lib/client/browser/index.js","../node_modules/jayson/lib/generateRequest.js"],"names":["basex","require","module","exports","createGetAccountsMiddleware","getAccounts","createAsyncMiddleware","method","next","accounts","response","createRequestAccountsMiddleware","requestAccounts","Error","createGenericJRPCMiddleware","targetMethod","handler","result","createSolanaMiddleware","providerHandlers","getPrivateKey","mergeMiddleware","createInjectedProviderProxyMiddleware","provider","res","getPhantomHandlers","injectedProvider","bs58","ethErrors","signTransaction","message","req","txn","Transaction","transaction","signMessage","params","signAndSendTransaction","txRes","signature","signAllTransactions","txns","msg","decodedMsg","PhantomInjectedProvider","constructor","state","config","chainConfig","chainNamespace","CHAIN_NAMESPACES","SOLANA","switchChain","Promise","setupProvider","solanaMiddleware","injectedProviderProxy","engine","providerFromEngine","lookupNetwork","chainId","BaseProvider","getTorusHandlers","data","buf","Buffer","sendTx","messages","TorusInjectedProvider","code","connectedChainId","connectedHexChainId","isHexStrict","parseInt","WalletInitializationError","setupEngine","handleInjectedProviderUpdate","createChainIdMiddleware","end","createProviderConfigMiddleware","providerConfig","createJsonRpcClient","rpcTarget","fetchMiddleware","createFetchMiddleware","networkMiddleware","getProviderEngineProxy","transactionGenerator","serializedTx","decodedTx","Message","keyPairGenerator","Keypair","keyPair","signedMsg","nacl","_providerEngineProxy","sig","signedTransactions","SolanaPrivateKeyProvider","enable","getProviderHandlers","privKey","updateAccount","health","getChainSwitchMiddleware","chainSwitchHandlers","addNewChainConfig","nativeCurrency","rpcUrls","ticker","tickerName","displayName","blockExplorer","switchSolanaChain","createChainSwitchMiddleware","getAccountMiddleware","accountHandlers","updatePrivatekey","privateKey","createAccountMiddleware","providerFactory","SolanaWallet","requireAllSignatures","signedTransaction","request","Layout","n","b","discr","span","this","offset","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","arguments","forEach","defineProperty","getOwnPropertyDescriptors","defineProperties","toFailures","run","StructError","failure","failures","rest","path","cached","TypeError","isObject","x","print","value","JSON","shiftIterator","input","done","undefined","toFailure","context","struct","branch","type","refinement","Symbol","r","options","coerce","mask","ctx","Array","valid","ts","v","s","k","t","Struct","props","coercer","entries","schema","validator","refiner","assert","create","is","validate","tuples","tuple","error","f","define","name","array","Element","boolean","instance","Class","literal","constant","description","never","nullable","number","isNaN","optional","record","Key","Value","string","Elements","Never","Math","union","Structs","arr","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","unknown","condition","toBuffer","val","equal","l","inherits_browserModule","ctor","superCtor","super_","writable","configurable","TempCtor","require$$0","require$$1","isSurrogatePair","charCodeAt","htonl","w","zero2","word","zero8","utils","enc","isArray","slice","replace","p","c","toString","endian","start","len","m","a","d","e","pos","ah","al","bh","lo","hi","bl","ch","cl","dh","dl","carry","eh","el","num","BlockHash","pending","pendingTotal","blockSize","outSize","hmacStrength","padLength","_delta8","_delta32","common","update","toArray","concat","join32","_update","digest","_pad","_digest","bytes","rotr32","ch32","y","z","maj32","p32","shaCommon","require$$2","rotl32","sum32","sum32_5","ft_1","sha1_K","SHA1","h","W","inherits","toHex32","split32","require$$3","sum32_4","s0_256","s1_256","g0_256","g1_256","sha256_K","SHA256","g","T1","T2","SHA224","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","sha512_K","SHA512","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","SHA384","require$$4","sum32_3","RIPEMD160","j","K","Kh","A","B","C","D","E","Ah","Bh","Ch","Dh","Eh","T","rh","sh","Hmac","hash","Hash","inner","outer","_init","sha","ripemd","hmac","sha1","sha256","sha224","sha384","sha512","ripemd160","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","off","_logLevel","_globalLogger","LogLevel","ErrorCode","_normalizeError","missing","form","normalize","join","String","fromCharCode","_checkNormalize","HEX","version","logLevel","args","level","toLowerCase","throwArgumentError","console","log","_log","Logger","levels","DEBUG","INFO","WARNING","makeError","errors","UNKNOWN_ERROR","messageDetails","Uint8Array","hex","stringify","reason","url","NUMERIC_FAULT","fault","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","throwError","INVALID_ARGUMENT","argument","UNSUPPORTED_OPERATION","operation","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","kind","censorship","permanent","globalLogger","warn","logger","addSlice","isInteger","arrayify","checkSafeUint53","unshift","allowMissingPrefix","substring","toHexString","isHexable","match","isHexString","hexPad","isBytes","encode","serialize","SOLANA_SCHEMA","decode","deserialize","decodeUnchecked","deserializeUnchecked","Map","_bn","isPublicKeyData","decoded","equals","eq","publicKey","toBase58","toJSON","toBytes","toArrayLike","zeroPad","createWithSeed","buffer","fromPublicKey","programId","PublicKey","createProgramAddressSync","seeds","seed","publicKeyBytes","is_on_curve","createProgramAddress","findProgramAddressSync","nonce","seedsWithNonce","address","err","findProgramAddress","isOnCurve","default","fields","naclLowLevel","chk","den","den2","den4","den6","neq25519","gf1","I","PACKET_DATA_SIZE","property","BufferLayout","rustString","rsl","_decode","_encode","rslShim","chars","str","decodeLength","size","elem","encodeLength","rem_len","header","accountKeys","recentBlockhash","instructions","indexToProgramIds","account","ix","isAccountSigner","index","isAccountWritable","numRequiredSignatures","isProgramId","has","programIds","nonProgramIds","numKeys","keyCount","shortvec","map","instruction","programIdIndex","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","signDataLayout","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","signData","from","byteArray","accountCount","dataSlice","TransactionStatus","DEFAULT_SIGNATURE","opts","isWritable","pubkey","isSigner","signatures","feePayer","lastValidBlockHeight","nonceInfo","_message","_json","newOpts","oldOpts","nonceInstruction","signers","add","items","item","compileMessage","accountMetas","accountMeta","uniqueMetas","pubkeyString","uniqueIndex","feePayerIndex","payerMeta","signedKeys","unsignedKeys","meta","invariant","keyIndex","_compile","every","pair","serializeMessage","getEstimatedFee","connection","setSigners","seen","sign","uniqueSigners","signer","_partialSign","partialSign","addSignature","_addSignature","findIndex","sigpair","verifySignatures","_verifySignatures","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendOptions","skipPreflight","preflightCommitment","maxRetries","blockhash","status","sleep","ms","resolve","setTimeout","encodeData","allocLength","alloc","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","u64","layout","blob","encodeDecode","bigIntLayout","src","toBigIntLE","toBufferLE","bigInt","SYSTEM_INSTRUCTION_LAYOUTS","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","UpgradeNonceAccount","createAccount","lamports","space","transfer","BigInt","assign","base","createAccountWithSeed","createNonceAccount","SystemProgram","fromPubkey","newAccountPubkey","basePubkey","initParams","noncePubkey","authorizedPubkey","nonceInitialize","authorized","instructionData","nonceAdvance","nonceWithdraw","nonceAuthorize","allocate","getMinNumSignatures","Loader","load","balanceNeeded","program","programInfo","accountPubkey","payer","toPubkey","sendAndConfirmTransaction","commitment","dataLayout","chunkSize","transactions","bytesLength","bytesLengthPadding","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","requestUnits","requestHeapFrame","setComputeUnitLimit","setComputeUnitPrice","microLamports","ComputeBudgetProgram","globalThis","TransactionExpiredBlockheightExceededError","timeoutSeconds","TransactionExpiredTimeoutError","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","createRpcResult","pick","jsonrpc","id","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","slot","notificationResultAndContext","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetEpochInfoResult","epoch","effectiveSlot","amount","postBalance","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","logs","executable","owner","rentEpoch","unitsConsumed","byIdentity","range","firstSlot","lastSlot","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","ParsedAccountDataResult","parsed","AccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","ProgramAccountInfoResult","active","inactive","memo","blockTime","subscription","SlotInfoResult","parent","root","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","VoteAccountInfoResult","gossip","tpu","rpc","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","ConfirmationStatus","current","delinquent","SignatureStatusResponse","confirmations","confirmationStatus","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","ParsedConfirmedTransactionMetaResult","LogsResult","previousBlockhash","parentSlot","rewards","rewardType","feeCalculator","lamportsPerSignature","numTransactions","numSlots","samplePeriodSecs","_keypair","keypair","secretKey","generate","fromSecretKey","encoder","fromSeed","ED25519_INSTRUCTION_LAYOUT","createInstructionWithPublicKey","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","Ed25519Program","createInstructionWithPrivateKey","STAKE_CONFIG_ID","unixTimestamp","custodian","Lockup","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","Staker","Withdrawer","initialize","lockup","staker","withdrawer","stakePubkey","delegate","authorize","custodianPubkey","newAuthorized","newAuthorizedPubkey","stakeAuthorizationType","authorizeWithSeed","authoritySeed","authorityOwner","splitInstruction","split","splitWithSeed","splitStakePubkey","merge","withdraw","deactivate","StakeProgram","ecdsaSign","SECP256K1_INSTRUCTION_LAYOUT","publicKeyToEthAddress","sha3","Secp256k1Program","ethAddress","recoveryId","createInstructionWithEthAddress","rawAddress","ethAddressOffset","ethAddressInstructionIndex","pkey","publicKeyCreate","messageHash","recid","website","details","keybaseUsername","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","Voter","initializeAccount","voteInit","authorizedVoter","authorizedWithdrawer","voteAuthorizationType","VoteProgram","gf","init","Float64Array","randombytes","_0","_9","gf0","_121665","D2","X","Y","ts64","vn","xi","yi","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","out","inp","o","u","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","t0","t1","t2","t3","t4","t5","t6","t7","Uint16Array","pad","leftover","fin","crypto_onetimeauth","outpos","finish","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","floor","sel25519","q","pack25519","par25519","unpack25519","Z","M","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","S","inv25519","pow2523","crypto_scalarmult","x32","subarray","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","mac","macpos","want","crypto_box_afternm","crypto_box_open_afternm","crypto_hashblocks_hl","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","th","tl","wh","Int32Array","wl","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","crypto_hash","cswap","pack","tx","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","L","modL","reduce","crypto_sign","sm","smlen","crypto_sign_open","unpackneg","crypto_secretbox_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","checkLengths","checkArrayTypes","cleanup","lowlevel","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","randomBytes","secretbox","open","box","keyLength","nonceLength","overheadLength","scalarMult","scalarLength","groupElementLength","before","checkBoxLengths","after","publicKeyLength","secretKeyLength","sharedKeyLength","tmp","mlen","detached","verify","seedLength","signatureLength","hashLength","setPRNG","fn","crypto","self","msCrypto","getRandomValues","min","BN","isBN","negative","words","red","wordSize","window","parseHex4Bits","parseHexByte","lowerBound","parseBase","mul","move","dest","max","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","ceil","_strip","limbLen","limbPow","mod","imuln","_iaddn","pow","copy","_move","clone","_expand","_normSign","for","inspect","zeros","groupSizes","groupBases","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","smallMulTo","ncarry","rword","maxJ","ArrayType","byteLength","reqLength","allocUnsafe","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","sub","comb10MulTo","mid","a0","a1","a2","a3","a4","a5","a6","a7","a8","al8","ah8","a9","al9","ah9","bl8","bh8","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","andln","acc","modn","egcd","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","strip","output","outLen","prev","mod3","one","nOne","lpow","inv","wnd","currentLen","mont","_Buffer","ALPHABET","BASE_MAP","charAt","xc","BASE","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","it3","it4","vch","fill","isBuffer","pbegin","pend","b58","it1","it2","repeat","__createBinding","k2","get","__setModuleDefault","__decorate","decorators","desc","Reflect","decorate","__importStar","__esModule","hasOwnProperty","__importDefault","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","encoding","textDecoder","TextDecoder","fatal","INITIAL_LENGTH","fieldPath","originalMessage","fieldName","splice","maybeResize","writeUInt8","writeUInt16LE","writeUInt32LE","writeBuffer","writeU32","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","RangeError","readUInt8","readUInt16LE","readUInt32LE","readBuffer","readU32","capitalizeFirstLetter","toUpperCase","serializeField","fieldType","writer","writeFixedArray","writeArray","writeU8","serializeStruct","addToFieldPath","obj","borshSerialize","structSchema","field","idx","values","deserializeField","reader","readFixedArray","readArray","readU8","set","deserializeStruct","classType","borshDeserialize","fieldValue","Writer","Reader","inRange","ToDictionary","Stream","tokens","endOfStream","read","prepend","token","pop","finished","decoderError","opt_code_point","DEFAULT_ENCODING","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","TextEncoder","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","UTF8Encoder","temp","ArrayBuffer","byteOffset","input_stream","code_points","cp","codePointsToString","opt_string","stringToCodePoints","reversed","reverse","toBigIntBE","padStart","toBufferBE","_interopRequireDefault","Client","_createClass2","_classCallCheck2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_websocket","_createSuper","Derived","hasNativeReflectConstruct","construct","sham","Proxy","valueOf","_isNativeReflectConstruct","Super","NewTarget","_CommonClient","_super","_ref","_ref$autoconnect","autoconnect","_ref$reconnect","reconnect","_ref$reconnect_interv","reconnect_interval","_ref$max_reconnects","max_reconnects","generate_request_id","WebSocketBrowserImpl","_EventEmitter","protocols","_this","socket","WebSocket","onopen","emit","onmessage","event","onerror","onclose","optionsOrCallback","callback","cb","send","close","listener","addEventListener","EventEmitter","_regenerator","_asyncToGenerator2","_typeof2","_eventemitter","__rest","CommonClient","webSocketFactory","_a","_a$autoconnect","_a$reconnect","_a$reconnect_interval","_a$max_reconnects","rest_options","queue","rpc_id","ready","current_reconnects","_connect","timeout","ws_opts","_this2","reject","promise","_login","mark","_callee","resp","wrap","_context","sent","abrupt","stop","_x","_listMethods","_callee2","_context2","_this3","_subscribe","_callee3","_context3","_x2","_unsubscribe","_callee4","_context4","_x3","_this4","parse","notification","listeners","then","clearTimeout","_ref2","uuid","v4","generateRequest","ClientBrowser","callServer","reviver","replacer","generator","notificationIdNull","isBatch","hasCallback","_parseResponse","responseText","isError"],"mappings":"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","file":"static/js/3.05327447.chunk.js","sourcesContent":["var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { providerFromEngine, createFetchMiddleware } from '@toruslabs/base-controllers';\nimport { mergeMiddleware, createAsyncMiddleware, JRPCEngine } from '@toruslabs/openlogin-jrpc';\nimport { CHAIN_NAMESPACES, isHexStrict, WalletInitializationError } from '@web3auth/base';\nimport { BaseProvider } from '@web3auth/base-provider';\nimport { Transaction, Keypair, Message } from '@solana/web3.js';\nimport bs58 from 'bs58';\nimport { ethErrors } from 'eth-rpc-errors';\nimport nacl from '@toruslabs/tweetnacl-js';\n\nfunction createGetAccountsMiddleware(_ref) {\n  let {\n    getAccounts\n  } = _ref;\n  return createAsyncMiddleware(async (request, response, next) => {\n    const {\n      method\n    } = request;\n    if (method !== \"getAccounts\") return next();\n    if (!getAccounts) throw new Error(\"WalletMiddleware - opts.getAccounts not provided\"); // This calls from the prefs controller\n\n    const accounts = await getAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\nfunction createRequestAccountsMiddleware(_ref2) {\n  let {\n    requestAccounts\n  } = _ref2;\n  return createAsyncMiddleware(async (request, response, next) => {\n    const {\n      method\n    } = request;\n    if (method !== \"requestAccounts\") return next();\n    if (!requestAccounts) throw new Error(\"WalletMiddleware - opts.requestAccounts not provided\"); // This calls the UI login function\n\n    const accounts = await requestAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\nfunction createGenericJRPCMiddleware(targetMethod, handler) {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const {\n      method\n    } = request;\n    if (method !== targetMethod) return next();\n    if (!handler) throw new Error(\"WalletMiddleware - \".concat(targetMethod, \" not provided\"));\n    const result = await handler(request);\n    response.result = result;\n    return undefined;\n  });\n}\nfunction createSolanaMiddleware(providerHandlers) {\n  const {\n    getAccounts,\n    requestAccounts,\n    signTransaction,\n    signAndSendTransaction,\n    signAllTransactions,\n    signMessage,\n    getPrivateKey\n  } = providerHandlers;\n  return mergeMiddleware([createRequestAccountsMiddleware({\n    requestAccounts\n  }), createGetAccountsMiddleware({\n    getAccounts\n  }), createGenericJRPCMiddleware(\"signTransaction\", signTransaction), createGenericJRPCMiddleware(\"signAndSendTransaction\", signAndSendTransaction), createGenericJRPCMiddleware(\"signAllTransactions\", signAllTransactions), createGenericJRPCMiddleware(\"signMessage\", signMessage), createGenericJRPCMiddleware(\"solanaPrivateKey\", getPrivateKey)]);\n}\nfunction createChainSwitchMiddleware(_ref3) {\n  let {\n    addNewChainConfig,\n    switchSolanaChain\n  } = _ref3;\n  return mergeMiddleware([createGenericJRPCMiddleware(\"addSolanaChain\", addNewChainConfig), createGenericJRPCMiddleware(\"switchSolanaChain\", switchSolanaChain)]);\n}\nfunction createAccountMiddleware(_ref4) {\n  let {\n    updatePrivatekey\n  } = _ref4;\n  return mergeMiddleware([createGenericJRPCMiddleware(\"updateAccount\", updatePrivatekey)]);\n}\n\nfunction ownKeys$3(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$3(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$3(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction createInjectedProviderProxyMiddleware(provider) {\n  return createAsyncMiddleware(async (req, res, _next) => {\n    const result = await provider.request(_objectSpread$3({}, req));\n    res.result = result;\n  });\n}\n\nconst getPhantomHandlers = injectedProvider => {\n  const providerHandlers = {\n    requestAccounts: async () => {\n      return injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : [];\n    },\n    getAccounts: async () => injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : [],\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async req => {\n      const message = bs58.decode(req.params.message);\n      const txn = Transaction.from(message);\n      const transaction = await injectedProvider.signTransaction(txn);\n      return transaction;\n    },\n    signMessage: async req => {\n      var _req$params;\n\n      const message = await injectedProvider.request({\n        method: \"signMessage\",\n        params: {\n          message: (_req$params = req.params) === null || _req$params === void 0 ? void 0 : _req$params.message\n        }\n      });\n      return message;\n    },\n    signAndSendTransaction: async req => {\n      const message = bs58.decode(req.params.message);\n      const txn = Transaction.from(message);\n      const txRes = await injectedProvider.signAndSendTransaction(txn);\n      return {\n        signature: txRes.signature\n      };\n    },\n    signAllTransactions: async req => {\n      var _req$params2, _req$params3;\n\n      if (!((_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.message) || !((_req$params3 = req.params) !== null && _req$params3 !== void 0 && _req$params3.message.length)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const txns = req.params.message.map(msg => {\n        const decodedMsg = bs58.decode(msg);\n        return Transaction.from(decodedMsg);\n      });\n      const transaction = await injectedProvider.signAllTransactions(txns);\n      return transaction;\n    }\n  };\n  return providerHandlers;\n};\n\nfunction ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass PhantomInjectedProvider extends BaseProvider {\n  constructor(_ref) {\n    let {\n      config,\n      state\n    } = _ref;\n    super({\n      config: {\n        chainConfig: _objectSpread$2(_objectSpread$2({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.SOLANA\n        })\n      },\n      state\n    });\n  }\n\n  async switchChain(_) {\n    return Promise.resolve();\n  }\n\n  async setupProvider(injectedProvider) {\n    const providerHandlers = getPhantomHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    const injectedProviderProxy = createInjectedProviderProxyMiddleware(injectedProvider);\n    const engine = new JRPCEngine();\n    engine.push(solanaMiddleware);\n    engine.push(injectedProviderProxy);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork(injectedProvider);\n  }\n\n  async lookupNetwork(_) {\n    const {\n      chainConfig\n    } = this.config;\n    this.update({\n      chainId: chainConfig.chainId\n    });\n    return chainConfig.chainId || \"\"; // const genesisHash = await phantomProvider.request<string>({\n    //   method: \"getGenesisHash\",\n    //   params: [],\n    // });\n    // const { chainConfig } = this.config;\n    // if (!genesisHash) throw WalletInitializationError.rpcConnectionError(`Failed to connect with phantom wallet`);\n    // if (chainConfig.chainId !== genesisHash.substring(0, 32))\n    //   throw WalletInitializationError.invalidNetwork(\n    //     `Wallet is connected to wrong network,Please change your network to ${\n    //       SOLANA_NETWORKS[chainConfig.chainId] || chainConfig.displayName\n    //     } from phantom wallet extention.`\n    //   );\n    // return genesisHash.substring(0, 32);\n  }\n\n}\n\nconst getTorusHandlers = injectedProvider => {\n  const providerHandlers = {\n    requestAccounts: async () => {\n      const accounts = await injectedProvider.request({\n        method: \"solana_requestAccounts\",\n        params: {}\n      });\n      return accounts;\n    },\n    getAccounts: async () => {\n      const accounts = await injectedProvider.request({\n        method: \"solana_accounts\",\n        params: {}\n      });\n      return accounts;\n    },\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signMessage: async req => {\n      var _req$params;\n\n      const message = await injectedProvider.request({\n        method: \"sign_message\",\n        params: {\n          data: (_req$params = req.params) === null || _req$params === void 0 ? void 0 : _req$params.message\n        }\n      });\n      return message;\n    },\n    signTransaction: async req => {\n      var _req$params2;\n\n      if (!((_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const message = bs58.decode(req.params.message).toString(\"hex\");\n      const response = await injectedProvider.request({\n        method: \"sign_transaction\",\n        params: {\n          message\n        }\n      });\n      const buf = Buffer.from(response, \"hex\");\n      const sendTx = Transaction.from(buf);\n      return sendTx;\n    },\n    signAndSendTransaction: async req => {\n      var _req$params3;\n\n      if (!((_req$params3 = req.params) !== null && _req$params3 !== void 0 && _req$params3.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const message = bs58.decode(req.params.message).toString(\"hex\");\n      const response = await injectedProvider.request({\n        method: \"send_transaction\",\n        params: {\n          message\n        }\n      });\n      return {\n        signature: response\n      };\n    },\n    signAllTransactions: async req => {\n      var _req$params4, _req$params5;\n\n      if (!((_req$params4 = req.params) !== null && _req$params4 !== void 0 && _req$params4.message) || !((_req$params5 = req.params) !== null && _req$params5 !== void 0 && _req$params5.message.length)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const messages = [];\n\n      for (const transaction of req.params.message) {\n        const message = bs58.decode(transaction).toString(\"hex\");\n        messages.push(message);\n      }\n\n      const response = await injectedProvider.request({\n        method: \"sign_all_transactions\",\n        params: {\n          message: messages\n        }\n      });\n      return response;\n    }\n  };\n  return providerHandlers;\n};\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass TorusInjectedProvider extends BaseProvider {\n  constructor(_ref) {\n    let {\n      config,\n      state\n    } = _ref;\n    super({\n      config: {\n        chainConfig: _objectSpread$1(_objectSpread$1({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.SOLANA\n        })\n      },\n      state\n    });\n  }\n\n  async switchChain(_) {\n    return Promise.resolve();\n  }\n\n  async setupProvider(injectedProvider) {\n    this.handleInjectedProviderUpdate(injectedProvider);\n    await this.setupEngine(injectedProvider);\n  }\n\n  async lookupNetwork() {\n    if (!this.provider) throw ethErrors.provider.custom({\n      message: \"Torus solana provider is not initialized\",\n      code: 4902\n    });\n    const {\n      chainId\n    } = this.config.chainConfig;\n    const connectedChainId = await this.provider.request({\n      method: \"solana_chainId\"\n    });\n    const connectedHexChainId = isHexStrict(connectedChainId.toString()) ? connectedChainId : \"0x\".concat(parseInt(connectedChainId, 10).toString(16));\n    if (chainId !== connectedHexChainId) throw WalletInitializationError.rpcConnectionError(\"Invalid network, net_version is: \".concat(connectedHexChainId, \", expected: \").concat(chainId));\n    this.update({\n      chainId: connectedHexChainId\n    });\n    this.provider.emit(\"connect\", {\n      chainId: this.state.chainId\n    });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return this.state.chainId;\n  }\n\n  async setupEngine(injectedProvider) {\n    const providerHandlers = getTorusHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    const injectedProviderProxy = createInjectedProviderProxyMiddleware(injectedProvider);\n    const engine = new JRPCEngine();\n    engine.push(solanaMiddleware);\n    engine.push(injectedProviderProxy);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  async handleInjectedProviderUpdate(injectedProvider) {\n    injectedProvider.on(\"accountsChanged\", async accounts => {\n      this.provider.emit(\"accountsChanged\", accounts);\n    });\n    injectedProvider.on(\"chainChanged\", async chainId => {\n      const connectedHexChainId = isHexStrict(chainId) ? chainId : \"0x\".concat(parseInt(chainId, 10).toString(16)); // Check if chainId changed and trigger event\n\n      this.configure({\n        chainConfig: _objectSpread$1(_objectSpread$1({}, this.config.chainConfig), {}, {\n          chainId: connectedHexChainId\n        })\n      });\n      await this.setupProvider(injectedProvider);\n    });\n  }\n\n}\n\nfunction createChainIdMiddleware(chainId) {\n  return (req, res, next, end) => {\n    if (req.method === \"solana_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n\n    return next();\n  };\n}\nfunction createProviderConfigMiddleware(providerConfig) {\n  return (req, res, next, end) => {\n    if (req.method === \"solana_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n\n    return next();\n  };\n}\nfunction createJsonRpcClient(providerConfig) {\n  const {\n    chainId,\n    rpcTarget\n  } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({\n    rpcTarget\n  });\n  const networkMiddleware = mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig), fetchMiddleware]);\n  return {\n    networkMiddleware,\n    fetchMiddleware\n  };\n}\n\nasync function getProviderHandlers(_ref) {\n  let {\n    privKey,\n    getProviderEngineProxy\n  } = _ref;\n\n  const transactionGenerator = serializedTx => {\n    const decodedTx = bs58.decode(serializedTx);\n    const tx = Transaction.populate(Message.from(decodedTx));\n    return tx;\n  };\n\n  const keyPairGenerator = () => {\n    return Keypair.fromSecretKey(Buffer.from(privKey, \"hex\"));\n  };\n\n  if (typeof privKey !== \"string\") throw WalletInitializationError.invalidParams(\"privKey must be a string\");\n  const keyPair = keyPairGenerator();\n  const providerHandlers = {\n    requestAccounts: async () => {\n      return [keyPair.publicKey.toBase58()];\n    },\n    getAccounts: async () => [keyPair.publicKey.toBase58()],\n    getPrivateKey: async () => privKey,\n    signTransaction: async req => {\n      var _req$params, _req$params2;\n\n      if (!((_req$params = req.params) !== null && _req$params !== void 0 && _req$params.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const transaction = transactionGenerator((_req$params2 = req.params) === null || _req$params2 === void 0 ? void 0 : _req$params2.message);\n      transaction.partialSign(keyPair);\n      return transaction;\n    },\n    signMessage: async req => {\n      var _req$params3;\n\n      if (!((_req$params3 = req.params) !== null && _req$params3 !== void 0 && _req$params3.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const signedMsg = nacl.sign.detached(req.params.message, keyPair.secretKey);\n      return signedMsg;\n    },\n    signAndSendTransaction: async req => {\n      var _req$params4, _req$params5;\n\n      if (!((_req$params4 = req.params) !== null && _req$params4 !== void 0 && _req$params4.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const _providerEngineProxy = getProviderEngineProxy();\n\n      if (!_providerEngineProxy) throw ethErrors.provider.custom({\n        message: \"Provider is not initialized\",\n        code: 4902\n      });\n      const transaction = transactionGenerator((_req$params5 = req.params) === null || _req$params5 === void 0 ? void 0 : _req$params5.message);\n      transaction.sign(keyPair);\n      const sig = await _providerEngineProxy.request({\n        method: \"sendTransaction\",\n        params: [bs58.encode(transaction.serialize())]\n      });\n      return {\n        signature: sig\n      };\n    },\n    signAllTransactions: async req => {\n      var _req$params6, _req$params7;\n\n      if (!((_req$params6 = req.params) !== null && _req$params6 !== void 0 && _req$params6.message) || !((_req$params7 = req.params) !== null && _req$params7 !== void 0 && _req$params7.message.length)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const signedTransactions = [];\n\n      for (const tx of ((_req$params8 = req.params) === null || _req$params8 === void 0 ? void 0 : _req$params8.message) || []) {\n        var _req$params8;\n\n        const transaction = transactionGenerator(tx);\n        transaction.partialSign(keyPair);\n        signedTransactions.push(transaction);\n      }\n\n      return signedTransactions;\n    }\n  };\n  return providerHandlers;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass SolanaPrivateKeyProvider extends BaseProvider {\n  constructor(_ref) {\n    let {\n      config,\n      state\n    } = _ref;\n    super({\n      config: {\n        chainConfig: _objectSpread(_objectSpread({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.SOLANA\n        })\n      },\n      state\n    });\n  }\n\n  async enable() {\n    if (!this.state.privateKey) throw ethErrors.provider.custom({\n      message: \"Private key is not found in state, plz pass it in constructor state param\",\n      code: 4902\n    });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request({\n      method: \"eth_accounts\"\n    });\n  }\n\n  async setupProvider(privKey) {\n    const providerHandlers = await getProviderHandlers({\n      privKey,\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this)\n    });\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    const engine = new JRPCEngine();\n    const {\n      networkMiddleware\n    } = createJsonRpcClient(this.config.chainConfig);\n    engine.push(this.getChainSwitchMiddleware());\n    engine.push(this.getAccountMiddleware());\n    engine.push(solanaMiddleware);\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  async updateAccount(params) {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const existingKey = await this._providerEngineProxy.request({\n      method: \"solanaPrivateKey\"\n    });\n\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request({\n          method: \"requestAccounts\"\n        })\n      });\n    }\n  }\n\n  async switchChain(params) {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\"\n    });\n    this.configure({\n      chainConfig\n    });\n    const privKey = await this._providerEngineProxy.request({\n      method: \"solanaPrivateKey\"\n    });\n    await this.setupProvider(privKey);\n  }\n\n  async lookupNetwork() {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const health = await this._providerEngineProxy.request({\n      method: \"getHealth\",\n      params: []\n    });\n    const {\n      chainConfig\n    } = this.config;\n    if (health !== \"ok\") throw WalletInitializationError.rpcConnectionError(\"Failed to lookup network for following rpc target: \".concat(chainConfig.rpcTarget));\n    this.update({\n      chainId: chainConfig.chainId\n    });\n\n    if (this.state.chainId !== chainConfig.chainId) {\n      this.provider.emit(\"chainChanged\", this.state.chainId);\n      this.provider.emit(\"connect\", {\n        chainId: this.state.chainId\n      });\n    }\n\n    return this.state.chainId;\n  }\n\n  getChainSwitchMiddleware() {\n    const chainSwitchHandlers = {\n      addNewChainConfig: async req => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        const {\n          chainId,\n          chainName,\n          rpcUrls,\n          blockExplorerUrls,\n          nativeCurrency\n        } = req.params;\n        if (!chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n        if (!rpcUrls || rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n        if (!nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n        this.addChain({\n          chainNamespace: CHAIN_NAMESPACES.SOLANA,\n          chainId,\n          ticker: (nativeCurrency === null || nativeCurrency === void 0 ? void 0 : nativeCurrency.symbol) || \"SOL\",\n          tickerName: (nativeCurrency === null || nativeCurrency === void 0 ? void 0 : nativeCurrency.name) || \"Solana\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: (blockExplorerUrls === null || blockExplorerUrls === void 0 ? void 0 : blockExplorerUrls[0]) || \"\"\n        });\n      },\n      switchSolanaChain: async req => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n        await this.switchChain(req.params);\n      }\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  getAccountMiddleware() {\n    const accountHandlers = {\n      updatePrivatekey: async req => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.privateKey) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n        const {\n          privateKey\n        } = req.params;\n        await this.updateAccount({\n          privateKey\n        });\n      }\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n\n}\n\n_defineProperty(SolanaPrivateKeyProvider, \"getProviderInstance\", async params => {\n  const providerFactory = new SolanaPrivateKeyProvider({\n    config: {\n      chainConfig: params.chainConfig\n    }\n  });\n  await providerFactory.setupProvider(params.privKey);\n  return providerFactory;\n});\n\nclass SolanaWallet {\n  constructor(provider) {\n    _defineProperty(this, \"provider\", void 0);\n\n    this.provider = provider;\n  }\n\n  async requestAccounts() {\n    const accounts = await this.provider.request({\n      method: \"requestAccounts\",\n      params: {}\n    });\n    return accounts;\n  }\n\n  async signAndSendTransaction(transaction) {\n    const {\n      signature\n    } = await this.provider.request({\n      method: \"signAndSendTransaction\",\n      params: {\n        message: bs58.encode(transaction.serialize({\n          requireAllSignatures: false\n        }))\n      }\n    });\n    return {\n      signature\n    };\n  }\n\n  async signTransaction(transaction) {\n    const signedTransaction = await this.provider.request({\n      method: \"signTransaction\",\n      params: {\n        message: bs58.encode(transaction.serialize({\n          requireAllSignatures: false\n        }))\n      }\n    });\n    return signedTransaction;\n  }\n\n  async signAllTransactions(transactions) {\n    const messages = transactions.map(transaction => {\n      return bs58.encode(transaction.serialize({\n        requireAllSignatures: false\n      }));\n    });\n    const signedTransaction = await this.provider.request({\n      method: \"signAllTransactions\",\n      params: {\n        message: messages\n      }\n    });\n    return signedTransaction;\n  }\n\n  async signMessage(data) {\n    const response = await this.provider.request({\n      method: \"signMessage\",\n      params: {\n        message: data\n      }\n    });\n    return response;\n  }\n\n  async request(args) {\n    const result = await this.provider.request(args);\n    return result;\n  }\n\n}\n\nexport { PhantomInjectedProvider, SolanaPrivateKeyProvider, SolanaWallet, TorusInjectedProvider };\n//# sourceMappingURL=solanaProvider.esm.js.map\n",null,null,null,null,null,null,null,null,null,"/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import { Struct, Infer, Result, Context, Describe } from './struct'\nimport { Failure } from './error'\n\n/**\n * Check if a value is an iterator.\n */\n\nfunction isIterable<T>(x: unknown): x is Iterable<T> {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function'\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isObject(x: unknown): x is object {\n  return typeof x === 'object' && x != null\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isPlainObject(x: unknown): x is { [key: string]: any } {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(x)\n  return prototype === null || prototype === Object.prototype\n}\n\n/**\n * Return a value as a printable string.\n */\n\nexport function print(value: any): string {\n  return typeof value === 'string' ? JSON.stringify(value) : `${value}`\n}\n\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nexport function shiftIterator<T>(input: Iterator<T>): T | undefined {\n  const { done, value } = input.next()\n  return done ? undefined : value\n}\n\n/**\n * Convert a single validation result to a failure.\n */\n\nexport function toFailure<T, S>(\n  result: string | boolean | Partial<Failure>,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): Failure | undefined {\n  if (result === true) {\n    return\n  } else if (result === false) {\n    result = {}\n  } else if (typeof result === 'string') {\n    result = { message: result }\n  }\n\n  const { path, branch } = context\n  const { type } = struct\n  const {\n    refinement,\n    message = `Expected a value of type \\`${type}\\`${\n      refinement ? ` with refinement \\`${refinement}\\`` : ''\n    }, but received: \\`${print(value)}\\``,\n  } = result\n\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message,\n  }\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nexport function* toFailures<T, S>(\n  result: Result,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): IterableIterator<Failure> {\n  if (!isIterable(result)) {\n    result = [result]\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value)\n\n    if (failure) {\n      yield failure\n    }\n  }\n}\n\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nexport function* run<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    path?: any[]\n    branch?: any[]\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): IterableIterator<[Failure, undefined] | [undefined, T]> {\n  const { path = [], branch = [value], coerce = false, mask = false } = options\n  const ctx: Context = { path, branch }\n\n  if (coerce) {\n    value = struct.coercer(value, ctx)\n\n    if (\n      mask &&\n      struct.type !== 'type' &&\n      isObject(struct.schema) &&\n      isObject(value) &&\n      !Array.isArray(value)\n    ) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key]\n        }\n      }\n    }\n  }\n\n  let valid = true\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false\n    yield [failure, undefined]\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s as Struct, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask,\n    })\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false\n        yield [t[0], undefined]\n      } else if (coerce) {\n        v = t[1]\n\n        if (k === undefined) {\n          value = v\n        } else if (value instanceof Map) {\n          value.set(k, v)\n        } else if (value instanceof Set) {\n          value.add(v)\n        } else if (isObject(value)) {\n          value[k] = v\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value as T, ctx)) {\n      valid = false\n      yield [failure, undefined]\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value as T]\n  }\n}\n\n/**\n * Assign properties from one type to another, overwriting existing.\n */\n\nexport type Assign<T, U> = Simplify<U & Omit<T, keyof U>>\n\n/**\n * A schema for enum structs.\n */\n\nexport type EnumSchema<T extends string | number> = { [K in T]: K }\n\n/**\n * Check if a type is an exact match.\n */\n\nexport type IsMatch<T, G> = T extends G ? (G extends T ? T : never) : never\n\n/**\n * Check if a type is a record type.\n */\n\nexport type IsRecord<T> = T extends object\n  ? string extends keyof T\n    ? T\n    : never\n  : never\n/**\n * Check if a type is a tuple.\n */\n\nexport type IsTuple<T> = T extends [any]\n  ? T\n  : T extends [any, any]\n  ? T\n  : T extends [any, any, any]\n  ? T\n  : T extends [any, any, any, any]\n  ? T\n  : T extends [any, any, any, any, any]\n  ? T\n  : never\n\n/**\n * Check if a type is a union.\n */\n\nexport type IsUnion<T, U extends T = T> = (\n  T extends any ? (U extends T ? false : true) : false\n) extends false\n  ? never\n  : T\n\n/**\n * A schema for object structs.\n */\n\nexport type ObjectSchema = Record<string, Struct<any, any>>\n\n/**\n * Infer a type from an object struct schema.\n */\n\nexport type ObjectType<S extends ObjectSchema> = Simplify<\n  Optionalize<{ [K in keyof S]: Infer<S[K]> }>\n>\n\n/**\n * Omit properties from a type that extend from a specific type.\n */\n\nexport type OmitBy<T, V> = Omit<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Normalize properties of a type that allow `undefined` to make them optional.\n */\n\nexport type Optionalize<S extends object> = OmitBy<S, undefined> &\n  Partial<PickBy<S, undefined>>\n\n/**\n * Transform an object schema type to represent a partial.\n */\n\nexport type PartialObjectSchema<S extends ObjectSchema> = {\n  [K in keyof S]: Struct<Infer<S[K]> | undefined>\n}\n\n/**\n * Pick properties from a type that extend from a specific type.\n */\n\nexport type PickBy<T, V> = Pick<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Simplifies a type definition to its most basic representation.\n */\n\nexport type Simplify<T> = T extends any[] | Date\n  ? T\n  : { [K in keyof T]: T[K] } & {}\n\nexport type If<B extends Boolean, Then, Else> = B extends true ? Then : Else\n\n/**\n * A schema for any type of struct.\n */\n\nexport type StructSchema<T> = [T] extends [string]\n  ? [T] extends [IsMatch<T, string>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [number]\n  ? [T] extends [IsMatch<T, number>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [boolean]\n  ? [T] extends [IsMatch<T, boolean>]\n    ? null\n    : T\n  : T extends\n      | bigint\n      | symbol\n      | undefined\n      | null\n      | Function\n      | Date\n      | Error\n      | RegExp\n      | Map<any, any>\n      | WeakMap<any, any>\n      | Set<any>\n      | WeakSet<any>\n      | Promise<any>\n  ? null\n  : T extends Array<infer E>\n  ? T extends IsTuple<T>\n    ? null\n    : Struct<E>\n  : T extends object\n  ? T extends IsRecord<T>\n    ? null\n    : { [K in keyof T]: Describe<T[K]> }\n  : null\n\n/**\n * A schema for tuple structs.\n */\n\nexport type TupleSchema<T> = { [K in keyof T]: Struct<T[K]> }\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any\n  key: any\n  type: string\n  refinement: string | undefined\n  message: string\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any\n  key!: any\n  type!: string\n  refinement!: string | undefined\n  path!: Array<any>\n  branch!: Array<any>\n  failures: () => Array<Failure>;\n  [x: string]: any\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Array<Failure> | undefined\n    const { message, ...rest } = failure\n    const { path } = failure\n    const msg =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`\n    super(msg)\n    Object.assign(this, rest)\n    this.name = this.constructor.name\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()])\n    }\n  }\n}\n","import { toFailures, shiftIterator, StructSchema, run } from './utils'\nimport { StructError, Failure } from './error'\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nexport class Struct<T = unknown, S = unknown> {\n  readonly TYPE!: T\n  type: string\n  schema: S\n  coercer: (value: unknown, context: Context) => unknown\n  validator: (value: unknown, context: Context) => Iterable<Failure>\n  refiner: (value: T, context: Context) => Iterable<Failure>\n  entries: (\n    value: unknown,\n    context: Context\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>\n\n  constructor(props: {\n    type: string\n    schema: S\n    coercer?: Coercer\n    validator?: Validator\n    refiner?: Refiner<T>\n    entries?: Struct<T, S>['entries']\n  }) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {},\n    } = props\n\n    this.type = type\n    this.schema = schema\n    this.entries = entries\n    this.coercer = coercer\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.validator = () => []\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.refiner = () => []\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown): asserts value is T {\n    return assert(value, this)\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown): T {\n    return create(value, this)\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is T {\n    return is(value, this)\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown): T {\n    return mask(value, this)\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean\n    } = {}\n  ): [StructError, undefined] | [undefined, T] {\n    return validate(value, this, options)\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nexport function assert<T, S>(\n  value: unknown,\n  struct: Struct<T, S>\n): asserts value is T {\n  const result = validate(value, struct)\n\n  if (result[0]) {\n    throw result[0]\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nexport function create<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nexport function mask<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true, mask: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Check if a value passes a struct.\n */\n\nexport function is<T, S>(value: unknown, struct: Struct<T, S>): value is T {\n  const result = validate(value, struct)\n  return !result[0]\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nexport function validate<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): [StructError, undefined] | [undefined, T] {\n  const tuples = run(value, struct, options)\n  const tuple = shiftIterator(tuples)!\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0]\n        }\n      }\n    })\n\n    return [error, undefined]\n  } else {\n    const v = tuple[1]\n    return [undefined, v]\n  }\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<T extends Struct<any, any>> = T['TYPE']\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<T> = Struct<T, StructSchema<T>>\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<T = unknown> = (value: T, context: Context) => unknown\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<T> = (value: T, context: Context) => Result\n","import { Struct, Context, Validator } from '../struct'\nimport { object, optional } from './types'\nimport { ObjectSchema, Assign, ObjectType, PartialObjectSchema } from '../utils'\n\n/**\n * Create a new struct that combines the properties properties from multiple\n * object structs.\n *\n * Like JavaScript's `Object.assign` utility.\n */\n\nexport function assign<A extends ObjectSchema, B extends ObjectSchema>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>\n): Struct<ObjectType<Assign<A, B>>, Assign<A, B>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>\n): Struct<ObjectType<Assign<Assign<A, B>, C>>, Assign<Assign<A, B>, C>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>\n): Struct<\n  ObjectType<Assign<Assign<Assign<A, B>, C>, D>>,\n  Assign<Assign<Assign<A, B>, C>, D>\n>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema,\n  E extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>,\n  E: Struct<ObjectType<E>, E>\n): Struct<\n  ObjectType<Assign<Assign<Assign<Assign<A, B>, C>, D>, E>>,\n  Assign<Assign<Assign<Assign<A, B>, C>, D>, E>\n>\nexport function assign(...Structs: Struct<any>[]): any {\n  const schemas = Structs.map((s) => s.schema)\n  const schema = Object.assign({}, ...schemas)\n  return object(schema)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n */\n\nexport function define<T>(name: string, validator: Validator): Struct<T, null> {\n  return new Struct({ type: name, schema: null, validator })\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nexport function deprecated<T>(\n  struct: Struct<T>,\n  log: (value: unknown, ctx: Context) => void\n): Struct<T> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true\n      } else {\n        log(value, ctx)\n        return struct.validator(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nexport function dynamic<T>(\n  fn: (value: unknown, ctx: Context) => Struct<T, any>\n): Struct<T, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx)\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nexport function lazy<T>(fn: () => Struct<T, any>): Struct<T, null> {\n  let struct: Struct<T, any> | undefined\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn()\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      struct ??= fn()\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      struct ??= fn()\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nexport function omit<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Omit<S, K>>, Omit<S, K>> {\n  const { schema } = struct\n  const subschema: any = { ...schema }\n\n  for (const key of keys) {\n    delete subschema[key]\n  }\n\n  return object(subschema as Omit<S, K>)\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nexport function partial<S extends ObjectSchema>(\n  struct: Struct<ObjectType<S>, S> | S\n): Struct<ObjectType<PartialObjectSchema<S>>, PartialObjectSchema<S>> {\n  const schema: any =\n    struct instanceof Struct ? { ...struct.schema } : { ...struct }\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key])\n  }\n\n  return object(schema) as any\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nexport function pick<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Pick<S, K>>, Pick<S, K>> {\n  const { schema } = struct\n  const subschema: any = {}\n\n  for (const key of keys) {\n    subschema[key] = schema[key]\n  }\n\n  return object(subschema as Pick<S, K>)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nexport function struct<T>(name: string, validator: Validator): Struct<T, null> {\n  console.warn(\n    'superstruct@0.11 - The `struct` helper has been renamed to `define`.'\n  )\n\n  return define(name, validator)\n}\n","import { Infer, Struct } from '../struct'\nimport { define } from './utilities'\nimport {\n  TupleSchema,\n  ObjectSchema,\n  ObjectType,\n  print,\n  run,\n  isObject,\n} from '../utils'\n\n/**\n * Ensure that any value passes validation.\n */\n\nexport function any(): Struct<any, null> {\n  return define('any', () => true)\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n */\n\nexport function array<T extends Struct<any>>(Element: T): Struct<Infer<T>[], T>\nexport function array(): Struct<unknown[], undefined>\nexport function array<T extends Struct<any>>(Element?: T): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a boolean.\n */\n\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean'\n  })\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n */\n\nexport function enums<T extends number>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends string>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends number | string>(values: readonly T[]): any {\n  const schema: any = {}\n  const description = values.map((v) => print(v)).join()\n\n  for (const key of values) {\n    schema[key] = key\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a function.\n */\n\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nexport function instance<T extends { new (...args: any): any }>(\n  Class: T\n): Struct<InstanceType<T>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an integer.\n */\n\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n */\n\nexport function intersection<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function intersection<A, B>(\n  Structs: TupleSchema<[A, B]>\n): Struct<A & B, null>\nexport function intersection<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A & B & C, null>\nexport function intersection<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A & B & C & D, null>\nexport function intersection<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A & B & C & D & E, null>\nexport function intersection<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A & B & C & D & E & F, null>\nexport function intersection<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A & B & C & D & E & F & G, null>\nexport function intersection<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A & B & C & D & E & F & G & H, null>\nexport function intersection<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A & B & C & D & E & F & G & H & I, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A & B & C & D & E & F & G & H & I & J, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P & Q,\n  null\n>\nexport function intersection(Structs: Array<Struct<any, any>>): any {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx)\n      }\n    },\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx)\n      }\n    },\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n */\n\nexport function literal<T extends boolean>(constant: T): Struct<T, T>\nexport function literal<T extends number>(constant: T): Struct<T, T>\nexport function literal<T extends string>(constant: T): Struct<T, T>\nexport function literal<T>(constant: T): Struct<T, null>\nexport function literal<T>(constant: T): any {\n  const description = print(constant)\n  const t = typeof constant\n  return new Struct({\n    type: 'literal',\n    schema:\n      t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n */\n\nexport function map(): Struct<Map<unknown, unknown>, null>\nexport function map<K, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Map<K, V>, null>\nexport function map<K, V>(Key?: Struct<K>, Value?: Struct<V>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k as string, k, Key]\n          yield [k as string, v, Value]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that no value ever passes validation.\n */\n\nexport function never(): Struct<never, null> {\n  return define('never', () => false)\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nexport function nullable<T, S>(struct: Struct<T, S>): Struct<T | null, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is a number.\n */\n\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an object, that is has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n */\n\nexport function object(): Struct<Record<string, unknown>, null>\nexport function object<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S>\nexport function object<S extends ObjectSchema>(schema?: S): any {\n  const knowns = schema ? Object.keys(schema) : []\n  const Never = never()\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value))\n\n        for (const key of knowns) {\n          unknowns.delete(key)\n          yield [key, value[key], schema[key]]\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value\n    },\n  })\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nexport function optional<T, S>(struct: Struct<T, S>): Struct<T | undefined, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nexport function record<K extends string, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Record<K, V>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k]\n          yield [k, k, Key]\n          yield [k, v, Value]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp\n  })\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n */\n\nexport function set(): Struct<Set<unknown>, null>\nexport function set<T>(Element: Struct<T>): Struct<Set<T>, null>\nexport function set<T>(Element?: Struct<T>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v as string, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a string.\n */\n\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\n\nexport function tuple<A>(Structs: TupleSchema<[A]>): Struct<[A], null>\nexport function tuple<A, B>(Structs: TupleSchema<[A, B]>): Struct<[A, B], null>\nexport function tuple<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<[A, B, C], null>\nexport function tuple<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<[A, B, C, D], null>\nexport function tuple<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<[A, B, C, D, E], null>\nexport function tuple<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<[A, B, C, D, E, F], null>\nexport function tuple<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<[A, B, C, D, E, F, G], null>\nexport function tuple<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<[A, B, C, D, E, F, G, H], null>\nexport function tuple<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<[A, B, C, D, E, F, G, H, I], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<[A, B, C, D, E, F, G, H, I, J], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q], null>\nexport function tuple(Elements: Struct<any>[]): any {\n  const Never = never()\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length)\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nexport function type<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S> {\n  const keys = Object.keys(schema)\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nexport function union<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function union<A, B>(Structs: TupleSchema<[A, B]>): Struct<A | B, null>\nexport function union<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A | B | C, null>\nexport function union<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A | B | C | D, null>\nexport function union<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A | B | C | D | E, null>\nexport function union<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A | B | C | D | E | F, null>\nexport function union<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A | B | C | D | E | F | G, null>\nexport function union<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A | B | C | D | E | F | G | H, null>\nexport function union<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A | B | C | D | E | F | G | H | I, null>\nexport function union<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A | B | C | D | E | F | G | H | I | J, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q,\n  null\n>\nexport function union(Structs: Struct<any>[]): any {\n  const description = Structs.map((s) => s.type).join(' | ')\n  return new Struct({\n    type: 'union',\n    schema: null,\n    validator(value, ctx) {\n      const failures = []\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx)\n        const [first] = tuples\n\n        if (!first[0]) {\n          return []\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure)\n            }\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value\n        )}`,\n        ...failures,\n      ]\n    },\n  })\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true)\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import { Struct, is, Coercer } from '../struct'\nimport { isPlainObject } from '../utils'\nimport { string, unknown } from './types'\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function coerce<T, S, C>(\n  struct: Struct<T, S>,\n  condition: Struct<C, any>,\n  coercer: Coercer<C>\n): Struct<T, S> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function defaulted<T, S>(\n  struct: Struct<T, S>,\n  fallback: any,\n  options: {\n    strict?: boolean\n  } = {}\n): Struct<T, S> {\n  return coerce(struct, unknown(), (x) => {\n    const f = typeof fallback === 'function' ? fallback() : fallback\n\n    if (x === undefined) {\n      return f\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x }\n      let changed = false\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key]\n          changed = true\n        }\n      }\n\n      if (changed) {\n        return ret\n      }\n    }\n\n    return x\n  })\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function trimmed<T, S>(struct: Struct<T, S>): Struct<T, S> {\n  return coerce(struct, string(), (x) => x.trim())\n}\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        let url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"logger/5.6.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"bytes/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n    if (isBytesLike(signature)) {\n        let bytes = arrayify(signature);\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n        }\n        else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        }\n        else {\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map","export const version = \"sha2/5.6.0\";\n//# sourceMappingURL=_version.js.map","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport nacl from 'tweetnacl';\nimport {sha256} from '@ethersproject/sha2';\n\nimport {Struct, SOLANA_SCHEMA} from './util/borsh-schema';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Buffer\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != 32) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Default public key value. (All zeros)\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === 32) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const hash = sha256(new Uint8Array(buffer)).slice(2);\n    return new PublicKey(Buffer.from(hash, 'hex'));\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    let hash = sha256(new Uint8Array(buffer)).slice(2);\n    let publicKeyBytes = new BN(hash, 16).toArray(undefined, 32);\n    if (is_on_curve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return is_on_curve(pubkey.toBytes()) == 1;\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n\n// @ts-ignore\nlet naclLowLevel = nacl.lowlevel;\n\n// Check that a pubkey is on the curve.\n// This function and its dependents were sourced from:\n// https://github.com/dchest/tweetnacl-js/blob/f1ec050ceae0861f34280e62498b1d3ed9c350c6/nacl.js#L792\nfunction is_on_curve(p: any) {\n  var r = [\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n  ];\n\n  var t = naclLowLevel.gf(),\n    chk = naclLowLevel.gf(),\n    num = naclLowLevel.gf(),\n    den = naclLowLevel.gf(),\n    den2 = naclLowLevel.gf(),\n    den4 = naclLowLevel.gf(),\n    den6 = naclLowLevel.gf();\n\n  naclLowLevel.set25519(r[2], gf1);\n  naclLowLevel.unpack25519(r[1], p);\n  naclLowLevel.S(num, r[1]);\n  naclLowLevel.M(den, num, naclLowLevel.D);\n  naclLowLevel.Z(num, num, r[2]);\n  naclLowLevel.A(den, r[2], den);\n\n  naclLowLevel.S(den2, den);\n  naclLowLevel.S(den4, den2);\n  naclLowLevel.M(den6, den4, den2);\n  naclLowLevel.M(t, den6, num);\n  naclLowLevel.M(t, t, den);\n\n  naclLowLevel.pow2523(t, t);\n  naclLowLevel.M(t, t, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(r[0], t, den);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) naclLowLevel.M(r[0], r[0], I);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) return 0;\n  return 1;\n}\nlet gf1 = naclLowLevel.gf([1]);\nlet I = naclLowLevel.gf([\n  0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7,\n  0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83,\n]);\nfunction neq25519(a: any, b: any) {\n  var c = new Uint8Array(32),\n    d = new Uint8Array(32);\n  naclLowLevel.pack25519(c, a);\n  naclLowLevel.pack25519(d, b);\n  return naclLowLevel.crypto_verify_32(c, 0, d, 0);\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    if (item.span >= 0) {\n      alloc += item.span;\n    } else if (typeof item.alloc === 'function') {\n      alloc += item.alloc(fields[item.property]);\n    }\n  });\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PACKET_DATA_SIZE} from './transaction-constants';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * The message header, identifying signed and read-only account\n */\nexport type MessageHeader = {\n  /**\n   * The number of signatures required for this message to be considered valid. The\n   * signatures must match the first `numRequiredSignatures` of `accountKeys`.\n   */\n  numRequiredSignatures: number;\n  /** The last `numReadonlySignedAccounts` of the signed keys are read-only accounts */\n  numReadonlySignedAccounts: number;\n  /** The last `numReadonlySignedAccounts` of the unsigned keys are read-only accounts */\n  numReadonlyUnsignedAccounts: number;\n};\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nconst PUBKEY_LENGTH = 32;\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    return (\n      index <\n        this.header.numRequiredSignatures -\n          this.header.numReadonlySignedAccounts ||\n      (index >= this.header.numRequiredSignatures &&\n        index <\n          this.accountKeys.length - this.header.numReadonlyUnsignedAccounts)\n    );\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift() as number;\n    const numReadonlySignedAccounts = byteArray.shift() as number;\n    const numReadonlyUnsignedAccounts = byteArray.shift() as number;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBKEY_LENGTH);\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      accountKeys.push(bs58.encode(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBKEY_LENGTH);\n    byteArray = byteArray.slice(PUBKEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import nacl from 'tweetnacl';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {\n  PACKET_DATA_SIZE,\n  SIGNATURE_LENGTH_IN_BYTES,\n} from './transaction-constants';\nimport {Connection} from './connection';\nimport {Message} from './message';\nimport {PublicKey} from './publickey';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\nimport invariant from './util/assert';\nimport type {Signer} from './keypair';\nimport type {Blockhash} from './blockhash';\nimport type {CompiledInstruction} from './message';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?: TransactionBlockhashCtor | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    } else if (\n      Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')\n    ) {\n      const newOpts = opts as TransactionBlockhashCtor;\n      Object.assign(this, newOpts);\n      this.recentBlockhash = newOpts.blockhash;\n      this.lastValidBlockHeight = newOpts.lastValidBlockHeight;\n    } else {\n      const oldOpts = opts as TransactionCtorFields_DEPRECATED;\n      Object.assign(this, oldOpts);\n      this.recentBlockhash = oldOpts.recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    const {nonceInfo} = this;\n    if (nonceInfo && this.instructions[0] != nonceInfo.nonceInstruction) {\n      this.recentBlockhash = nonceInfo.nonce;\n      this.instructions.unshift(nonceInfo.nonceInstruction);\n    }\n    const {recentBlockhash} = this;\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (this.instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < this.instructions.length; i++) {\n      if (this.instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    this.instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const instructions: CompiledInstruction[] = this.instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    instructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = nacl.sign.detached(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (\n          !nacl.sign.detached.verify(signData, signature, publicKey.toBuffer())\n        ) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status =\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n      ? (\n          await connection.confirmTransaction(\n            {\n              signature: signature,\n              blockhash: transaction.recentBlockhash,\n              lastValidBlockHeight: transaction.lastValidBlockHeight,\n            },\n            options && options.commitment,\n          )\n        ).value\n      : (\n          await connection.confirmTransaction(\n            signature,\n            options && options.commitment,\n          )\n        ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {NONCE_ACCOUNT_LENGTH} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\nimport {u64} from './util/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './util/send-and-confirm-transaction';\nimport {sleep} from './util/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './system-program';\nimport {IInstructionInputData} from './instruction';\nimport {PACKET_DATA_SIZE} from './transaction-constants';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport {u64} from './util/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\n\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError} from './errors';\nimport fetchImpl, {Response} from './fetch-impl';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {Transaction, TransactionStatus} from './transaction';\nimport {Message} from './message';\nimport assert from './util/assert';\nimport {sleep} from './util/sleep';\nimport {toBuffer} from './util/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredTimeoutError,\n} from './util/tx-expiry-custom-errors';\nimport {makeWebsocketUrl} from './util/url';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => any;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => any;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy = {\n  signature: TransactionSignature;\n} & BlockhashWithExpiryBlockHeight;\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n};\n\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A confirmed transaction on the ledger\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A ConfirmedBlock on the ledger\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  useHttps: boolean,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(useHttps);\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n  }),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64) */\n  encoding?: 'base64' | 'jsonParsed';\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {[header: string]: string};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let url = new URL(endpoint);\n    const useHttps = url.protocol === 'https:';\n\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = endpoint;\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      url.toString(),\n      useHttps,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get balance for ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block time for slot ' + slot + ': ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get minimum ledger slot: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get first available block: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new Error('failed to get token supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token account balance: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get largest accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token largest accounts: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info for accounts ' + keys + ': ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitment?: Commitment,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitment,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined,\n      epoch !== undefined ? {epoch} : undefined,\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new Error(\n        `failed to get Stake Activation ${publicKey.toBase58()}: ${\n          res.error.message\n        }`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const extra: Pick<GetProgramAccountsConfig, 'dataSlice' | 'filters'> = {};\n\n    let commitment;\n    let encoding;\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n        encoding = configOrCommitment.encoding;\n\n        if (configOrCommitment.dataSlice) {\n          extra.dataSlice = configOrCommitment.dataSlice;\n        }\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      extra,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const extra: Pick<GetParsedProgramAccountsConfig, 'filters'> = {};\n\n    let commitment;\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      extra,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: BlockheightBasedTransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` using a `TransactionConfirmationConfig` */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy:\n      | BlockheightBasedTransactionConfirmationStrategy\n      | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config =\n        strategy as BlockheightBasedTransactionConfirmationStrategy;\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const subscriptionCommitment = commitment || this.commitment;\n    let timeoutId;\n    let subscriptionId;\n    let done = false;\n\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          rawSignature,\n          (result: SignatureResult, context: Context) => {\n            subscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            done = true;\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    const checkBlockHeight = async () => {\n      try {\n        const blockHeight = await this.getBlockHeight(commitment);\n        return blockHeight;\n      } catch (_e) {\n        return -1;\n      }\n    };\n\n    const expiryPromise = new Promise<\n      | {__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED}\n      | {__type: TransactionStatus.TIMED_OUT; timeoutMs: number}\n    >(resolve => {\n      if (typeof strategy === 'string') {\n        let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n        switch (subscriptionCommitment) {\n          case 'processed':\n          case 'recent':\n          case 'single':\n          case 'confirmed':\n          case 'singleGossip': {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n          // exhaust enums to ensure full coverage\n          case 'finalized':\n          case 'max':\n          case 'root':\n        }\n\n        timeoutId = setTimeout(\n          () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n          timeoutMs,\n        );\n      } else {\n        let config =\n          strategy as BlockheightBasedTransactionConfirmationStrategy;\n        (async () => {\n          let currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n          while (currentBlockHeight <= config.lastValidBlockHeight) {\n            await sleep(1000);\n            if (done) return;\n            currentBlockHeight = await checkBlockHeight();\n            if (done) return;\n          }\n          resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n        })();\n      }\n    });\n\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      switch (outcome.__type) {\n        case TransactionStatus.BLOCKHEIGHT_EXCEEDED:\n          throw new TransactionExpiredBlockheightExceededError(rawSignature);\n        case TransactionStatus.PROCESSED:\n          result = outcome.response;\n          break;\n        case TransactionStatus.TIMED_OUT:\n          throw new TransactionExpiredTimeoutError(\n            rawSignature,\n            outcome.timeoutMs / 1000,\n          );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new Error('failed to get cluster nodes: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new Error('failed to get vote accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(commitment?: Commitment): Promise<string> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new Error('failed to get slot leader: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new Error('failed to get slot leaders: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get signature status: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error('failed to get transaction count: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get inflation: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitment?: Commitment,\n  ): Promise<(InflationReward | null)[]> {\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined,\n      {\n        epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new Error('failed to get inflation reward: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(commitment?: Commitment): Promise<EpochInfo> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get epoch info: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get epoch schedule: ' + res.error.message);\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get leader schedule: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get recent blockhash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const args = this._buildArgs(limit ? [limit] : []);\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get recent performance samples: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get fee calculator: ' + res.error.message);\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: Message,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = message.serialize().toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitment?: Commitment,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get latest blockhash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new Error('failed to get version: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new Error('failed to get genesis hash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  async getBlock(\n    slot: number,\n    opts?: {commitment?: Finality},\n  ): Promise<BlockResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block height information: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block production information: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  async getTransaction(\n    signature: string,\n    opts?: {commitment?: Finality},\n  ): Promise<TransactionResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: new Message(result.transaction.message),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error('failed to get transactions: ' + res.error.message);\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(TransactionResponse | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error('failed to get transactions: ' + res.error.message);\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new Error('failed to get blocks: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get block: ' + res.error.message);\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed transaction: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error(\n          'failed to get confirmed transactions: ' + res.error.message,\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'airdrop to ' + to.toBase58() + ' failed: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * Simulate a transaction\n   */\n  async simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   */\n  async sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration++;\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._subscriptionsByHash[hash] = {\n        ...subscription,\n        state: 'pending',\n      };\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'subscribing',\n                };\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                };\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'pending',\n                };\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._subscriptionsByHash[hash] = {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  };\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._subscriptionsByHash[hash] = {\n                      ...subscription,\n                      state: 'subscribed',\n                    };\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'unsubscribed',\n                };\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import nacl from 'tweetnacl';\n\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    if (keypair) {\n      this._keypair = keypair;\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(nacl.sign.keyPair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    const keypair = nacl.sign.keyPair.fromSecretKey(secretKey);\n    if (!options || !options.skipValidation) {\n      const encoder = new TextEncoder();\n      const signData = encoder.encode('@solana/web3.js-validation-v1');\n      const signature = nacl.sign.detached(signData, keypair.secretKey);\n      if (!nacl.sign.detached.verify(signData, signature, keypair.publicKey)) {\n        throw new Error('provided secretKey is invalid');\n      }\n    }\n    return new Keypair(keypair);\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    return new Keypair(nacl.sign.keyPair.fromSeed(seed));\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return this._keypair.secretKey;\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport nacl from 'tweetnacl';\n\nimport {Keypair} from './keypair';\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = nacl.sign.detached(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport secp256k1 from 'secp256k1';\nimport sha3 from 'js-sha3';\n\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\nimport {toBuffer} from './util/to-buffer';\n\nconst {publicKeyCreate, ecdsaSign} = secp256k1;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(\n        sha3.keccak_256.update(toBuffer(publicKey)).digest(),\n      ).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(\n        sha3.keccak_256.update(toBuffer(message)).digest(),\n      );\n      const {signature, recid: recoveryId} = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './util/shortvec-encoding';\nimport {PublicKey} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    const PUBKEY_LENGTH = 32;\n\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBKEY_LENGTH));\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './util/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'InitializeAccount' | 'Withdraw';\n\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Client = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _websocket = _interopRequireDefault(require(\"./lib/client/websocket.browser\"));\n\nvar _client = _interopRequireDefault(require(\"./lib/client\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Client = /*#__PURE__*/function (_CommonClient) {\n  (0, _inherits2[\"default\"])(Client, _CommonClient);\n\n  var _super = _createSuper(Client);\n\n  function Client() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ws://localhost:8080\";\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$autoconnect = _ref.autoconnect,\n        autoconnect = _ref$autoconnect === void 0 ? true : _ref$autoconnect,\n        _ref$reconnect = _ref.reconnect,\n        reconnect = _ref$reconnect === void 0 ? true : _ref$reconnect,\n        _ref$reconnect_interv = _ref.reconnect_interval,\n        reconnect_interval = _ref$reconnect_interv === void 0 ? 1000 : _ref$reconnect_interv,\n        _ref$max_reconnects = _ref.max_reconnects,\n        max_reconnects = _ref$max_reconnects === void 0 ? 5 : _ref$max_reconnects;\n\n    var generate_request_id = arguments.length > 2 ? arguments[2] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, Client);\n    return _super.call(this, _websocket[\"default\"], address, {\n      autoconnect: autoconnect,\n      reconnect: reconnect,\n      reconnect_interval: reconnect_interval,\n      max_reconnects: max_reconnects\n    }, generate_request_id);\n  }\n\n  return (0, _createClass2[\"default\"])(Client);\n}(_client[\"default\"]);\n\nexports.Client = Client;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n"],"sourceRoot":""}